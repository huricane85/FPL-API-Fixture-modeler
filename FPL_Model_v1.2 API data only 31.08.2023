{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNeVXoWY2tnY/XcnvKTLjk4",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/huricane85/FPL-API-Fixture-modeler/blob/main/FPL_Model_v1.2%20API%20data%20only%2031.08.2023\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b6S0KMo-gSGQ",
        "outputId": "c2822557-3a1f-49bf-ca1b-708fe753772c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'UnderstatScraper'...\n",
            "remote: Enumerating objects: 34, done.\u001b[K\n",
            "remote: Counting objects: 100% (34/34), done.\u001b[K\n",
            "remote: Compressing objects: 100% (31/31), done.\u001b[K\n",
            "remote: Total 34 (delta 11), reused 25 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (34/34), 268.30 KiB | 6.24 MiB/s, done.\n",
            "Resolving deltas: 100% (11/11), done.\n"
          ]
        }
      ],
      "source": [
        "!git clone https://github.com/doughagey/UnderstatScraper"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#!/usr/bin/env python3\n",
        "# -*- coding: utf-8 -*-\n",
        "\"\"\"\n",
        "Created on Mar 1 17:50:36 2020\n",
        "@author: doug hagey\n",
        "\"\"\"\n",
        "\n",
        "import pandas as pd\n",
        "import requests\n",
        "\n",
        "def scrape_understat(payload):\n",
        "    #Build request using url, headers (mimicking what Firefox does normally)\n",
        "    #Works best with verify=True as you won't get the ssl errors. Payload is\n",
        "    #taylored for each request\n",
        "    url = 'https://understat.com/main/getPlayersStats/'\n",
        "    headers = {'content-type':'application/json; charset=utf-8',\n",
        "    'Host': 'understat.com',\n",
        "    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:73.0) Gecko/20100101 Firefox/73.0',\n",
        "    'Accept': 'application/json, text/javascript, */*; q=0.01',\n",
        "    'Accept-Encoding': 'gzip, deflate, br',\n",
        "    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n",
        "    'X-Requested-With': 'XMLHttpRequest',\n",
        "    'Content-Length': '310',\n",
        "    'Origin': 'https: // understat.com',\n",
        "    'Connection': 'keep - alive',\n",
        "    'Referer': 'https: // understat.com / league / EPL'\n",
        "    }\n",
        "    response = requests.post(url, data=payload, headers = headers, verify=True)\n",
        "    response_json = response.json()\n",
        "    inner_wrapper = response_json['response']\n",
        "    json_player_data = inner_wrapper['players']\n",
        "    return json_player_data\n",
        "\n",
        "def clean_df(player_df, weeks):\n",
        "    # Get rid of the columns that we don't care about\n",
        "    #player_df.drop(['yellow_cards','red_cards', 'xGChain','xGBuildup','games','time'], axis=1, inplace=True)\n",
        "    player_df  = player_df.rename(columns={'goals':'goals_'+weeks,'xG':'xG_'+weeks,'assists':'assists_'+weeks, 'xA':'xA_'+weeks, 'shots':'shots_'+weeks, 'key_passes':\n",
        "        'key_passes_'+weeks,'npg':'npg_'+weeks,'npxG':'npxG_'+weeks})\n",
        "    if weeks != '1wks':\n",
        "        player_df.drop(['position','team_title'], axis=1, inplace=True)\n",
        "    return(player_df)\n",
        "\n",
        "#Creprint('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '3'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table,'3wks')\n",
        "\n",
        "\n",
        "print('Getting data for the whole season')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023'})\n",
        "season_table = pd.DataFrame(json_player_data)\n",
        "season_df = clean_df(season_table, 'season')\n",
        "\n",
        "print('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '3'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table, '1wks')\n",
        "\n",
        "print('Merging Tables')\n",
        "EPL_player_df = pd.merge(one_game_df, season_df, on=['id','player_name'])\n",
        "EPL_player_df = pd.merge(EPL_player_df, one_game_df, on=['id','player_name'])\n",
        "\n",
        "\n",
        "print('Writing CSV File')\n",
        "EPL_player_df.to_csv('Understat_EPL_Player_Data_Combined 2021.csv', encoding='utf-8', index=False)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D7aK55NHgZOt",
        "outputId": "491f9339-7ab8-4210-f709-c39527ebaf5f"
      },
      "execution_count": 72,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Getting data for the whole season\n",
            "Getting data for last 1 matches\n",
            "Merging Tables\n",
            "Writing CSV File\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 583
        },
        "id": "n__CYp9pmkGz",
        "outputId": "36d36955-f667-42fd-e95b-d799d9538c35"
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id       player_name games_x time_x goals_1wks_x            xG_1wks_x  \\\n",
              "0     6049       Solly March       3    241            3   2.1514047384262085   \n",
              "1     6552      Bryan Mbeumo       3    270            3    3.051823675632477   \n",
              "2     7814     Taiwo Awoniyi       3    183            3    1.666745364665985   \n",
              "3     8260    Erling Haaland       3    265            3   3.3890090584754944   \n",
              "4      531   Michail Antonio       3    247            2   0.9052570015192032   \n",
              "..     ...               ...     ...    ...          ...                  ...   \n",
              "362  11807       Ian Maatsen       2      4            0                    0   \n",
              "363  11810     Mason Burstow       2      2            0                    0   \n",
              "364  11926     Edson √Ålvarez       2     89            0                    0   \n",
              "365  11984  Youssef Chermiti       1     22            0  0.06607918441295624   \n",
              "366  11998   Hannes Delcroix       1     90            0  0.07460393756628036   \n",
              "\n",
              "    assists_1wks_x            xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0                0   0.1520106978714466           10                 5  ...   \n",
              "1                0    0.264384388923645            7                 3  ...   \n",
              "2                0  0.07604995369911194            5                 2  ...   \n",
              "3                0   0.4058229774236679           16                 4  ...   \n",
              "4                0  0.15586480498313904            5                 1  ...   \n",
              "..             ...                  ...          ...               ...  ...   \n",
              "362              0                    0            0                 0  ...   \n",
              "363              0                    0            0                 0  ...   \n",
              "364              0                    0            0                 0  ...   \n",
              "365              0                    0            1                 0  ...   \n",
              "366              0   0.0830167606472969            2                 2  ...   \n",
              "\n",
              "    shots_1wks_y key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0             10                 5            0         0          M   \n",
              "1              7                 3            0         0          F   \n",
              "2              5                 2            0         0        F S   \n",
              "3             16                 4            0         0          F   \n",
              "4              5                 1            1         0          F   \n",
              "..           ...               ...          ...       ...        ...   \n",
              "362            0                 0            1         0          S   \n",
              "363            0                 0            0         0          S   \n",
              "364            0                 0            1         0        M S   \n",
              "365            1                 0            1         0          S   \n",
              "366            2                 2            0         0          D   \n",
              "\n",
              "          team_title_y npg_1wks_y          npxG_1wks_y              xGChain  \\\n",
              "0             Brighton          3   2.1514047384262085     2.92387917637825   \n",
              "1            Brentford          1   1.5294859409332275   1.5952002853155136   \n",
              "2    Nottingham Forest          3    1.666745364665985   1.7157853245735168   \n",
              "3      Manchester City          3    2.627840220928192   2.9821196794509888   \n",
              "4             West Ham          2   0.9052570015192032   1.6813295632600784   \n",
              "..                 ...        ...                  ...                  ...   \n",
              "362            Chelsea          0                    0                    0   \n",
              "363            Chelsea          0                    0                    0   \n",
              "364           West Ham          0                    0                    0   \n",
              "365            Everton          0  0.06607918441295624                    0   \n",
              "366            Burnley          0  0.07460393756628036  0.11859950423240662   \n",
              "\n",
              "                xGBuildup  \n",
              "0       0.847283273935318  \n",
              "1     0.06571434438228607  \n",
              "2    0.015222105197608471  \n",
              "3      0.5024585798382759  \n",
              "4      0.6202077269554138  \n",
              "..                    ...  \n",
              "362                     0  \n",
              "363                     0  \n",
              "364                     0  \n",
              "365                     0  \n",
              "366   0.03558274731040001  \n",
              "\n",
              "[367 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f80c856b-b529-4e9d-9b51-b16912519605\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6049</td>\n",
              "      <td>Solly March</td>\n",
              "      <td>3</td>\n",
              "      <td>241</td>\n",
              "      <td>3</td>\n",
              "      <td>2.1514047384262085</td>\n",
              "      <td>0</td>\n",
              "      <td>0.1520106978714466</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>2.1514047384262085</td>\n",
              "      <td>2.92387917637825</td>\n",
              "      <td>0.847283273935318</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>3</td>\n",
              "      <td>270</td>\n",
              "      <td>3</td>\n",
              "      <td>3.051823675632477</td>\n",
              "      <td>0</td>\n",
              "      <td>0.264384388923645</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>1</td>\n",
              "      <td>1.5294859409332275</td>\n",
              "      <td>1.5952002853155136</td>\n",
              "      <td>0.06571434438228607</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>3</td>\n",
              "      <td>183</td>\n",
              "      <td>3</td>\n",
              "      <td>1.666745364665985</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07604995369911194</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>3</td>\n",
              "      <td>1.666745364665985</td>\n",
              "      <td>1.7157853245735168</td>\n",
              "      <td>0.015222105197608471</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>3</td>\n",
              "      <td>265</td>\n",
              "      <td>3</td>\n",
              "      <td>3.3890090584754944</td>\n",
              "      <td>0</td>\n",
              "      <td>0.4058229774236679</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>3</td>\n",
              "      <td>2.627840220928192</td>\n",
              "      <td>2.9821196794509888</td>\n",
              "      <td>0.5024585798382759</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>531</td>\n",
              "      <td>Michail Antonio</td>\n",
              "      <td>3</td>\n",
              "      <td>247</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9052570015192032</td>\n",
              "      <td>0</td>\n",
              "      <td>0.15586480498313904</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9052570015192032</td>\n",
              "      <td>1.6813295632600784</td>\n",
              "      <td>0.6202077269554138</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>11807</td>\n",
              "      <td>Ian Maatsen</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>11810</td>\n",
              "      <td>Mason Burstow</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson √Ålvarez</td>\n",
              "      <td>2</td>\n",
              "      <td>89</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>11984</td>\n",
              "      <td>Youssef Chermiti</td>\n",
              "      <td>1</td>\n",
              "      <td>22</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06607918441295624</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Everton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06607918441295624</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>1</td>\n",
              "      <td>90</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07460393756628036</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0830167606472969</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07460393756628036</td>\n",
              "      <td>0.11859950423240662</td>\n",
              "      <td>0.03558274731040001</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>367 rows √ó 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f80c856b-b529-4e9d-9b51-b16912519605')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f80c856b-b529-4e9d-9b51-b16912519605 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f80c856b-b529-4e9d-9b51-b16912519605');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a2a4f8c5-9eda-469b-8cee-55cbbea346f1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a2a4f8c5-9eda-469b-8cee-55cbbea346f1')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a2a4f8c5-9eda-469b-8cee-55cbbea346f1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df.to_csv('one_game_df.csv', encoding='utf-8', index=False)\n",
        "one_game_df['time'] = one_game_df['time'].astype(int)\n",
        "one_game_df = one_game_df[one_game_df['time'] > 40]\n",
        "one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
        "one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
        "one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
        "one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
        "one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
        "one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n",
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])\n",
        "sortXgDifference = seasonedit.sort_values('xgdifference')\n",
        "sortXgDifference.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 519
        },
        "id": "IrXPzyJNg3ui",
        "outputId": "1e348713-ceac-4a46-e763-efecea991070"
      },
      "execution_count": 74,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id                player_name games  goals_1wks   xG_1wks  \\\n",
              "257   8865              Ollie Watkins     3           0  1.917301   \n",
              "335  11356             Enzo Fern√°ndez     3           0  1.480103   \n",
              "201   7080              Matheus Cunha     3           0  1.441056   \n",
              "146   3621                Neal Maupay     2           0  1.375403   \n",
              "55   10048            Nicolas Jackson     3           1  2.331781   \n",
              "22    1250              Mohamed Salah     3           1  2.264723   \n",
              "21    1228            Bruno Fernandes     3           1  2.213971   \n",
              "84     556            Marcus Rashford     3           0  1.187091   \n",
              "27    3697            Odsonne Edouard     3           1  2.005320   \n",
              "232   8066  Arnaut Danjuma Groeneveld     3           0  0.977899   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks position  \\\n",
              "257             2  1.134542          8               7        F   \n",
              "335             0  0.796151          7               8        M   \n",
              "201             0  0.581417          8               4      F M   \n",
              "146             0  0.133534          5               1      F S   \n",
              "55              0  0.556495         11               2        F   \n",
              "22              2  0.816730         10               5        F   \n",
              "21              1  2.161566         13              10        M   \n",
              "84              1  0.362675          9               4      F M   \n",
              "27              0  0.207252         12               3        F   \n",
              "232             0  0.094930          9               1      F S   \n",
              "\n",
              "                  team_title npg_1wks           npxG_1wks             xGChain  \\\n",
              "257              Aston Villa        0  1.9173007905483246   3.724563181400299   \n",
              "335                  Chelsea        0  0.7189342565834522  2.8204139322042465   \n",
              "201  Wolverhampton Wanderers        0  1.4410555809736252  1.4795807898044586   \n",
              "146                  Everton        0  1.3754028677940369  1.3316882029175758   \n",
              "55                   Chelsea        1  2.3317810595035553  2.9263051375746727   \n",
              "22                 Liverpool        1  1.5035541355609894  1.7267902493476868   \n",
              "21         Manchester United        0  1.4528022520244122   3.385380804538727   \n",
              "84         Manchester United        0  1.1870906576514244    2.78689643740654   \n",
              "27            Crystal Palace        1  2.0053196996450424  1.6995162814855576   \n",
              "232                  Everton        0   0.977899432182312  1.1401872709393501   \n",
              "\n",
              "               xGBuildup  xgdifference  xAdifference  \n",
              "257   0.8166293278336525     -1.917301      0.865458  \n",
              "335   1.9619420543313026     -1.480103     -0.796151  \n",
              "201   0.1875201016664505     -1.441056     -0.581417  \n",
              "146  0.06084267050027847     -1.375403     -0.133534  \n",
              "55     0.560810349881649     -1.331781     -0.556495  \n",
              "22   0.09460654854774475     -1.264723      1.183270  \n",
              "21    1.7316634058952332     -1.213971     -1.161566  \n",
              "84    1.3744688481092453     -1.187091      0.637325  \n",
              "27   0.15282482281327248     -1.005320     -0.207252  \n",
              "232  0.09537248313426971     -0.977899     -0.094930  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9ad3a82f-6f50-4de8-bced-9a4d434b941a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>257</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1.917301</td>\n",
              "      <td>2</td>\n",
              "      <td>1.134542</td>\n",
              "      <td>8</td>\n",
              "      <td>7</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0</td>\n",
              "      <td>1.9173007905483246</td>\n",
              "      <td>3.724563181400299</td>\n",
              "      <td>0.8166293278336525</td>\n",
              "      <td>-1.917301</td>\n",
              "      <td>0.865458</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>335</th>\n",
              "      <td>11356</td>\n",
              "      <td>Enzo Fern√°ndez</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1.480103</td>\n",
              "      <td>0</td>\n",
              "      <td>0.796151</td>\n",
              "      <td>7</td>\n",
              "      <td>8</td>\n",
              "      <td>M</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7189342565834522</td>\n",
              "      <td>2.8204139322042465</td>\n",
              "      <td>1.9619420543313026</td>\n",
              "      <td>-1.480103</td>\n",
              "      <td>-0.796151</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>201</th>\n",
              "      <td>7080</td>\n",
              "      <td>Matheus Cunha</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1.441056</td>\n",
              "      <td>0</td>\n",
              "      <td>0.581417</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>F M</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0</td>\n",
              "      <td>1.4410555809736252</td>\n",
              "      <td>1.4795807898044586</td>\n",
              "      <td>0.1875201016664505</td>\n",
              "      <td>-1.441056</td>\n",
              "      <td>-0.581417</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>146</th>\n",
              "      <td>3621</td>\n",
              "      <td>Neal Maupay</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1.375403</td>\n",
              "      <td>0</td>\n",
              "      <td>0.133534</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>F S</td>\n",
              "      <td>Everton</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3754028677940369</td>\n",
              "      <td>1.3316882029175758</td>\n",
              "      <td>0.06084267050027847</td>\n",
              "      <td>-1.375403</td>\n",
              "      <td>-0.133534</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>10048</td>\n",
              "      <td>Nicolas Jackson</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2.331781</td>\n",
              "      <td>0</td>\n",
              "      <td>0.556495</td>\n",
              "      <td>11</td>\n",
              "      <td>2</td>\n",
              "      <td>F</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1</td>\n",
              "      <td>2.3317810595035553</td>\n",
              "      <td>2.9263051375746727</td>\n",
              "      <td>0.560810349881649</td>\n",
              "      <td>-1.331781</td>\n",
              "      <td>-0.556495</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2.264723</td>\n",
              "      <td>2</td>\n",
              "      <td>0.816730</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1</td>\n",
              "      <td>1.5035541355609894</td>\n",
              "      <td>1.7267902493476868</td>\n",
              "      <td>0.09460654854774475</td>\n",
              "      <td>-1.264723</td>\n",
              "      <td>1.183270</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>1228</td>\n",
              "      <td>Bruno Fernandes</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2.213971</td>\n",
              "      <td>1</td>\n",
              "      <td>2.161566</td>\n",
              "      <td>13</td>\n",
              "      <td>10</td>\n",
              "      <td>M</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0</td>\n",
              "      <td>1.4528022520244122</td>\n",
              "      <td>3.385380804538727</td>\n",
              "      <td>1.7316634058952332</td>\n",
              "      <td>-1.213971</td>\n",
              "      <td>-1.161566</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>84</th>\n",
              "      <td>556</td>\n",
              "      <td>Marcus Rashford</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1.187091</td>\n",
              "      <td>1</td>\n",
              "      <td>0.362675</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>F M</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1870906576514244</td>\n",
              "      <td>2.78689643740654</td>\n",
              "      <td>1.3744688481092453</td>\n",
              "      <td>-1.187091</td>\n",
              "      <td>0.637325</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2.005320</td>\n",
              "      <td>0</td>\n",
              "      <td>0.207252</td>\n",
              "      <td>12</td>\n",
              "      <td>3</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1</td>\n",
              "      <td>2.0053196996450424</td>\n",
              "      <td>1.6995162814855576</td>\n",
              "      <td>0.15282482281327248</td>\n",
              "      <td>-1.005320</td>\n",
              "      <td>-0.207252</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>232</th>\n",
              "      <td>8066</td>\n",
              "      <td>Arnaut Danjuma Groeneveld</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0.977899</td>\n",
              "      <td>0</td>\n",
              "      <td>0.094930</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>F S</td>\n",
              "      <td>Everton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.977899432182312</td>\n",
              "      <td>1.1401872709393501</td>\n",
              "      <td>0.09537248313426971</td>\n",
              "      <td>-0.977899</td>\n",
              "      <td>-0.094930</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9ad3a82f-6f50-4de8-bced-9a4d434b941a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9ad3a82f-6f50-4de8-bced-9a4d434b941a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9ad3a82f-6f50-4de8-bced-9a4d434b941a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e79d4f00-f056-43cb-b008-704eaf5b196e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e79d4f00-f056-43cb-b008-704eaf5b196e')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e79d4f00-f056-43cb-b008-704eaf5b196e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 74
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sortXgDifference.tail(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "UxuLfRINhwx7",
        "outputId": "dc33468f-e303-4538-bf00-4a4d88e998ed"
      },
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id         player_name games  goals_1wks   xG_1wks  assists_1wks  \\\n",
              "32   6314    Joachim Andersen     3           1  0.148718             0   \n",
              "57  10715       Jo√£o Palhinha     2           1  0.132745             0   \n",
              "54   9356  Carney Chukwuemeka     2           1  0.068995             0   \n",
              "7    2496               Rodri     3           2  1.057548             1   \n",
              "64  11839       Gustavo Hamer     2           1  0.037110             0   \n",
              "43   7430             Emerson     2           1  0.032621             0   \n",
              "20    922     Andreas Pereira     3           1  0.023749             0   \n",
              "4     531     Michail Antonio     3           2  0.905257             0   \n",
              "11   6556        Moussa Diaby     3           2  0.769101             1   \n",
              "2    7814       Taiwo Awoniyi     3           3  1.666745             0   \n",
              "\n",
              "     xA_1wks shots_1wks key_passes_1wks position         team_title npg_1wks  \\\n",
              "32  0.375143          3               7        D     Crystal Palace        1   \n",
              "57  0.000000          2               0      M S             Fulham        1   \n",
              "54  0.104601          1               2        M            Chelsea        1   \n",
              "7   0.527899          9               2        M    Manchester City        2   \n",
              "64  0.098338          2               2        M   Sheffield United        1   \n",
              "43  0.000000          1               0      D S          Tottenham        1   \n",
              "20  0.039977          2               2      M S             Fulham        1   \n",
              "4   0.155865          5               1        F           West Ham        2   \n",
              "11  1.806423          8               6        M        Aston Villa        2   \n",
              "2   0.076050          5               2      F S  Nottingham Forest        3   \n",
              "\n",
              "               npxG_1wks              xGChain             xGBuildup  \\\n",
              "32    0.1487177386879921   1.7279850542545319    1.4423611164093018   \n",
              "57   0.13274450600147247  0.12214888632297516   0.12214888632297516   \n",
              "54   0.06899454444646835   0.2478587105870247   0.07426274567842484   \n",
              "7      1.057547777891159   3.7696669697761536      3.46992427110672   \n",
              "64   0.03711027465760708  0.06210647150874138                     0   \n",
              "43   0.03262129798531532  0.42484379559755325   0.39222250133752823   \n",
              "20  0.023748640902340412   0.3833686262369156   0.31964339315891266   \n",
              "4     0.9052570015192032   1.6813295632600784    0.6202077269554138   \n",
              "11    0.7691009938716888   3.3147943019866943    1.8412092700600624   \n",
              "2      1.666745364665985   1.7157853245735168  0.015222105197608471   \n",
              "\n",
              "    xgdifference  xAdifference  \n",
              "32      0.851282     -0.375143  \n",
              "57      0.867255      0.000000  \n",
              "54      0.931005     -0.104601  \n",
              "7       0.942452      0.472101  \n",
              "64      0.962890     -0.098338  \n",
              "43      0.967379      0.000000  \n",
              "20      0.976251     -0.039977  \n",
              "4       1.094743     -0.155865  \n",
              "11      1.230899     -0.806423  \n",
              "2       1.333255     -0.076050  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-13bd6818-f7b0-4d5a-b30a-987b11d2d93b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>6314</td>\n",
              "      <td>Joachim Andersen</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0.148718</td>\n",
              "      <td>0</td>\n",
              "      <td>0.375143</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>D</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1</td>\n",
              "      <td>0.1487177386879921</td>\n",
              "      <td>1.7279850542545319</td>\n",
              "      <td>1.4423611164093018</td>\n",
              "      <td>0.851282</td>\n",
              "      <td>-0.375143</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>10715</td>\n",
              "      <td>Jo√£o Palhinha</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0.132745</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>1</td>\n",
              "      <td>0.13274450600147247</td>\n",
              "      <td>0.12214888632297516</td>\n",
              "      <td>0.12214888632297516</td>\n",
              "      <td>0.867255</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>9356</td>\n",
              "      <td>Carney Chukwuemeka</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0.068995</td>\n",
              "      <td>0</td>\n",
              "      <td>0.104601</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>M</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1</td>\n",
              "      <td>0.06899454444646835</td>\n",
              "      <td>0.2478587105870247</td>\n",
              "      <td>0.07426274567842484</td>\n",
              "      <td>0.931005</td>\n",
              "      <td>-0.104601</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>2496</td>\n",
              "      <td>Rodri</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>1.057548</td>\n",
              "      <td>1</td>\n",
              "      <td>0.527899</td>\n",
              "      <td>9</td>\n",
              "      <td>2</td>\n",
              "      <td>M</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2</td>\n",
              "      <td>1.057547777891159</td>\n",
              "      <td>3.7696669697761536</td>\n",
              "      <td>3.46992427110672</td>\n",
              "      <td>0.942452</td>\n",
              "      <td>0.472101</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>64</th>\n",
              "      <td>11839</td>\n",
              "      <td>Gustavo Hamer</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0.037110</td>\n",
              "      <td>0</td>\n",
              "      <td>0.098338</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>M</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>1</td>\n",
              "      <td>0.03711027465760708</td>\n",
              "      <td>0.06210647150874138</td>\n",
              "      <td>0</td>\n",
              "      <td>0.962890</td>\n",
              "      <td>-0.098338</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>7430</td>\n",
              "      <td>Emerson</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0.032621</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1</td>\n",
              "      <td>0.03262129798531532</td>\n",
              "      <td>0.42484379559755325</td>\n",
              "      <td>0.39222250133752823</td>\n",
              "      <td>0.967379</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>922</td>\n",
              "      <td>Andreas Pereira</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0.023749</td>\n",
              "      <td>0</td>\n",
              "      <td>0.039977</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>M S</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>1</td>\n",
              "      <td>0.023748640902340412</td>\n",
              "      <td>0.3833686262369156</td>\n",
              "      <td>0.31964339315891266</td>\n",
              "      <td>0.976251</td>\n",
              "      <td>-0.039977</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>531</td>\n",
              "      <td>Michail Antonio</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0.905257</td>\n",
              "      <td>0</td>\n",
              "      <td>0.155865</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>F</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9052570015192032</td>\n",
              "      <td>1.6813295632600784</td>\n",
              "      <td>0.6202077269554138</td>\n",
              "      <td>1.094743</td>\n",
              "      <td>-0.155865</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>6556</td>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0.769101</td>\n",
              "      <td>1</td>\n",
              "      <td>1.806423</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>0.7691009938716888</td>\n",
              "      <td>3.3147943019866943</td>\n",
              "      <td>1.8412092700600624</td>\n",
              "      <td>1.230899</td>\n",
              "      <td>-0.806423</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>1.666745</td>\n",
              "      <td>0</td>\n",
              "      <td>0.076050</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>F S</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>3</td>\n",
              "      <td>1.666745364665985</td>\n",
              "      <td>1.7157853245735168</td>\n",
              "      <td>0.015222105197608471</td>\n",
              "      <td>1.333255</td>\n",
              "      <td>-0.076050</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-13bd6818-f7b0-4d5a-b30a-987b11d2d93b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-13bd6818-f7b0-4d5a-b30a-987b11d2d93b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-13bd6818-f7b0-4d5a-b30a-987b11d2d93b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-81153d76-eac1-4fd2-b923-ec2a6075830c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-81153d76-eac1-4fd2-b923-ec2a6075830c')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-81153d76-eac1-4fd2-b923-ec2a6075830c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 583
        },
        "id": "NDPdgpJUVBBZ",
        "outputId": "68024f76-0332-432c-f71b-45ab015883dc"
      },
      "execution_count": 77,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id      player_name games  time  goals_1wks   xG_1wks  assists_1wks  \\\n",
              "0     6049      Solly March     3   241           3  2.151405             0   \n",
              "1     6552     Bryan Mbeumo     3   270           3  3.051824             0   \n",
              "2     7814    Taiwo Awoniyi     3   183           3  1.666745             0   \n",
              "3     8260   Erling Haaland     3   265           3  3.389009             0   \n",
              "4      531  Michail Antonio     3   247           2  0.905257             0   \n",
              "..     ...              ...   ...   ...         ...       ...           ...   \n",
              "357  11723    Alfie Doughty     2    43           0  0.000000             0   \n",
              "358  11728    Calvin Bassey     2   106           0  0.000000             0   \n",
              "359  11729     B√©nie Traor√©     3   262           0  0.321223             0   \n",
              "364  11926    Edson √Ålvarez     2    89           0  0.000000             0   \n",
              "366  11998  Hannes Delcroix     1    90           0  0.074604             0   \n",
              "\n",
              "      xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards position  \\\n",
              "0    0.152011         10               5            0         0        M   \n",
              "1    0.264384          7               3            0         0        F   \n",
              "2    0.076050          5               2            0         0      F S   \n",
              "3    0.405823         16               4            0         0        F   \n",
              "4    0.155865          5               1            1         0        F   \n",
              "..        ...        ...             ...          ...       ...      ...   \n",
              "357  0.000000          0               0            0         0        S   \n",
              "358  0.000000          0               0            0         1      D S   \n",
              "359  0.238483          1               2            0         0      F M   \n",
              "364  0.000000          0               0            1         0      M S   \n",
              "366  0.083017          2               2            0         0        D   \n",
              "\n",
              "            team_title npg_1wks            npxG_1wks              xGChain  \\\n",
              "0             Brighton        3   2.1514047384262085     2.92387917637825   \n",
              "1            Brentford        1   1.5294859409332275   1.5952002853155136   \n",
              "2    Nottingham Forest        3    1.666745364665985   1.7157853245735168   \n",
              "3      Manchester City        3    2.627840220928192   2.9821196794509888   \n",
              "4             West Ham        2   0.9052570015192032   1.6813295632600784   \n",
              "..                 ...      ...                  ...                  ...   \n",
              "357              Luton        0                    0                    0   \n",
              "358             Fulham        0                    0                    0   \n",
              "359   Sheffield United        0   0.3212226927280426   1.1546861231327057   \n",
              "364           West Ham        0                    0                    0   \n",
              "366            Burnley        0  0.07460393756628036  0.11859950423240662   \n",
              "\n",
              "                xGBuildup  xgdifference  xAdifference  \n",
              "0       0.847283273935318      0.848595     -0.152011  \n",
              "1     0.06571434438228607     -0.051824     -0.264384  \n",
              "2    0.015222105197608471      1.333255     -0.076050  \n",
              "3      0.5024585798382759     -0.389009     -0.405823  \n",
              "4      0.6202077269554138      1.094743     -0.155865  \n",
              "..                    ...           ...           ...  \n",
              "357                     0      0.000000      0.000000  \n",
              "358                     0      0.000000      0.000000  \n",
              "359    0.5949807167053223     -0.321223     -0.238483  \n",
              "364                     0      0.000000      0.000000  \n",
              "366   0.03558274731040001     -0.074604     -0.083017  \n",
              "\n",
              "[283 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-59cc48c4-377e-4534-a91b-e0014dc164b5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6049</td>\n",
              "      <td>Solly March</td>\n",
              "      <td>3</td>\n",
              "      <td>241</td>\n",
              "      <td>3</td>\n",
              "      <td>2.151405</td>\n",
              "      <td>0</td>\n",
              "      <td>0.152011</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>2.1514047384262085</td>\n",
              "      <td>2.92387917637825</td>\n",
              "      <td>0.847283273935318</td>\n",
              "      <td>0.848595</td>\n",
              "      <td>-0.152011</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>3</td>\n",
              "      <td>270</td>\n",
              "      <td>3</td>\n",
              "      <td>3.051824</td>\n",
              "      <td>0</td>\n",
              "      <td>0.264384</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>1</td>\n",
              "      <td>1.5294859409332275</td>\n",
              "      <td>1.5952002853155136</td>\n",
              "      <td>0.06571434438228607</td>\n",
              "      <td>-0.051824</td>\n",
              "      <td>-0.264384</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>3</td>\n",
              "      <td>183</td>\n",
              "      <td>3</td>\n",
              "      <td>1.666745</td>\n",
              "      <td>0</td>\n",
              "      <td>0.076050</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>3</td>\n",
              "      <td>1.666745364665985</td>\n",
              "      <td>1.7157853245735168</td>\n",
              "      <td>0.015222105197608471</td>\n",
              "      <td>1.333255</td>\n",
              "      <td>-0.076050</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>3</td>\n",
              "      <td>265</td>\n",
              "      <td>3</td>\n",
              "      <td>3.389009</td>\n",
              "      <td>0</td>\n",
              "      <td>0.405823</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>3</td>\n",
              "      <td>2.627840220928192</td>\n",
              "      <td>2.9821196794509888</td>\n",
              "      <td>0.5024585798382759</td>\n",
              "      <td>-0.389009</td>\n",
              "      <td>-0.405823</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>531</td>\n",
              "      <td>Michail Antonio</td>\n",
              "      <td>3</td>\n",
              "      <td>247</td>\n",
              "      <td>2</td>\n",
              "      <td>0.905257</td>\n",
              "      <td>0</td>\n",
              "      <td>0.155865</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9052570015192032</td>\n",
              "      <td>1.6813295632600784</td>\n",
              "      <td>0.6202077269554138</td>\n",
              "      <td>1.094743</td>\n",
              "      <td>-0.155865</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>357</th>\n",
              "      <td>11723</td>\n",
              "      <td>Alfie Doughty</td>\n",
              "      <td>2</td>\n",
              "      <td>43</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>358</th>\n",
              "      <td>11728</td>\n",
              "      <td>Calvin Bassey</td>\n",
              "      <td>2</td>\n",
              "      <td>106</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>D S</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>359</th>\n",
              "      <td>11729</td>\n",
              "      <td>B√©nie Traor√©</td>\n",
              "      <td>3</td>\n",
              "      <td>262</td>\n",
              "      <td>0</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0</td>\n",
              "      <td>0.238483</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3212226927280426</td>\n",
              "      <td>1.1546861231327057</td>\n",
              "      <td>0.5949807167053223</td>\n",
              "      <td>-0.321223</td>\n",
              "      <td>-0.238483</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson √Ålvarez</td>\n",
              "      <td>2</td>\n",
              "      <td>89</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>1</td>\n",
              "      <td>90</td>\n",
              "      <td>0</td>\n",
              "      <td>0.074604</td>\n",
              "      <td>0</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07460393756628036</td>\n",
              "      <td>0.11859950423240662</td>\n",
              "      <td>0.03558274731040001</td>\n",
              "      <td>-0.074604</td>\n",
              "      <td>-0.083017</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>283 rows √ó 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-59cc48c4-377e-4534-a91b-e0014dc164b5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-59cc48c4-377e-4534-a91b-e0014dc164b5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-59cc48c4-377e-4534-a91b-e0014dc164b5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-05f4f2b3-9759-4426-8d55-14561198d847\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-05f4f2b3-9759-4426-8d55-14561198d847')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-05f4f2b3-9759-4426-8d55-14561198d847 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 77
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "onegamedftidy = one_game_df.drop(columns=[\n",
        " 'time',\n",
        " 'goals_1wks',\n",
        " 'assists_1wks',\n",
        " 'shots_1wks',\n",
        " 'key_passes_1wks',\n",
        " 'yellow_cards',\n",
        " 'red_cards',\n",
        " 'npg_1wks',\n",
        " 'npxG_1wks',\n",
        " 'xGChain',\n",
        " 'xGBuildup',\n",
        " 'xgdifference',\n",
        " 'xAdifference'])\n",
        "onegamedftidy"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "RKf0tUGEh8FV",
        "outputId": "bffc9ce7-4c03-4529-9945-2b8507c087ca"
      },
      "execution_count": 78,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id      player_name games   xG_1wks   xA_1wks position  \\\n",
              "0     6049      Solly March     3  2.151405  0.152011        M   \n",
              "1     6552     Bryan Mbeumo     3  3.051824  0.264384        F   \n",
              "2     7814    Taiwo Awoniyi     3  1.666745  0.076050      F S   \n",
              "3     8260   Erling Haaland     3  3.389009  0.405823        F   \n",
              "4      531  Michail Antonio     3  0.905257  0.155865        F   \n",
              "..     ...              ...   ...       ...       ...      ...   \n",
              "357  11723    Alfie Doughty     2  0.000000  0.000000        S   \n",
              "358  11728    Calvin Bassey     2  0.000000  0.000000      D S   \n",
              "359  11729     B√©nie Traor√©     3  0.321223  0.238483      F M   \n",
              "364  11926    Edson √Ålvarez     2  0.000000  0.000000      M S   \n",
              "366  11998  Hannes Delcroix     1  0.074604  0.083017        D   \n",
              "\n",
              "            team_title  \n",
              "0             Brighton  \n",
              "1            Brentford  \n",
              "2    Nottingham Forest  \n",
              "3      Manchester City  \n",
              "4             West Ham  \n",
              "..                 ...  \n",
              "357              Luton  \n",
              "358             Fulham  \n",
              "359   Sheffield United  \n",
              "364           West Ham  \n",
              "366            Burnley  \n",
              "\n",
              "[283 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9f7431a4-5f9a-4f9a-bb2a-ed98c8457544\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6049</td>\n",
              "      <td>Solly March</td>\n",
              "      <td>3</td>\n",
              "      <td>2.151405</td>\n",
              "      <td>0.152011</td>\n",
              "      <td>M</td>\n",
              "      <td>Brighton</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>3</td>\n",
              "      <td>3.051824</td>\n",
              "      <td>0.264384</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>3</td>\n",
              "      <td>1.666745</td>\n",
              "      <td>0.076050</td>\n",
              "      <td>F S</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>3</td>\n",
              "      <td>3.389009</td>\n",
              "      <td>0.405823</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>531</td>\n",
              "      <td>Michail Antonio</td>\n",
              "      <td>3</td>\n",
              "      <td>0.905257</td>\n",
              "      <td>0.155865</td>\n",
              "      <td>F</td>\n",
              "      <td>West Ham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>357</th>\n",
              "      <td>11723</td>\n",
              "      <td>Alfie Doughty</td>\n",
              "      <td>2</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>358</th>\n",
              "      <td>11728</td>\n",
              "      <td>Calvin Bassey</td>\n",
              "      <td>2</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>D S</td>\n",
              "      <td>Fulham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>359</th>\n",
              "      <td>11729</td>\n",
              "      <td>B√©nie Traor√©</td>\n",
              "      <td>3</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0.238483</td>\n",
              "      <td>F M</td>\n",
              "      <td>Sheffield United</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson √Ålvarez</td>\n",
              "      <td>2</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>1</td>\n",
              "      <td>0.074604</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>D</td>\n",
              "      <td>Burnley</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>283 rows √ó 7 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f7431a4-5f9a-4f9a-bb2a-ed98c8457544')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9f7431a4-5f9a-4f9a-bb2a-ed98c8457544 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9f7431a4-5f9a-4f9a-bb2a-ed98c8457544');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-99b4e2d1-a13b-4439-b263-051419e72cbb\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-99b4e2d1-a13b-4439-b263-051419e72cbb')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-99b4e2d1-a13b-4439-b263-051419e72cbb button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 78
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/pratos/fpl-mappers\n",
        "!git clone https://github.com/ChrisMusson/FPL-ID-Map\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B9kCj8OeiKGn",
        "outputId": "1f64f419-ef79-42eb-abdb-748090c0ee72"
      },
      "execution_count": 79,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "fatal: destination path 'fpl-mappers' already exists and is not an empty directory.\n",
            "fatal: destination path 'FPL-ID-Map' already exists and is not an empty directory.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data1 = pd.read_csv('/content/FPL-ID-Map/Understat.csv', on_bad_lines='skip')\n",
        "data2 = pd.read_csv('/content/FPL-ID-Map/FPL/22-23.csv', on_bad_lines='skip')\n",
        "understatwithfplid1 = pd.merge(data2,\n",
        "                     data1,\n",
        "                     on ='code',\n",
        "                     how ='left')\n",
        "understatid = understatwithfplid1.drop(columns=[\n",
        "'code',\n",
        " 'first_name_x',\n",
        " 'second_name_x',\n",
        " 'web_name_x',\n",
        " 'first_name_y',\n",
        " 'second_name_y',\n",
        " 'web_name_y',])\n",
        "one_game_df.rename(columns={'id': 'understat'}, inplace=True)\n",
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 583
        },
        "id": "SaX7692EiQA7",
        "outputId": "7ba9cf7d-44b8-4167-ab10-193e074ae332"
      },
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    understat      player_name games  time  goals_1wks   xG_1wks  \\\n",
              "0        6049      Solly March     3   241           3  2.151405   \n",
              "1        6552     Bryan Mbeumo     3   270           3  3.051824   \n",
              "2        7814    Taiwo Awoniyi     3   183           3  1.666745   \n",
              "3        8260   Erling Haaland     3   265           3  3.389009   \n",
              "4         531  Michail Antonio     3   247           2  0.905257   \n",
              "..        ...              ...   ...   ...         ...       ...   \n",
              "357     11723    Alfie Doughty     2    43           0  0.000000   \n",
              "358     11728    Calvin Bassey     2   106           0  0.000000   \n",
              "359     11729     B√©nie Traor√©     3   262           0  0.321223   \n",
              "364     11926    Edson √Ålvarez     2    89           0  0.000000   \n",
              "366     11998  Hannes Delcroix     1    90           0  0.074604   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards  \\\n",
              "0               0  0.152011         10               5            0         0   \n",
              "1               0  0.264384          7               3            0         0   \n",
              "2               0  0.076050          5               2            0         0   \n",
              "3               0  0.405823         16               4            0         0   \n",
              "4               0  0.155865          5               1            1         0   \n",
              "..            ...       ...        ...             ...          ...       ...   \n",
              "357             0  0.000000          0               0            0         0   \n",
              "358             0  0.000000          0               0            0         1   \n",
              "359             0  0.238483          1               2            0         0   \n",
              "364             0  0.000000          0               0            1         0   \n",
              "366             0  0.083017          2               2            0         0   \n",
              "\n",
              "    position         team_title npg_1wks            npxG_1wks  \\\n",
              "0          M           Brighton        3   2.1514047384262085   \n",
              "1          F          Brentford        1   1.5294859409332275   \n",
              "2        F S  Nottingham Forest        3    1.666745364665985   \n",
              "3          F    Manchester City        3    2.627840220928192   \n",
              "4          F           West Ham        2   0.9052570015192032   \n",
              "..       ...                ...      ...                  ...   \n",
              "357        S              Luton        0                    0   \n",
              "358      D S             Fulham        0                    0   \n",
              "359      F M   Sheffield United        0   0.3212226927280426   \n",
              "364      M S           West Ham        0                    0   \n",
              "366        D            Burnley        0  0.07460393756628036   \n",
              "\n",
              "                 xGChain             xGBuildup  xgdifference  xAdifference  \n",
              "0       2.92387917637825     0.847283273935318      0.848595     -0.152011  \n",
              "1     1.5952002853155136   0.06571434438228607     -0.051824     -0.264384  \n",
              "2     1.7157853245735168  0.015222105197608471      1.333255     -0.076050  \n",
              "3     2.9821196794509888    0.5024585798382759     -0.389009     -0.405823  \n",
              "4     1.6813295632600784    0.6202077269554138      1.094743     -0.155865  \n",
              "..                   ...                   ...           ...           ...  \n",
              "357                    0                     0      0.000000      0.000000  \n",
              "358                    0                     0      0.000000      0.000000  \n",
              "359   1.1546861231327057    0.5949807167053223     -0.321223     -0.238483  \n",
              "364                    0                     0      0.000000      0.000000  \n",
              "366  0.11859950423240662   0.03558274731040001     -0.074604     -0.083017  \n",
              "\n",
              "[283 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d52184a5-af12-47b2-9934-e78b4c607650\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6049</td>\n",
              "      <td>Solly March</td>\n",
              "      <td>3</td>\n",
              "      <td>241</td>\n",
              "      <td>3</td>\n",
              "      <td>2.151405</td>\n",
              "      <td>0</td>\n",
              "      <td>0.152011</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>2.1514047384262085</td>\n",
              "      <td>2.92387917637825</td>\n",
              "      <td>0.847283273935318</td>\n",
              "      <td>0.848595</td>\n",
              "      <td>-0.152011</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>3</td>\n",
              "      <td>270</td>\n",
              "      <td>3</td>\n",
              "      <td>3.051824</td>\n",
              "      <td>0</td>\n",
              "      <td>0.264384</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>1</td>\n",
              "      <td>1.5294859409332275</td>\n",
              "      <td>1.5952002853155136</td>\n",
              "      <td>0.06571434438228607</td>\n",
              "      <td>-0.051824</td>\n",
              "      <td>-0.264384</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>3</td>\n",
              "      <td>183</td>\n",
              "      <td>3</td>\n",
              "      <td>1.666745</td>\n",
              "      <td>0</td>\n",
              "      <td>0.076050</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>3</td>\n",
              "      <td>1.666745364665985</td>\n",
              "      <td>1.7157853245735168</td>\n",
              "      <td>0.015222105197608471</td>\n",
              "      <td>1.333255</td>\n",
              "      <td>-0.076050</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>3</td>\n",
              "      <td>265</td>\n",
              "      <td>3</td>\n",
              "      <td>3.389009</td>\n",
              "      <td>0</td>\n",
              "      <td>0.405823</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>3</td>\n",
              "      <td>2.627840220928192</td>\n",
              "      <td>2.9821196794509888</td>\n",
              "      <td>0.5024585798382759</td>\n",
              "      <td>-0.389009</td>\n",
              "      <td>-0.405823</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>531</td>\n",
              "      <td>Michail Antonio</td>\n",
              "      <td>3</td>\n",
              "      <td>247</td>\n",
              "      <td>2</td>\n",
              "      <td>0.905257</td>\n",
              "      <td>0</td>\n",
              "      <td>0.155865</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9052570015192032</td>\n",
              "      <td>1.6813295632600784</td>\n",
              "      <td>0.6202077269554138</td>\n",
              "      <td>1.094743</td>\n",
              "      <td>-0.155865</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>357</th>\n",
              "      <td>11723</td>\n",
              "      <td>Alfie Doughty</td>\n",
              "      <td>2</td>\n",
              "      <td>43</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>358</th>\n",
              "      <td>11728</td>\n",
              "      <td>Calvin Bassey</td>\n",
              "      <td>2</td>\n",
              "      <td>106</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>D S</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>359</th>\n",
              "      <td>11729</td>\n",
              "      <td>B√©nie Traor√©</td>\n",
              "      <td>3</td>\n",
              "      <td>262</td>\n",
              "      <td>0</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0</td>\n",
              "      <td>0.238483</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3212226927280426</td>\n",
              "      <td>1.1546861231327057</td>\n",
              "      <td>0.5949807167053223</td>\n",
              "      <td>-0.321223</td>\n",
              "      <td>-0.238483</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson √Ålvarez</td>\n",
              "      <td>2</td>\n",
              "      <td>89</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>1</td>\n",
              "      <td>90</td>\n",
              "      <td>0</td>\n",
              "      <td>0.074604</td>\n",
              "      <td>0</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07460393756628036</td>\n",
              "      <td>0.11859950423240662</td>\n",
              "      <td>0.03558274731040001</td>\n",
              "      <td>-0.074604</td>\n",
              "      <td>-0.083017</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>283 rows √ó 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d52184a5-af12-47b2-9934-e78b4c607650')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d52184a5-af12-47b2-9934-e78b4c607650 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d52184a5-af12-47b2-9934-e78b4c607650');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ea24c3f3-202a-4f14-851a-30fc515e3d12\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ea24c3f3-202a-4f14-851a-30fc515e3d12')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ea24c3f3-202a-4f14-851a-30fc515e3d12 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 80
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/huricane85/FPL-API-Fixture-modeler"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dU1giLdZir3J",
        "outputId": "5b446cee-7e94-41db-c2c7-f29a30d2d577"
      },
      "execution_count": 81,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "fatal: destination path 'FPL-API-Fixture-modeler' already exists and is not an empty directory.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# read the CSV file from GitHub into a DataFrame\n",
        "url = \"https://raw.githubusercontent.com/ChrisMusson/FPL-ID-Map/main/Master.csv\"\n",
        "df = pd.read_csv(url)\n",
        "\n",
        "# rename the \"22-23\" column to \"id\"\n",
        "df.rename(columns={'22-23': 'id'}, inplace=True)\n",
        "\n",
        "# convert \"id\" and \"understat\" columns to int64 and float64 respectively\n",
        "df['id'] = pd.to_numeric(df['id'], errors='coerce', downcast='integer').astype('Int64')\n",
        "df['understat'] = pd.to_numeric(df['understat'], errors='coerce', downcast='integer').astype('Int64')\n",
        "\n",
        "# filter out rows where \"understat\" is null\n",
        "df = df.dropna(subset=['understat'])\n",
        "\n",
        "# change data type of \"id\" column to float64\n",
        "df['id'] = df['id'].astype('float64')\n",
        "\n",
        "# create a new DataFrame with only the \"understat\" and \"id\" columns\n",
        "new_df = df[['understat', 'id']].dropna(subset=['id']).copy()\n",
        "\n",
        "# display the new DataFrame\n",
        "\n",
        "new_df\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "WRijWphEVPuN",
        "outputId": "5186b0d2-e0bc-47b0-fc2f-5031000698ab"
      },
      "execution_count": 82,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-34ad3be4-cb26-4c43-bb19-9cb40d4d3c19\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows √ó 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-34ad3be4-cb26-4c43-bb19-9cb40d4d3c19')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-34ad3be4-cb26-4c43-bb19-9cb40d4d3c19 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-34ad3be4-cb26-4c43-bb19-9cb40d4d3c19');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-09f6ba8e-3723-4bc0-b746-b76d48a8060a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-09f6ba8e-3723-4bc0-b746-b76d48a8060a')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-09f6ba8e-3723-4bc0-b746-b76d48a8060a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "NhQ4dZKdUv36",
        "outputId": "4de00333-8034-4d62-bab6-d899e33a885b"
      },
      "execution_count": 83,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d5bb2c09-c467-44f1-baaa-163934e6d90d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows √ó 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d5bb2c09-c467-44f1-baaa-163934e6d90d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d5bb2c09-c467-44f1-baaa-163934e6d90d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d5bb2c09-c467-44f1-baaa-163934e6d90d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-585bac57-d91b-4e78-afd3-250f448b61c1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-585bac57-d91b-4e78-afd3-250f448b61c1')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-585bac57-d91b-4e78-afd3-250f448b61c1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df[\"understat\"] = one_game_df[\"understat\"].astype(str).astype(int)\n",
        "understatid2 = new_df\n",
        "understatwithfplid = pd.merge(one_game_df,\n",
        "                     understatid2,\n",
        "                     on ='understat',\n",
        "                     how ='left')\n",
        "understatwithfplid"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 583
        },
        "id": "KmDbXEnfi2v1",
        "outputId": "6c8d344b-18e6-4ed1-da57-d13b13fe8f34"
      },
      "execution_count": 84,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     understat      player_name games  time  goals_1wks   xG_1wks  \\\n",
              "0         6049      Solly March     3   241           3  2.151405   \n",
              "1         6552     Bryan Mbeumo     3   270           3  3.051824   \n",
              "2         7814    Taiwo Awoniyi     3   183           3  1.666745   \n",
              "3         8260   Erling Haaland     3   265           3  3.389009   \n",
              "4          531  Michail Antonio     3   247           2  0.905257   \n",
              "..         ...              ...   ...   ...         ...       ...   \n",
              "278      11723    Alfie Doughty     2    43           0  0.000000   \n",
              "279      11728    Calvin Bassey     2   106           0  0.000000   \n",
              "280      11729     B√©nie Traor√©     3   262           0  0.321223   \n",
              "281      11926    Edson √Ålvarez     2    89           0  0.000000   \n",
              "282      11998  Hannes Delcroix     1    90           0  0.074604   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks  ... red_cards  \\\n",
              "0               0  0.152011         10               5  ...         0   \n",
              "1               0  0.264384          7               3  ...         0   \n",
              "2               0  0.076050          5               2  ...         0   \n",
              "3               0  0.405823         16               4  ...         0   \n",
              "4               0  0.155865          5               1  ...         0   \n",
              "..            ...       ...        ...             ...  ...       ...   \n",
              "278             0  0.000000          0               0  ...         0   \n",
              "279             0  0.000000          0               0  ...         1   \n",
              "280             0  0.238483          1               2  ...         0   \n",
              "281             0  0.000000          0               0  ...         0   \n",
              "282             0  0.083017          2               2  ...         0   \n",
              "\n",
              "    position         team_title npg_1wks            npxG_1wks  \\\n",
              "0          M           Brighton        3   2.1514047384262085   \n",
              "1          F          Brentford        1   1.5294859409332275   \n",
              "2        F S  Nottingham Forest        3    1.666745364665985   \n",
              "3          F    Manchester City        3    2.627840220928192   \n",
              "4          F           West Ham        2   0.9052570015192032   \n",
              "..       ...                ...      ...                  ...   \n",
              "278        S              Luton        0                    0   \n",
              "279      D S             Fulham        0                    0   \n",
              "280      F M   Sheffield United        0   0.3212226927280426   \n",
              "281      M S           West Ham        0                    0   \n",
              "282        D            Burnley        0  0.07460393756628036   \n",
              "\n",
              "                 xGChain             xGBuildup xgdifference  xAdifference  \\\n",
              "0       2.92387917637825     0.847283273935318     0.848595     -0.152011   \n",
              "1     1.5952002853155136   0.06571434438228607    -0.051824     -0.264384   \n",
              "2     1.7157853245735168  0.015222105197608471     1.333255     -0.076050   \n",
              "3     2.9821196794509888    0.5024585798382759    -0.389009     -0.405823   \n",
              "4     1.6813295632600784    0.6202077269554138     1.094743     -0.155865   \n",
              "..                   ...                   ...          ...           ...   \n",
              "278                    0                     0     0.000000      0.000000   \n",
              "279                    0                     0     0.000000      0.000000   \n",
              "280   1.1546861231327057    0.5949807167053223    -0.321223     -0.238483   \n",
              "281                    0                     0     0.000000      0.000000   \n",
              "282  0.11859950423240662   0.03558274731040001    -0.074604     -0.083017   \n",
              "\n",
              "        id  \n",
              "0    107.0  \n",
              "1     95.0  \n",
              "2    397.0  \n",
              "3    318.0  \n",
              "4    458.0  \n",
              "..     ...  \n",
              "278    NaN  \n",
              "279    NaN  \n",
              "280    NaN  \n",
              "281    NaN  \n",
              "282    NaN  \n",
              "\n",
              "[283 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fca8226a-bc1a-4413-a6bf-dce80d086df5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>...</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6049</td>\n",
              "      <td>Solly March</td>\n",
              "      <td>3</td>\n",
              "      <td>241</td>\n",
              "      <td>3</td>\n",
              "      <td>2.151405</td>\n",
              "      <td>0</td>\n",
              "      <td>0.152011</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>2.1514047384262085</td>\n",
              "      <td>2.92387917637825</td>\n",
              "      <td>0.847283273935318</td>\n",
              "      <td>0.848595</td>\n",
              "      <td>-0.152011</td>\n",
              "      <td>107.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>3</td>\n",
              "      <td>270</td>\n",
              "      <td>3</td>\n",
              "      <td>3.051824</td>\n",
              "      <td>0</td>\n",
              "      <td>0.264384</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>1</td>\n",
              "      <td>1.5294859409332275</td>\n",
              "      <td>1.5952002853155136</td>\n",
              "      <td>0.06571434438228607</td>\n",
              "      <td>-0.051824</td>\n",
              "      <td>-0.264384</td>\n",
              "      <td>95.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>3</td>\n",
              "      <td>183</td>\n",
              "      <td>3</td>\n",
              "      <td>1.666745</td>\n",
              "      <td>0</td>\n",
              "      <td>0.076050</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>3</td>\n",
              "      <td>1.666745364665985</td>\n",
              "      <td>1.7157853245735168</td>\n",
              "      <td>0.015222105197608471</td>\n",
              "      <td>1.333255</td>\n",
              "      <td>-0.076050</td>\n",
              "      <td>397.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>3</td>\n",
              "      <td>265</td>\n",
              "      <td>3</td>\n",
              "      <td>3.389009</td>\n",
              "      <td>0</td>\n",
              "      <td>0.405823</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>3</td>\n",
              "      <td>2.627840220928192</td>\n",
              "      <td>2.9821196794509888</td>\n",
              "      <td>0.5024585798382759</td>\n",
              "      <td>-0.389009</td>\n",
              "      <td>-0.405823</td>\n",
              "      <td>318.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>531</td>\n",
              "      <td>Michail Antonio</td>\n",
              "      <td>3</td>\n",
              "      <td>247</td>\n",
              "      <td>2</td>\n",
              "      <td>0.905257</td>\n",
              "      <td>0</td>\n",
              "      <td>0.155865</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9052570015192032</td>\n",
              "      <td>1.6813295632600784</td>\n",
              "      <td>0.6202077269554138</td>\n",
              "      <td>1.094743</td>\n",
              "      <td>-0.155865</td>\n",
              "      <td>458.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>278</th>\n",
              "      <td>11723</td>\n",
              "      <td>Alfie Doughty</td>\n",
              "      <td>2</td>\n",
              "      <td>43</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>279</th>\n",
              "      <td>11728</td>\n",
              "      <td>Calvin Bassey</td>\n",
              "      <td>2</td>\n",
              "      <td>106</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>D S</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>280</th>\n",
              "      <td>11729</td>\n",
              "      <td>B√©nie Traor√©</td>\n",
              "      <td>3</td>\n",
              "      <td>262</td>\n",
              "      <td>0</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0</td>\n",
              "      <td>0.238483</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3212226927280426</td>\n",
              "      <td>1.1546861231327057</td>\n",
              "      <td>0.5949807167053223</td>\n",
              "      <td>-0.321223</td>\n",
              "      <td>-0.238483</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>281</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson √Ålvarez</td>\n",
              "      <td>2</td>\n",
              "      <td>89</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>282</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>1</td>\n",
              "      <td>90</td>\n",
              "      <td>0</td>\n",
              "      <td>0.074604</td>\n",
              "      <td>0</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07460393756628036</td>\n",
              "      <td>0.11859950423240662</td>\n",
              "      <td>0.03558274731040001</td>\n",
              "      <td>-0.074604</td>\n",
              "      <td>-0.083017</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>283 rows √ó 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fca8226a-bc1a-4413-a6bf-dce80d086df5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-fca8226a-bc1a-4413-a6bf-dce80d086df5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-fca8226a-bc1a-4413-a6bf-dce80d086df5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a0c859bb-0df5-403f-8f2e-d929926cd846\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a0c859bb-0df5-403f-8f2e-d929926cd846')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a0c859bb-0df5-403f-8f2e-d929926cd846 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 84
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/fixtures/\").read())\n",
        "    fixtures = all_data\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"event\"],\n",
        "            team_converter(x[\"team_h\"]),\n",
        "            team_converter(x[\"team_a\"]),\n",
        "            x[\"kickoff_time\"],\n",
        "\n",
        "        ]\n",
        "        for x in fixtures\n",
        "    ]\n",
        "\n",
        "    with open(\"/fixtures_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"event\",\"team_h\",\"team_a\",\"kickoff_time\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "Y_cV1kyak7XX"
      },
      "execution_count": 85,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import scipy\n",
        "import numpy as np\n",
        "from numpy import random\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import matplotlib"
      ],
      "metadata": {
        "id": "DXejj-4jjUI-"
      },
      "execution_count": 86,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "    players = all_data[\"elements\"]\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"id\"],\n",
        "            team_converter(x[\"team\"]),\n",
        "            position_converter(x[\"element_type\"])[0],\n",
        "            x[\"web_name\"],\n",
        "            x[\"now_cost\"] / 10,\n",
        "            x[\"selected_by_percent\"],\n",
        "            float(x[\"expected_goals\"]),  # Convert to float\n",
        "            float(x[\"expected_assists\"]),  # Convert to float\n",
        "            x[\"goals_scored\"],\n",
        "            x[\"assists\"],\n",
        "            x[\"bps\"],\n",
        "            x[\"ict_index\"],\n",
        "            x[\"total_points\"],\n",
        "            x[\"points_per_game\"],\n",
        "            x[\"minutes\"]\n",
        "        ]\n",
        "        for x in players\n",
        "    ]\n",
        "\n",
        "    with open(\"players_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"id\",\"team\", \"pos\", \"name\", \"cost\", \"selected_by_percent\", \"expected_goals\", \"expected_assists\", \"goals_scored\", \"assists\", \"bps\", \"ict_index\",\"points\", \"points_per_game\", \"minutes\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "CKZZPD0xQGLu"
      },
      "execution_count": 87,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "playerdata = pd.read_csv(\"/content/players_data.csv\")\n",
        "master = playerdata\n",
        "#master = master.dropna()\n",
        "master['apppoint'] = 2\n",
        "master['assistvalue'] = 3\n",
        "#master['BPS90'] = master.bps/(master.minutes/90)\n",
        "master"
      ],
      "metadata": {
        "id": "VOx8tP0bjttO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "2380d22d-d47c-49ff-a007-1101f873430b"
      },
      "execution_count": 88,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos             name  cost  \\\n",
              "0      1                  Arsenal   F          Balogun   4.4   \n",
              "1      2                  Arsenal   D           C√©dric   4.0   \n",
              "2      3                  Arsenal   M         M.Elneny   4.4   \n",
              "3      4                  Arsenal   M     F√°bio Vieira   5.4   \n",
              "4      5                  Arsenal   D          Gabriel   4.8   \n",
              "..   ...                      ...  ..              ...   ...   \n",
              "687  572  Wolverhampton Wanderers   D         N.Semedo   4.5   \n",
              "688  573  Wolverhampton Wanderers   D             Toti   4.4   \n",
              "689  574  Wolverhampton Wanderers   M  Boubacar Traore   4.4   \n",
              "690  590  Wolverhampton Wanderers   F            Cunha   5.5   \n",
              "691  598  Wolverhampton Wanderers   D          Doherty   4.4   \n",
              "\n",
              "     selected_by_percent  expected_goals  expected_assists  goals_scored  \\\n",
              "0                    0.6            0.00              0.00             0   \n",
              "1                    0.4            0.00              0.00             0   \n",
              "2                    0.1            0.00              0.00             0   \n",
              "3                    0.1            0.04              0.22             0   \n",
              "4                   17.0            0.00              0.00             0   \n",
              "..                   ...             ...               ...           ...   \n",
              "687                  0.4            0.02              0.15             0   \n",
              "688                  0.1            0.00              0.00             0   \n",
              "689                  0.4            0.00              0.00             0   \n",
              "690                  0.6            1.11              0.36             0   \n",
              "691                  0.2            0.00              0.00             0   \n",
              "\n",
              "     assists  bps  ict_index  points  points_per_game  minutes  apppoint  \\\n",
              "0          0    0        0.0       0              0.0        0         2   \n",
              "1          0    0        0.0       0              0.0        0         2   \n",
              "2          0    0        0.0       0              0.0        0         2   \n",
              "3          2   22        6.3       7              7.0       34         2   \n",
              "4          0    7        1.3       2              1.0       24         2   \n",
              "..       ...  ...        ...     ...              ...      ...       ...   \n",
              "687        0   46        7.6       7              2.3      270         2   \n",
              "688        0    6        0.8       2              1.0       24         2   \n",
              "689        0    0        0.0       0              0.0        0         2   \n",
              "690        0   16       15.3       6              2.0      250         2   \n",
              "691        0    0        0.0       0              0.0        0         2   \n",
              "\n",
              "     assistvalue  \n",
              "0              3  \n",
              "1              3  \n",
              "2              3  \n",
              "3              3  \n",
              "4              3  \n",
              "..           ...  \n",
              "687            3  \n",
              "688            3  \n",
              "689            3  \n",
              "690            3  \n",
              "691            3  \n",
              "\n",
              "[692 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-24cb4d70-ce14-4367-a7c8-4cde816adb34\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>C√©dric</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>F√°bio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.22</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>22</td>\n",
              "      <td>6.3</td>\n",
              "      <td>7</td>\n",
              "      <td>7.0</td>\n",
              "      <td>34</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>4.8</td>\n",
              "      <td>17.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>687</th>\n",
              "      <td>572</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>N.Semedo</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>46</td>\n",
              "      <td>7.6</td>\n",
              "      <td>7</td>\n",
              "      <td>2.3</td>\n",
              "      <td>270</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>688</th>\n",
              "      <td>573</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>Toti</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>689</th>\n",
              "      <td>574</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Boubacar Traore</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>690</th>\n",
              "      <td>590</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>F</td>\n",
              "      <td>Cunha</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.6</td>\n",
              "      <td>1.11</td>\n",
              "      <td>0.36</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>15.3</td>\n",
              "      <td>6</td>\n",
              "      <td>2.0</td>\n",
              "      <td>250</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>691</th>\n",
              "      <td>598</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>Doherty</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>692 rows √ó 17 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24cb4d70-ce14-4367-a7c8-4cde816adb34')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-24cb4d70-ce14-4367-a7c8-4cde816adb34 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-24cb4d70-ce14-4367-a7c8-4cde816adb34');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-80ab7ddb-6c66-4a09-aa14-7b0e05068121\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-80ab7ddb-6c66-4a09-aa14-7b0e05068121')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-80ab7ddb-6c66-4a09-aa14-7b0e05068121 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 88
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "gwfixtures = pd.read_csv(\"/fixtures_data.csv\")\n",
        "import requests\n",
        "import pandas as pd\n",
        "url = 'https://projects.fivethirtyeight.com/soccer-api/club/spi_global_rankings.csv'\n",
        "r = requests.get(url)\n",
        "open('temp.csv', 'wb').write(r.content)\n",
        "spi = pd.read_csv('temp.csv')\n",
        "spi['team_h'] = spi['name']\n",
        "spi['team_a'] = spi['name']\n",
        "spi= spi.replace('Newcastle', 'Newcastle United')\n",
        "spi= spi.replace('Wolverhampton','Wolverhampton Wanderers')\n",
        "spi= spi.replace('Tottenham Hotspur','Tottenham')\n",
        "spi= spi.replace('Leeds United','Leeds')\n",
        "spi= spi.replace('Leicester City','Leicester')\n",
        "spi= spi.replace('West Ham United','West Ham')\n",
        "spi= spi.replace('Brighton and Hove Albion','Brighton')\n",
        "spi= spi.replace('Norwich City','Norwich')\n",
        "spi= spi.replace('AFC Bournemouth','Bournemouth')\n",
        "Left_join = pd.merge(gwfixtures,\n",
        "                     spi,\n",
        "                     on ='team_h',\n",
        "                     how ='left')\n",
        "homespi = Left_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'league',\n",
        "  'off',\n",
        " 'def',\n",
        " 'name',\n",
        " 'team_a_y',])\n",
        "homespi.rename(columns = {'team_a_x':'team_a', 'spi':'Home SPI'}, inplace = True)\n",
        "away_join = pd.merge(homespi,\n",
        "                     spi,\n",
        "                     on ='team_a',\n",
        "                     how ='left')\n",
        "homesawayspi = away_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'name',\n",
        " 'league',\n",
        " 'off',\n",
        " 'def',\n",
        " 'team_h_y'])\n",
        "homesawayspi.rename(columns = {'team_h_x':'team_h', 'spi':'Away SPI'}, inplace = True)\n",
        "homesawayspi['Event'] = homesawayspi['event'].astype(str)\n",
        "gw4 = homesawayspi.query('Event==\"4.0\"')\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw4['League_Average']  = laverage\n",
        "gw4.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw4['home_difference'] = gw4.HomeSPI - gw4.League_Average\n",
        "gw4['away_difference'] = gw4.AwaySPI - gw4.League_Average\n",
        "gw4['home_adjustment'] = (gw4.home_difference + gw4.League_Average)/gw4.League_Average\n",
        "gw4['away_adjustment'] = (gw4.away_difference + gw4.League_Average)/gw4.League_Average\n",
        "gw4adjustments = gw4[['team_h', 'home_adjustment']].append(gw4[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw4adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw4adjustments"
      ],
      "metadata": {
        "id": "0oqPsFQJjyR0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 746
        },
        "outputId": "98dc1bb6-2a19-474c-bbbc-6cdf12d40f5b"
      },
      "execution_count": 143,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-143-b323d0b6c0b0>:58: FutureWarning:\n",
            "\n",
            "The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  home_adjustment\n",
              "0                Luton Town         0.770968\n",
              "1          Sheffield United         0.786115\n",
              "2                 Brentford         1.071962\n",
              "3                   Burnley         0.874634\n",
              "4                   Chelsea         1.053063\n",
              "5           Manchester City         1.278461\n",
              "6                  Brighton         1.123934\n",
              "7            Crystal Palace         1.020824\n",
              "8                 Liverpool         1.166318\n",
              "9                   Arsenal         1.166179\n",
              "10                 West Ham         0.988306\n",
              "11                  Everton         0.884223\n",
              "12              Bournemouth         0.827943\n",
              "13                Tottenham         1.002480\n",
              "14        Nottingham Forest         0.780000\n",
              "15                   Fulham         0.948007\n",
              "16         Newcastle United         1.163122\n",
              "17  Wolverhampton Wanderers         0.820717\n",
              "18              Aston Villa         1.101978\n",
              "19        Manchester United         1.098921"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9f4abc1b-84f3-4237-a357-15fd0b30fcfb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>home_adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.770968</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.786115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.071962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.874634</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.053063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.278461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.123934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.020824</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.166318</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.166179</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.988306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.884223</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.827943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.002480</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.780000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.948007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.163122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.820717</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.101978</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.098921</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f4abc1b-84f3-4237-a357-15fd0b30fcfb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9f4abc1b-84f3-4237-a357-15fd0b30fcfb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9f4abc1b-84f3-4237-a357-15fd0b30fcfb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f9c99ee0-f429-43b6-b83f-0bffd17ad4d9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f9c99ee0-f429-43b6-b83f-0bffd17ad4d9')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f9c99ee0-f429-43b6-b83f-0bffd17ad4d9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 143
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdf = pd.merge(master,\n",
        "                     gw4adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwd = rawdf.query('pos==\"F\"')\n",
        "rawfwd['xP'] = ((rawfwd.expected_goals * 4/3)+(rawfwd.expected_assists * 3/3) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
        "rawfwd = rawfwd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "rawmd = rawdf.query('pos==\"M\"')\n",
        "rawmd['xP'] = ((rawmd.expected_goals * 5/3)+(rawmd.expected_assists * 3/3) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
        "rawmd = rawmd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "#epltabledef['xCSP'] = (4 - (epltabledef.xGA * 4/1))\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgk= rawdfcs.query('pos==\"G\"')\n",
        "#rawgk['xP'] = ((rawgk.xCSP)+ (rawgk.apppoint)) * rawgk.home_adjustment\n",
        "rawgk['xP'] = rawgk.apppoint * rawgk.home_adjustment\n",
        "rawgk = rawgk.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "'home_adjustment'])\n",
        "rawdef= rawdfcs.query('pos==\"D\"')\n",
        "#rawdef['xP'] = ((rawdef.expected_goals * 6/1)+(rawdef.expected_assists * 3/1) +(rawdef.xCSP)+ (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "rawdef['xP'] = ((rawdef.expected_goals * 6/3)+(rawdef.expected_assists * 3/3) + (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "rawdef = rawdef.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        " 'home_adjustment'])\n",
        "rawallplayers = pd.concat([rawfwd, rawmd, rawdef, rawgk], ignore_index=True)\n",
        "rawallplayers\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "AWnYpVh5kDzO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 493
        },
        "outputId": "b0bba1cb-1f6a-4738-edf2-7e4180feaa2a"
      },
      "execution_count": 145,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-145-eb72da076401>:48: FutureWarning:\n",
            "\n",
            "The default value of regex will change from True to False in a future version.\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id pos     name  cost  selected_by_percent  goals_scored  assists  bps  \\\n",
              "0      1   F  Balogun   4.4                  0.6             0        0    0   \n",
              "1      8   F  G.Jesus   7.9                  1.5             0        0    1   \n",
              "2     13   F  Nketiah   5.6                  7.1             2        1   56   \n",
              "3     39   F    Davis   4.9                  0.2             0        0    0   \n",
              "4     44   F    Duran   5.0                  0.1             1        0   34   \n",
              "..   ...  ..      ...   ...                  ...           ...      ...  ...   \n",
              "687  647   G    Anang   4.0                  0.0             0        0    0   \n",
              "688  546   G  Bentley   4.0                  0.4             0        0    0   \n",
              "689  564   G     King   4.0                  0.8             0        0    0   \n",
              "690  569   G  Jos√© S√°   5.0                  1.3             0        0   71   \n",
              "691  571   G   ≈†arkiƒá   4.0                  0.5             0        0    0   \n",
              "\n",
              "     ict_index  points  points_per_game  minutes        xP  \n",
              "0          0.0       0              0.0        0  2.332358  \n",
              "1          3.8       1              1.0        1  2.561707  \n",
              "2         19.0      18              6.0      195  4.738575  \n",
              "3          0.0       0              0.0        0  2.203956  \n",
              "4          7.1       8              4.0       20  3.012074  \n",
              "..         ...     ...              ...      ...       ...  \n",
              "687        0.0       0              0.0        0  1.976612  \n",
              "688        0.0       0              0.0        0  1.641433  \n",
              "689        0.0       0              0.0        0  1.641433  \n",
              "690       10.7      14              4.7      270  1.641433  \n",
              "691        0.0       0              0.0        0  1.641433  \n",
              "\n",
              "[692 rows x 13 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b7b57106-332a-4a3d-9847-a042869885fd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>xP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.332358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2.561707</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>7.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>56</td>\n",
              "      <td>19.0</td>\n",
              "      <td>18</td>\n",
              "      <td>6.0</td>\n",
              "      <td>195</td>\n",
              "      <td>4.738575</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.203956</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>7.1</td>\n",
              "      <td>8</td>\n",
              "      <td>4.0</td>\n",
              "      <td>20</td>\n",
              "      <td>3.012074</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>687</th>\n",
              "      <td>647</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.976612</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>688</th>\n",
              "      <td>546</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.641433</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>689</th>\n",
              "      <td>564</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.641433</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>690</th>\n",
              "      <td>569</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>71</td>\n",
              "      <td>10.7</td>\n",
              "      <td>14</td>\n",
              "      <td>4.7</td>\n",
              "      <td>270</td>\n",
              "      <td>1.641433</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>691</th>\n",
              "      <td>571</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.641433</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>692 rows √ó 13 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b7b57106-332a-4a3d-9847-a042869885fd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b7b57106-332a-4a3d-9847-a042869885fd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b7b57106-332a-4a3d-9847-a042869885fd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7818deec-f5f2-4d2a-b206-94aec3313e6a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7818deec-f5f2-4d2a-b206-94aec3313e6a')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7818deec-f5f2-4d2a-b206-94aec3313e6a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 145
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawgk1= rawdfcs.query('pos==\"G\"')\n",
        "rawgk1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "z3FgmhoCb3GG",
        "outputId": "a6b34040-f34d-4ac1-f7cd-4bd54432b5c8"
      },
      "execution_count": 146,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos       name  cost  selected_by_percent  \\\n",
              "16    17                  Arsenal   G   Ramsdale   5.0                 16.7   \n",
              "17    18                  Arsenal   G  R√∫narsson   4.0                  0.1   \n",
              "29   113                  Arsenal   G       Raya   4.8                  2.8   \n",
              "33   646                  Arsenal   G       Hein   4.0                  0.0   \n",
              "50    49              Aston Villa   G   Martinez   5.0                  6.8   \n",
              "..   ...                      ...  ..        ...   ...                  ...   \n",
              "658  647                 West Ham   G      Anang   4.0                  0.0   \n",
              "663  546  Wolverhampton Wanderers   G    Bentley   4.0                  0.4   \n",
              "679  564  Wolverhampton Wanderers   G       King   4.0                  0.8   \n",
              "684  569  Wolverhampton Wanderers   G    Jos√© S√°   5.0                  1.3   \n",
              "686  571  Wolverhampton Wanderers   G     ≈†arkiƒá   4.0                  0.5   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "16              0.0              0.01             0        0   45        4.0   \n",
              "17              0.0              0.00             0        0    0        0.0   \n",
              "29              0.0              0.00             0        0    0        0.0   \n",
              "33              0.0              0.00             0        0    0        0.0   \n",
              "50              0.0              0.00             0        0   49        6.8   \n",
              "..              ...               ...           ...      ...  ...        ...   \n",
              "658             0.0              0.00             0        0    0        0.0   \n",
              "663             0.0              0.00             0        0    0        0.0   \n",
              "679             0.0              0.00             0        0    0        0.0   \n",
              "684             0.0              0.00             0        0   71       10.7   \n",
              "686             0.0              0.00             0        0    0        0.0   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  home_adjustment  \\\n",
              "16        9              3.0      270         2            3         1.166179   \n",
              "17        0              0.0        0         2            3         1.166179   \n",
              "29        0              0.0        0         2            3         1.166179   \n",
              "33        0              0.0        0         2            3         1.166179   \n",
              "50        9              4.5      180         2            3         1.101978   \n",
              "..      ...              ...      ...       ...          ...              ...   \n",
              "658       0              0.0        0         2            3         0.988306   \n",
              "663       0              0.0        0         2            3         0.820717   \n",
              "679       0              0.0        0         2            3         0.820717   \n",
              "684      14              4.7      270         2            3         0.820717   \n",
              "686       0              0.0        0         2            3         0.820717   \n",
              "\n",
              "     xGA  \n",
              "16   2.7  \n",
              "17   2.7  \n",
              "29   2.7  \n",
              "33   2.7  \n",
              "50   4.7  \n",
              "..   ...  \n",
              "658  5.3  \n",
              "663  5.7  \n",
              "679  5.7  \n",
              "684  5.7  \n",
              "686  5.7  \n",
              "\n",
              "[83 rows x 19 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-21a5804e-4328-4609-87eb-0b060c6f8d81\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xGA</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Ramsdale</td>\n",
              "      <td>5.0</td>\n",
              "      <td>16.7</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>45</td>\n",
              "      <td>4.0</td>\n",
              "      <td>9</td>\n",
              "      <td>3.0</td>\n",
              "      <td>270</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>R√∫narsson</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>113</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Raya</td>\n",
              "      <td>4.8</td>\n",
              "      <td>2.8</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>646</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Hein</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>49</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>G</td>\n",
              "      <td>Martinez</td>\n",
              "      <td>5.0</td>\n",
              "      <td>6.8</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>49</td>\n",
              "      <td>6.8</td>\n",
              "      <td>9</td>\n",
              "      <td>4.5</td>\n",
              "      <td>180</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>4.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>658</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>5.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>663</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>5.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>679</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>5.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>684</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>71</td>\n",
              "      <td>10.7</td>\n",
              "      <td>14</td>\n",
              "      <td>4.7</td>\n",
              "      <td>270</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>5.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>686</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>5.7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>83 rows √ó 19 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-21a5804e-4328-4609-87eb-0b060c6f8d81')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-21a5804e-4328-4609-87eb-0b060c6f8d81 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-21a5804e-4328-4609-87eb-0b060c6f8d81');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9e5f2a6c-3fa5-4d72-9aad-c32a0642b21f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9e5f2a6c-3fa5-4d72-9aad-c32a0642b21f')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9e5f2a6c-3fa5-4d72-9aad-c32a0642b21f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 146
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter"
      ],
      "metadata": {
        "id": "ONZy1SvCDu6y"
      },
      "execution_count": 147,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "writer = ExcelWriter('notes.xlsx')"
      ],
      "metadata": {
        "id": "iubZBRlVEhiz"
      },
      "execution_count": 148,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawallplayers.to_excel(writer, sheet_name='Sheet1')\n",
        "gw2adjustments.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "slYEIma_E0uP",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "33282b82-05da-4774-fee8-97c4ad9fe6ab"
      },
      "execution_count": 149,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-149-114ca51f6f07>:6: FutureWarning:\n",
            "\n",
            "save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwfixtures"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "3udskoGrT73A",
        "outputId": "b4eb4a7d-d945-40e0-8832-4125eea9cf50"
      },
      "execution_count": 150,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     event            team_h                   team_a          kickoff_time\n",
              "0      NaN        Luton Town                  Burnley                   NaN\n",
              "1      NaN   Manchester City                Brentford                   NaN\n",
              "2      1.0           Burnley          Manchester City  2023-08-11T19:00:00Z\n",
              "3      1.0           Arsenal        Nottingham Forest  2023-08-12T12:00:00Z\n",
              "4      1.0       Bournemouth                 West Ham  2023-08-12T14:00:00Z\n",
              "..     ...               ...                      ...                   ...\n",
              "375   38.0    Crystal Palace              Aston Villa  2024-05-19T15:00:00Z\n",
              "376   38.0         Liverpool  Wolverhampton Wanderers  2024-05-19T15:00:00Z\n",
              "377   38.0        Luton Town                   Fulham  2024-05-19T15:00:00Z\n",
              "378   38.0   Manchester City                 West Ham  2024-05-19T15:00:00Z\n",
              "379   38.0  Sheffield United                Tottenham  2024-05-19T15:00:00Z\n",
              "\n",
              "[380 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b4f7d29d-673e-4da9-a81d-0d7bba1632f0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>event</th>\n",
              "      <th>team_h</th>\n",
              "      <th>team_a</th>\n",
              "      <th>kickoff_time</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2023-08-11T19:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>2023-08-12T12:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2023-08-12T14:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>375</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>376</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>379</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>380 rows √ó 4 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b4f7d29d-673e-4da9-a81d-0d7bba1632f0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b4f7d29d-673e-4da9-a81d-0d7bba1632f0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b4f7d29d-673e-4da9-a81d-0d7bba1632f0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f7c75723-eacb-4be3-af57-76fa766b1886\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f7c75723-eacb-4be3-af57-76fa766b1886')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f7c75723-eacb-4be3-af57-76fa766b1886 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 150
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfallgw = pd.merge(master,\n",
        "                     gw4adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwdallgw = rawdfallgw.query('pos==\"F\"')\n",
        "rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/3)+(rawfwdallgw.expected_assists * 3/3) + (rawfwdallgw.apppoint))\n",
        "rawfwdallgw = rawfwdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "rawmdallgw = rawdfallgw.query('pos==\"M\"')\n",
        "rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/3)+(rawmdallgw.expected_assists * 3/3) + (rawmdallgw.apppoint))\n",
        "rawmdallgw = rawmdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "#epltabledef['xCSP'] = (4 - (epltabledef.xGA * 4/1))\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgkallgw= rawdfcs.query('pos==\"G\"')\n",
        "rawgkallgw['xPallgw'] = (rawgkallgw.apppoint)\n",
        "#rawgkallgw['xPallgw'] = ((rawgkallgw.xCSP)+ (rawgkallgw.apppoint))\n",
        "rawgkallgw = rawgkallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        "  'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "])\n",
        "rawdefallgw= rawdfcs.query('pos==\"D\"')\n",
        "#rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/1)+(rawdefallgw.expected_assists * 3/1) +(rawdefallgw.xCSP)+ (rawdefallgw.apppoint)\n",
        "rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/3)+(rawdefallgw.expected_assists * 3/3) + (rawdefallgw.apppoint)\n",
        "rawdefallgw = rawdefallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',])\n",
        "rawallplayersallgw = pd.concat([rawfwdallgw, rawmdallgw, rawdefallgw, rawgkallgw], ignore_index=True)\n",
        "rawallplayersallgw\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 756
        },
        "id": "xxPTwE3TZZC0",
        "outputId": "1ce05d12-3aca-499d-f113-2e1f7ddf995d"
      },
      "execution_count": 151,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-151-7a741fe317bb>:46: FutureWarning:\n",
            "\n",
            "The default value of regex will change from True to False in a future version.\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.6   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  1.5   \n",
              "2     13                  Arsenal   F  Nketiah   5.6                  7.1   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.1   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "687  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "688  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "689  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "690  569  Wolverhampton Wanderers   G  Jos√© S√°   5.0                  1.3   \n",
              "691  571  Wolverhampton Wanderers   G   ≈†arkiƒá   4.0                  0.5   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  points  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0       0              0.0        0   \n",
              "1               0        0    1        3.8       1              1.0        1   \n",
              "2               2        1   56       19.0      18              6.0      195   \n",
              "3               0        0    0        0.0       0              0.0        0   \n",
              "4               1        0   34        7.1       8              4.0       20   \n",
              "..            ...      ...  ...        ...     ...              ...      ...   \n",
              "687             0        0    0        0.0       0              0.0        0   \n",
              "688             0        0    0        0.0       0              0.0        0   \n",
              "689             0        0    0        0.0       0              0.0        0   \n",
              "690             0        0   71       10.7      14              4.7      270   \n",
              "691             0        0    0        0.0       0              0.0        0   \n",
              "\n",
              "     home_adjustment   xPallgw  \n",
              "0           1.166179  2.000000  \n",
              "1           1.166179  2.196667  \n",
              "2           1.166179  4.063333  \n",
              "3           1.101978  2.000000  \n",
              "4           1.101978  2.733333  \n",
              "..               ...       ...  \n",
              "687         0.988306  2.000000  \n",
              "688         0.820717  2.000000  \n",
              "689         0.820717  2.000000  \n",
              "690         0.820717  2.000000  \n",
              "691         0.820717  2.000000  \n",
              "\n",
              "[692 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5fb09a6e-e57f-4108-a00c-4a5cfdb6ab1f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.196667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>7.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>56</td>\n",
              "      <td>19.0</td>\n",
              "      <td>18</td>\n",
              "      <td>6.0</td>\n",
              "      <td>195</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>4.063333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>7.1</td>\n",
              "      <td>8</td>\n",
              "      <td>4.0</td>\n",
              "      <td>20</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.733333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>687</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>688</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>689</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>690</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>71</td>\n",
              "      <td>10.7</td>\n",
              "      <td>14</td>\n",
              "      <td>4.7</td>\n",
              "      <td>270</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>691</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>692 rows √ó 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5fb09a6e-e57f-4108-a00c-4a5cfdb6ab1f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5fb09a6e-e57f-4108-a00c-4a5cfdb6ab1f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5fb09a6e-e57f-4108-a00c-4a5cfdb6ab1f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-42845549-91c6-4746-b5bc-b4a02d133b3d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-42845549-91c6-4746-b5bc-b4a02d133b3d')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-42845549-91c6-4746-b5bc-b4a02d133b3d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 151
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawmdallgw"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "ZtNrmQMhefCc",
        "outputId": "2916184d-9896-4f8e-af33-9c7c3ae443dd"
      },
      "execution_count": 152,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos             name  cost  \\\n",
              "2      3                  Arsenal   M         M.Elneny   4.4   \n",
              "3      4                  Arsenal   M     F√°bio Vieira   5.4   \n",
              "5      6                  Arsenal   M          Havertz   7.3   \n",
              "8      9                  Arsenal   M         Jorginho   5.4   \n",
              "10    11                  Arsenal   M       Marquinhos   4.5   \n",
              "..   ...                      ...  ..              ...   ...   \n",
              "681  566  Wolverhampton Wanderers   M       Matheus N.   5.0   \n",
              "682  567  Wolverhampton Wanderers   M             Neto   5.5   \n",
              "683  568  Wolverhampton Wanderers   M          Podence   5.4   \n",
              "685  570  Wolverhampton Wanderers   M          Sarabia   5.0   \n",
              "689  574  Wolverhampton Wanderers   M  Boubacar Traore   4.4   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  points  \\\n",
              "2                    0.1             0        0    0        0.0       0   \n",
              "3                    0.1             0        2   22        6.3       7   \n",
              "5                    2.6             0        0   12       11.6       5   \n",
              "8                    0.2             0        0    9        1.5       2   \n",
              "10                   0.1             0        0    0        0.0       0   \n",
              "..                   ...           ...      ...  ...        ...     ...   \n",
              "681                  0.2             0        0   15        8.9       1   \n",
              "682                  0.3             0        1   55       28.2      10   \n",
              "683                  0.1             0        0    0        0.0       0   \n",
              "685                  0.2             0        1   28       14.4       8   \n",
              "689                  0.4             0        0    0        0.0       0   \n",
              "\n",
              "     points_per_game  minutes  home_adjustment   xPallgw  \n",
              "2                0.0        0         1.166179  2.000000  \n",
              "3                7.0       34         1.166179  2.286667  \n",
              "5                1.7      235         1.166179  2.996667  \n",
              "8                1.0       17         1.166179  2.040000  \n",
              "10               0.0        0         1.166179  2.000000  \n",
              "..               ...      ...              ...       ...  \n",
              "681              0.5      180         0.820717  2.333333  \n",
              "682              3.3      270         0.820717  4.456667  \n",
              "683              0.0        0         0.820717  2.000000  \n",
              "685              2.7      113         0.820717  3.250000  \n",
              "689              0.0        0         0.820717  2.000000  \n",
              "\n",
              "[296 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ed1ac0c4-4835-49a4-a591-7d7d6ca8f0df\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>F√°bio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>22</td>\n",
              "      <td>6.3</td>\n",
              "      <td>7</td>\n",
              "      <td>7.0</td>\n",
              "      <td>34</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.286667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.3</td>\n",
              "      <td>2.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>12</td>\n",
              "      <td>11.6</td>\n",
              "      <td>5</td>\n",
              "      <td>1.7</td>\n",
              "      <td>235</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.996667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Jorginho</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>1.5</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>17</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.040000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Marquinhos</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>681</th>\n",
              "      <td>566</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Matheus N.</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>8.9</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5</td>\n",
              "      <td>180</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>682</th>\n",
              "      <td>567</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Neto</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>55</td>\n",
              "      <td>28.2</td>\n",
              "      <td>10</td>\n",
              "      <td>3.3</td>\n",
              "      <td>270</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>4.456667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>683</th>\n",
              "      <td>568</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Podence</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>685</th>\n",
              "      <td>570</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Sarabia</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>28</td>\n",
              "      <td>14.4</td>\n",
              "      <td>8</td>\n",
              "      <td>2.7</td>\n",
              "      <td>113</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>3.250000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>689</th>\n",
              "      <td>574</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Boubacar Traore</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>296 rows √ó 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ed1ac0c4-4835-49a4-a591-7d7d6ca8f0df')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ed1ac0c4-4835-49a4-a591-7d7d6ca8f0df button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ed1ac0c4-4835-49a4-a591-7d7d6ca8f0df');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-155ec967-8ff2-4735-9187-7bb44fb156e2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-155ec967-8ff2-4735-9187-7bb44fb156e2')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-155ec967-8ff2-4735-9187-7bb44fb156e2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 152
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw2blanks = [['Burnley', 0], ['Luton Town', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "blanks2 = pd.DataFrame(gw2blanks, columns=['team', 'gw2adjustment'])\n",
        "blanks2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "xkGffHD0iXWI",
        "outputId": "ed2d7a45-1956-42a4-9ef4-4fd44a18121a"
      },
      "execution_count": 99,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         team  gw2adjustment\n",
              "0     Burnley              0\n",
              "1  Luton Town              0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-256e79de-0052-450d-a5db-b167fa3a654f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw2adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-256e79de-0052-450d-a5db-b167fa3a654f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-256e79de-0052-450d-a5db-b167fa3a654f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-256e79de-0052-450d-a5db-b167fa3a654f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 99
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw2adjustments = pd.concat([gw2adjustments, blanks2])\n",
        "#gw2adjustments = gw2adjustments.reset_index(drop=True)\n",
        "#gw2adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "JNr3eV5Rir58",
        "outputId": "5d6dcb91-5228-4f6d-f140-fc972937b063"
      },
      "execution_count": 100,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw2adjustment\n",
              "0                   Arsenal       1.145356\n",
              "1               Aston Villa       1.217755\n",
              "2               Bournemouth       0.661625\n",
              "3                 Brentford       1.123955\n",
              "4                  Brighton       1.303218\n",
              "5                   Chelsea       1.064757\n",
              "6            Crystal Palace       0.854644\n",
              "7                   Everton       0.782245\n",
              "8                    Fulham       0.876045\n",
              "9                 Liverpool       1.338375\n",
              "10          Manchester City       1.115339\n",
              "11        Manchester United       1.096440\n",
              "12         Newcastle United       0.884661\n",
              "13        Nottingham Forest       0.993886\n",
              "14         Sheffield United       1.006114\n",
              "15                Tottenham       0.903560\n",
              "16                 West Ham       0.935243\n",
              "17  Wolverhampton Wanderers       0.696782\n",
              "18                  Burnley       0.000000\n",
              "19               Luton Town       0.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-154ee1cc-9fa5-42d5-b408-94bf2588e083\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw2adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.145356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.217755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.661625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.123955</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.303218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.064757</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.854644</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.782245</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.876045</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.338375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.115339</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.096440</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.884661</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.993886</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>1.006114</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.903560</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.935243</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.696782</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-154ee1cc-9fa5-42d5-b408-94bf2588e083')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-154ee1cc-9fa5-42d5-b408-94bf2588e083 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-154ee1cc-9fa5-42d5-b408-94bf2588e083');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cb5e45de-5f12-439d-838d-5cf23a732df6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cb5e45de-5f12-439d-838d-5cf23a732df6')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cb5e45de-5f12-439d-838d-5cf23a732df6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 100
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "##gw3blanks = [['Newcastle United', 0], ['Manchester United', 0], ['Brentford', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "##blanks = pd.DataFrame(gw3blanks, columns=['team', 'gw3adjustment'])\n",
        "##blanks"
      ],
      "metadata": {
        "id": "iCizQgwMD84B"
      },
      "execution_count": 102,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#gw3adjustments = pd.concat([gw3adjustments, blanks])\n",
        "#gw3adjustments = gw3adjustments.reset_index(drop=True)\n",
        "gw3adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "iyc8Xy80D_GR",
        "outputId": "0cb6a8b0-e5b4-4bf0-b670-fd73e2f5eaec"
      },
      "execution_count": 103,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw3adjustment\n",
              "0                   Chelsea       1.282095\n",
              "1               Bournemouth       0.825462\n",
              "2                   Arsenal       1.218172\n",
              "3                 Brentford       1.051138\n",
              "4                   Everton       1.063506\n",
              "5         Manchester United       1.318921\n",
              "6                  Brighton       1.135628\n",
              "7                   Burnley       0.772656\n",
              "8          Sheffield United       0.507653\n",
              "9          Newcastle United       0.996804\n",
              "10               Luton Town       0.717905\n",
              "11                Tottenham       1.174538\n",
              "12                   Fulham       0.781828\n",
              "13           Crystal Palace       0.948862\n",
              "14  Wolverhampton Wanderers       0.936494\n",
              "15        Nottingham Forest       0.681079\n",
              "16                 West Ham       0.864372\n",
              "17              Aston Villa       1.227344\n",
              "18          Manchester City       1.492347\n",
              "19                Liverpool       1.003196"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-75827c23-2909-4dc0-8f35-40383a6a0506\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw3adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.825462</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.218172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.051138</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.063506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.318921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.135628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.772656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.507653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.996804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.174538</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.781828</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.948862</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.936494</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.681079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.864372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.227344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.492347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.003196</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-75827c23-2909-4dc0-8f35-40383a6a0506')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-75827c23-2909-4dc0-8f35-40383a6a0506 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-75827c23-2909-4dc0-8f35-40383a6a0506');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-dee214eb-fa6a-498e-b016-6f97304d1930\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dee214eb-fa6a-498e-b016-6f97304d1930')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-dee214eb-fa6a-498e-b016-6f97304d1930 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 103
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw4 = homesawayspi.query('Event==\"4.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw4['League_Average']  = laverage\n",
        "gw4.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw4['home_difference'] = gw4.HomeSPI - gw4.League_Average\n",
        "gw4['away_difference'] = gw4.AwaySPI - gw4.League_Average\n",
        "gw4['home_adjustment'] = (gw4.home_difference - gw4.away_difference + gw4.League_Average)/gw4.League_Average\n",
        "gw4['away_adjustment'] = (gw4.away_difference - gw4.home_difference+ gw4.League_Average)/gw4.League_Average\n",
        "gw4adjustments = gw4[['team_h', 'home_adjustment']].append(gw4[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw4adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw4adjustments.rename(columns = {'home_adjustment':'gw4adjustment'}, inplace = True)\n",
        "gw4adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 746
        },
        "id": "pzyah3Z-kgct",
        "outputId": "62180289-75e0-4486-973a-8e280b8a2aa5"
      },
      "execution_count": 105,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-105-fa94501b1623>:13: FutureWarning:\n",
            "\n",
            "The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw4adjustment\n",
              "0                Luton Town       0.782662\n",
              "1          Sheffield United       0.901892\n",
              "2                 Brentford       1.244019\n",
              "3                   Burnley       0.872154\n",
              "4                   Chelsea       1.273063\n",
              "5           Manchester City       1.330454\n",
              "6                  Brighton       0.960812\n",
              "7            Crystal Palace       1.200107\n",
              "8                 Liverpool       1.064340\n",
              "9                   Arsenal       1.067258\n",
              "10                 West Ham       1.217338\n",
              "11                  Everton       1.098108\n",
              "12              Bournemouth       0.755981\n",
              "13                Tottenham       1.127846\n",
              "14        Nottingham Forest       0.726937\n",
              "15                   Fulham       0.669546\n",
              "16         Newcastle United       1.039188\n",
              "17  Wolverhampton Wanderers       0.799893\n",
              "18              Aston Villa       0.935660\n",
              "19        Manchester United       0.932742"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0d32d0c1-3aec-40e6-b711-5077b512720c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw4adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.782662</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.901892</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.244019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.872154</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.273063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.330454</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>0.960812</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.200107</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.064340</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.067258</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.217338</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.098108</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.755981</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.127846</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.726937</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.669546</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.039188</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.799893</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0.935660</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0.932742</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0d32d0c1-3aec-40e6-b711-5077b512720c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0d32d0c1-3aec-40e6-b711-5077b512720c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0d32d0c1-3aec-40e6-b711-5077b512720c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1b480e16-628a-489d-b019-4a30b42fa8d7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1b480e16-628a-489d-b019-4a30b42fa8d7')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1b480e16-628a-489d-b019-4a30b42fa8d7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 105
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw2 = homesawayspi.query('Event==\"2.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw2['League_Average']  = laverage\n",
        "gw2.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw2['home_difference'] = gw2.HomeSPI - gw2.League_Average\n",
        "gw2['away_difference'] = gw2.AwaySPI - gw2.League_Average\n",
        "gw2['home_adjustment'] = (gw2.home_difference - gw2.away_difference + gw2.League_Average)/gw2.League_Average\n",
        "gw2['away_adjustment'] = (gw2.away_difference - gw2.home_difference+ gw2.League_Average)/gw2.League_Average\n",
        "gw2adjustments = gw2[['team_h', 'home_adjustment']].append(gw2[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw2adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw2adjustments.rename(columns = {'home_adjustment':'gw2adjustment'}, inplace = True)\n",
        "gw2adjustments = gw2adjustments.groupby('team', as_index=False)['gw2adjustment'].aggregate('sum')\n",
        "gw2adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 683
        },
        "id": "nL5rLLG4kOqM",
        "outputId": "04747c34-3d80-4121-f7aa-da256c040741"
      },
      "execution_count": 98,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-98-cc71a582ca3c>:13: FutureWarning:\n",
            "\n",
            "The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw2adjustment\n",
              "0                   Arsenal       1.145356\n",
              "1               Aston Villa       1.217755\n",
              "2               Bournemouth       0.661625\n",
              "3                 Brentford       1.123955\n",
              "4                  Brighton       1.303218\n",
              "5                   Chelsea       1.064757\n",
              "6            Crystal Palace       0.854644\n",
              "7                   Everton       0.782245\n",
              "8                    Fulham       0.876045\n",
              "9                 Liverpool       1.338375\n",
              "10          Manchester City       1.115339\n",
              "11        Manchester United       1.096440\n",
              "12         Newcastle United       0.884661\n",
              "13        Nottingham Forest       0.993886\n",
              "14         Sheffield United       1.006114\n",
              "15                Tottenham       0.903560\n",
              "16                 West Ham       0.935243\n",
              "17  Wolverhampton Wanderers       0.696782"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1788c76d-a02d-409e-a605-bfe57dd80b4d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw2adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.145356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.217755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.661625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.123955</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.303218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.064757</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.854644</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.782245</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.876045</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.338375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.115339</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.096440</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.884661</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.993886</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>1.006114</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.903560</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.935243</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.696782</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1788c76d-a02d-409e-a605-bfe57dd80b4d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1788c76d-a02d-409e-a605-bfe57dd80b4d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1788c76d-a02d-409e-a605-bfe57dd80b4d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-26d2d2dc-e248-47dd-b08c-dd38e0edfc22\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-26d2d2dc-e248-47dd-b08c-dd38e0edfc22')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-26d2d2dc-e248-47dd-b08c-dd38e0edfc22 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw3 = homesawayspi.query('Event==\"3.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw3['League_Average']  = laverage\n",
        "gw3.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw3['home_difference'] = gw3.HomeSPI - gw3.League_Average\n",
        "gw3['away_difference'] = gw3.AwaySPI - gw3.League_Average\n",
        "gw3['home_adjustment'] = (gw3.home_difference - gw3.away_difference + gw3.League_Average)/gw3.League_Average\n",
        "gw3['away_adjustment'] = (gw3.away_difference - gw3.home_difference+ gw3.League_Average)/gw3.League_Average\n",
        "gw3adjustments = gw3[['team_h', 'home_adjustment']].append(gw3[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw3adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw3adjustments.rename(columns = {'home_adjustment':'gw3adjustment'}, inplace = True)\n",
        "gw3adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 746
        },
        "id": "bg97rds1kb73",
        "outputId": "8e7d0521-d7c5-4ecb-9def-f478d5e92e91"
      },
      "execution_count": 101,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-101-a2637fad4f3e>:13: FutureWarning:\n",
            "\n",
            "The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw3adjustment\n",
              "0                   Chelsea       1.282095\n",
              "1               Bournemouth       0.825462\n",
              "2                   Arsenal       1.218172\n",
              "3                 Brentford       1.051138\n",
              "4                   Everton       1.063506\n",
              "5         Manchester United       1.318921\n",
              "6                  Brighton       1.135628\n",
              "7                   Burnley       0.772656\n",
              "8          Sheffield United       0.507653\n",
              "9          Newcastle United       0.996804\n",
              "10               Luton Town       0.717905\n",
              "11                Tottenham       1.174538\n",
              "12                   Fulham       0.781828\n",
              "13           Crystal Palace       0.948862\n",
              "14  Wolverhampton Wanderers       0.936494\n",
              "15        Nottingham Forest       0.681079\n",
              "16                 West Ham       0.864372\n",
              "17              Aston Villa       1.227344\n",
              "18          Manchester City       1.492347\n",
              "19                Liverpool       1.003196"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-150a1196-b7fa-4470-a40a-99ce1437a850\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw3adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.825462</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.218172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.051138</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.063506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.318921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.135628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.772656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.507653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.996804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.174538</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.781828</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.948862</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.936494</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.681079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.864372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.227344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.492347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.003196</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-150a1196-b7fa-4470-a40a-99ce1437a850')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-150a1196-b7fa-4470-a40a-99ce1437a850 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-150a1196-b7fa-4470-a40a-99ce1437a850');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-78e0cfc8-945f-4a89-826a-f7720a74b7e9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-78e0cfc8-945f-4a89-826a-f7720a74b7e9')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-78e0cfc8-945f-4a89-826a-f7720a74b7e9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 101
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw5 = homesawayspi.query('Event==\"5.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw5['League_Average']  = laverage\n",
        "gw5.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw5['home_difference'] = gw5.HomeSPI - gw5.League_Average\n",
        "gw5['away_difference'] = gw5.AwaySPI - gw5.League_Average\n",
        "gw5['home_adjustment'] = (gw5.home_difference - gw5.away_difference + gw5.League_Average)/gw5.League_Average\n",
        "gw5['away_adjustment'] = (gw5.away_difference - gw5.home_difference+ gw5.League_Average)/gw5.League_Average\n",
        "gw5adjustments = gw5[['team_h', 'home_adjustment']].append(gw5[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw5adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw5adjustments.rename(columns = {'home_adjustment':'gw5adjustment'}, inplace = True)\n",
        "gw5adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 746
        },
        "id": "7uE1H7R4Gems",
        "outputId": "7734592a-c47e-4789-9bd9-d90cafc9326b"
      },
      "execution_count": 106,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-106-a468e0b0b9ba>:13: FutureWarning:\n",
            "\n",
            "The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw5adjustment\n",
              "0   Wolverhampton Wanderers       0.654399\n",
              "1               Aston Villa       1.081155\n",
              "2                    Fulham       1.177039\n",
              "3         Manchester United       0.974987\n",
              "4                 Tottenham       1.216366\n",
              "5                  West Ham       0.709845\n",
              "6                   Everton       0.718044\n",
              "7               Bournemouth       0.774880\n",
              "8          Newcastle United       1.091160\n",
              "9         Nottingham Forest       0.905366\n",
              "10                Liverpool       1.345601\n",
              "11           Crystal Palace       0.918845\n",
              "12               Luton Town       0.822961\n",
              "13                 Brighton       1.025013\n",
              "14         Sheffield United       0.783634\n",
              "15          Manchester City       1.290155\n",
              "16                  Arsenal       1.281956\n",
              "17                  Chelsea       1.225120\n",
              "18                Brentford       0.908840\n",
              "19                  Burnley       1.094634"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ae051082-3b5e-4317-9453-8508733f0da7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw5adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.654399</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.081155</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.177039</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0.974987</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.216366</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.709845</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.718044</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.774880</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.091160</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.905366</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.345601</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.918845</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.822961</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.025013</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.783634</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.290155</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.281956</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.225120</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.908840</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>1.094634</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae051082-3b5e-4317-9453-8508733f0da7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ae051082-3b5e-4317-9453-8508733f0da7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ae051082-3b5e-4317-9453-8508733f0da7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-693bc83c-f132-4053-8d53-8871b3b8439f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-693bc83c-f132-4053-8d53-8871b3b8439f')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-693bc83c-f132-4053-8d53-8871b3b8439f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 106
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5blanks = [['Chelsea', 0], ['Manchester United', 0], ['Manchester City', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "#blanks32 = pd.DataFrame(gw5blanks, columns=['team', 'gw5adjustment'])\n",
        "#blanks32"
      ],
      "metadata": {
        "id": "p00QYlZ7UbAu"
      },
      "execution_count": 107,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5adjustments = pd.concat([gw5adjustments, blanks32])\n",
        "#gw5adjustments = gw5adjustments.reset_index(drop=True)\n",
        "#gw5adjustments"
      ],
      "metadata": {
        "id": "xh_AhxKJU0VW"
      },
      "execution_count": 108,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw6= homesawayspi.query('Event==\"6.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw6['League_Average']  = laverage\n",
        "gw6.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw6['home_difference'] = gw6.HomeSPI - gw6.League_Average\n",
        "gw6['away_difference'] = gw6.AwaySPI - gw6.League_Average\n",
        "gw6['home_adjustment'] = (gw6.home_difference - gw6.away_difference + gw6.League_Average)/gw6.League_Average\n",
        "gw6['away_adjustment'] = (gw6.away_difference - gw6.home_difference+ gw6.League_Average)/gw6.League_Average\n",
        "gw6adjustments = gw6[['team_h', 'home_adjustment']].append(gw6[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw6adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw6adjustments.rename(columns = {'home_adjustment':'gw6adjustment'}, inplace = True)\n",
        "gw6adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 746
        },
        "id": "OPB6Pz8sGZNe",
        "outputId": "f6fe725c-77c6-4639-91eb-cc0e95de162d"
      },
      "execution_count": 109,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-109-34edfb59e920>:13: FutureWarning:\n",
            "\n",
            "The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw6adjustment\n",
              "0                   Chelsea       0.951085\n",
              "1            Crystal Palace       1.072817\n",
              "2                Luton Town       0.950251\n",
              "3           Manchester City       1.498461\n",
              "4                 Brentford       1.187739\n",
              "5                   Burnley       0.775713\n",
              "6                   Arsenal       1.163699\n",
              "7                  Brighton       1.295992\n",
              "8                 Liverpool       1.178012\n",
              "9          Sheffield United       0.622993\n",
              "10              Aston Villa       1.048915\n",
              "11                   Fulham       0.927183\n",
              "12  Wolverhampton Wanderers       1.049749\n",
              "13        Nottingham Forest       0.501539\n",
              "14                  Everton       0.812261\n",
              "15        Manchester United       1.224287\n",
              "16                Tottenham       0.836301\n",
              "17              Bournemouth       0.704008\n",
              "18                 West Ham       0.821988\n",
              "19         Newcastle United       1.377007"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-339ecba9-0323-419b-aa10-65d701771ea4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw6adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.951085</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.072817</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.950251</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.498461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.187739</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.775713</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.163699</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.295992</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.178012</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.622993</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.048915</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.927183</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1.049749</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.501539</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.812261</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.224287</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.836301</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.704008</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.821988</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.377007</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-339ecba9-0323-419b-aa10-65d701771ea4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-339ecba9-0323-419b-aa10-65d701771ea4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-339ecba9-0323-419b-aa10-65d701771ea4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5256fce8-1972-4772-abbf-103f8c89e563\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5256fce8-1972-4772-abbf-103f8c89e563')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5256fce8-1972-4772-abbf-103f8c89e563 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 109
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw7= homesawayspi.query('Event==\"6.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw7['League_Average']  = laverage\n",
        "gw7.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw7['home_difference'] = gw7.HomeSPI - gw7.League_Average\n",
        "gw7['away_difference'] = gw7.AwaySPI - gw7.League_Average\n",
        "gw7['home_adjustment'] = (gw7.home_difference - gw7.away_difference + gw7.League_Average)/gw7.League_Average\n",
        "gw7['away_adjustment'] = (gw7.away_difference - gw7.home_difference+ gw7.League_Average)/gw7.League_Average\n",
        "gw7adjustments = gw7[['team_h', 'home_adjustment']].append(gw7[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw7adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw7adjustments.rename(columns = {'home_adjustment':'gw7adjustment'}, inplace = True)\n",
        "gw7adjustments"
      ],
      "metadata": {
        "id": "Ns7V93Gobs3z",
        "outputId": "f5720cf1-6208-4ecf-de79-34962b7b5801",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 746
        }
      },
      "execution_count": 153,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-153-52ef5c57abad>:13: FutureWarning:\n",
            "\n",
            "The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw7adjustment\n",
              "0                   Chelsea       0.951085\n",
              "1            Crystal Palace       1.072817\n",
              "2                Luton Town       0.950251\n",
              "3           Manchester City       1.498461\n",
              "4                 Brentford       1.187739\n",
              "5                   Burnley       0.775713\n",
              "6                   Arsenal       1.163699\n",
              "7                  Brighton       1.295992\n",
              "8                 Liverpool       1.178012\n",
              "9          Sheffield United       0.622993\n",
              "10              Aston Villa       1.048915\n",
              "11                   Fulham       0.927183\n",
              "12  Wolverhampton Wanderers       1.049749\n",
              "13        Nottingham Forest       0.501539\n",
              "14                  Everton       0.812261\n",
              "15        Manchester United       1.224287\n",
              "16                Tottenham       0.836301\n",
              "17              Bournemouth       0.704008\n",
              "18                 West Ham       0.821988\n",
              "19         Newcastle United       1.377007"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-81eaa611-e59e-4cc5-9185-cad2f9a93041\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw7adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.951085</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.072817</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.950251</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.498461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.187739</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.775713</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.163699</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.295992</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.178012</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.622993</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.048915</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.927183</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1.049749</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.501539</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.812261</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.224287</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.836301</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.704008</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.821988</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.377007</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-81eaa611-e59e-4cc5-9185-cad2f9a93041')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-81eaa611-e59e-4cc5-9185-cad2f9a93041 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-81eaa611-e59e-4cc5-9185-cad2f9a93041');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-683637fc-47cd-4114-9b39-ef1e7c778614\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-683637fc-47cd-4114-9b39-ef1e7c778614')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-683637fc-47cd-4114-9b39-ef1e7c778614 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 153
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw8= homesawayspi.query('Event==\"6.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw8['League_Average']  = laverage\n",
        "gw8.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw8['home_difference'] = gw8.HomeSPI - gw8.League_Average\n",
        "gw8['away_difference'] = gw8.AwaySPI - gw8.League_Average\n",
        "gw8['home_adjustment'] = (gw8.home_difference - gw8.away_difference + gw8.League_Average)/gw8.League_Average\n",
        "gw8['away_adjustment'] = (gw8.away_difference - gw8.home_difference+ gw8.League_Average)/gw8.League_Average\n",
        "gw8adjustments = gw8[['team_h', 'home_adjustment']].append(gw8[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw8adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw8adjustments.rename(columns = {'home_adjustment':'gw8adjustment'}, inplace = True)\n",
        "gw8adjustments"
      ],
      "metadata": {
        "id": "wlvV4OeQb34Z",
        "outputId": "d4d0ad95-54e6-42e2-c6a6-e238a6e0e2ca",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 746
        }
      },
      "execution_count": 154,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-154-dd94feaaec4f>:13: FutureWarning:\n",
            "\n",
            "The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw8adjustment\n",
              "0                   Chelsea       0.951085\n",
              "1            Crystal Palace       1.072817\n",
              "2                Luton Town       0.950251\n",
              "3           Manchester City       1.498461\n",
              "4                 Brentford       1.187739\n",
              "5                   Burnley       0.775713\n",
              "6                   Arsenal       1.163699\n",
              "7                  Brighton       1.295992\n",
              "8                 Liverpool       1.178012\n",
              "9          Sheffield United       0.622993\n",
              "10              Aston Villa       1.048915\n",
              "11                   Fulham       0.927183\n",
              "12  Wolverhampton Wanderers       1.049749\n",
              "13        Nottingham Forest       0.501539\n",
              "14                  Everton       0.812261\n",
              "15        Manchester United       1.224287\n",
              "16                Tottenham       0.836301\n",
              "17              Bournemouth       0.704008\n",
              "18                 West Ham       0.821988\n",
              "19         Newcastle United       1.377007"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-df5aad3d-40d4-4a6e-84c6-2f17b199644d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw8adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.951085</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.072817</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.950251</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.498461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.187739</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.775713</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.163699</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.295992</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.178012</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.622993</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.048915</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.927183</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1.049749</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.501539</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.812261</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.224287</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.836301</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.704008</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.821988</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.377007</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-df5aad3d-40d4-4a6e-84c6-2f17b199644d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-df5aad3d-40d4-4a6e-84c6-2f17b199644d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-df5aad3d-40d4-4a6e-84c6-2f17b199644d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c3d0d4a1-9db5-4cb8-aa1d-2c3c5e4d5ab6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c3d0d4a1-9db5-4cb8-aa1d-2c3c5e4d5ab6')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c3d0d4a1-9db5-4cb8-aa1d-2c3c5e4d5ab6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 154
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwadjustments48 = pd.merge(gw4adjustments,gw5adjustments, on ='team')\n",
        "gwadjustments48 = pd.merge(gwadjustments48,gw6adjustments, on ='team')\n",
        "gwadjustments48 = pd.merge(gwadjustments48,gw7adjustments, on ='team')\n",
        "gwadjustments48 = pd.merge(gwadjustments48,gw8adjustments, on ='team')\n",
        "gwadjustments48"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "P6_WVsnNkztJ",
        "outputId": "b3346ef9-7dfe-4641-f40d-698a7f7d6038"
      },
      "execution_count": 155,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  home_adjustment  gw5adjustment  gw6adjustment  \\\n",
              "0                Luton Town         0.770968       0.822961       0.950251   \n",
              "1          Sheffield United         0.786115       0.783634       0.622993   \n",
              "2                 Brentford         1.071962       0.908840       1.187739   \n",
              "3                   Burnley         0.874634       1.094634       0.775713   \n",
              "4                   Chelsea         1.053063       1.225120       0.951085   \n",
              "5           Manchester City         1.278461       1.290155       1.498461   \n",
              "6                  Brighton         1.123934       1.025013       1.295992   \n",
              "7            Crystal Palace         1.020824       0.918845       1.072817   \n",
              "8                 Liverpool         1.166318       1.345601       1.178012   \n",
              "9                   Arsenal         1.166179       1.281956       1.163699   \n",
              "10                 West Ham         0.988306       0.709845       0.821988   \n",
              "11                  Everton         0.884223       0.718044       0.812261   \n",
              "12              Bournemouth         0.827943       0.774880       0.704008   \n",
              "13                Tottenham         1.002480       1.216366       0.836301   \n",
              "14        Nottingham Forest         0.780000       0.905366       0.501539   \n",
              "15                   Fulham         0.948007       1.177039       0.927183   \n",
              "16         Newcastle United         1.163122       1.091160       1.377007   \n",
              "17  Wolverhampton Wanderers         0.820717       0.654399       1.049749   \n",
              "18              Aston Villa         1.101978       1.081155       1.048915   \n",
              "19        Manchester United         1.098921       0.974987       1.224287   \n",
              "\n",
              "    gw7adjustment  gw8adjustment  \n",
              "0        0.950251       0.950251  \n",
              "1        0.622993       0.622993  \n",
              "2        1.187739       1.187739  \n",
              "3        0.775713       0.775713  \n",
              "4        0.951085       0.951085  \n",
              "5        1.498461       1.498461  \n",
              "6        1.295992       1.295992  \n",
              "7        1.072817       1.072817  \n",
              "8        1.178012       1.178012  \n",
              "9        1.163699       1.163699  \n",
              "10       0.821988       0.821988  \n",
              "11       0.812261       0.812261  \n",
              "12       0.704008       0.704008  \n",
              "13       0.836301       0.836301  \n",
              "14       0.501539       0.501539  \n",
              "15       0.927183       0.927183  \n",
              "16       1.377007       1.377007  \n",
              "17       1.049749       1.049749  \n",
              "18       1.048915       1.048915  \n",
              "19       1.224287       1.224287  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d66c3506-091f-4c2c-8626-ed9d9194fdf6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>gw5adjustment</th>\n",
              "      <th>gw6adjustment</th>\n",
              "      <th>gw7adjustment</th>\n",
              "      <th>gw8adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.770968</td>\n",
              "      <td>0.822961</td>\n",
              "      <td>0.950251</td>\n",
              "      <td>0.950251</td>\n",
              "      <td>0.950251</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.786115</td>\n",
              "      <td>0.783634</td>\n",
              "      <td>0.622993</td>\n",
              "      <td>0.622993</td>\n",
              "      <td>0.622993</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.071962</td>\n",
              "      <td>0.908840</td>\n",
              "      <td>1.187739</td>\n",
              "      <td>1.187739</td>\n",
              "      <td>1.187739</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.874634</td>\n",
              "      <td>1.094634</td>\n",
              "      <td>0.775713</td>\n",
              "      <td>0.775713</td>\n",
              "      <td>0.775713</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.053063</td>\n",
              "      <td>1.225120</td>\n",
              "      <td>0.951085</td>\n",
              "      <td>0.951085</td>\n",
              "      <td>0.951085</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.278461</td>\n",
              "      <td>1.290155</td>\n",
              "      <td>1.498461</td>\n",
              "      <td>1.498461</td>\n",
              "      <td>1.498461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.123934</td>\n",
              "      <td>1.025013</td>\n",
              "      <td>1.295992</td>\n",
              "      <td>1.295992</td>\n",
              "      <td>1.295992</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.020824</td>\n",
              "      <td>0.918845</td>\n",
              "      <td>1.072817</td>\n",
              "      <td>1.072817</td>\n",
              "      <td>1.072817</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.166318</td>\n",
              "      <td>1.345601</td>\n",
              "      <td>1.178012</td>\n",
              "      <td>1.178012</td>\n",
              "      <td>1.178012</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>1.281956</td>\n",
              "      <td>1.163699</td>\n",
              "      <td>1.163699</td>\n",
              "      <td>1.163699</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>0.709845</td>\n",
              "      <td>0.821988</td>\n",
              "      <td>0.821988</td>\n",
              "      <td>0.821988</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.884223</td>\n",
              "      <td>0.718044</td>\n",
              "      <td>0.812261</td>\n",
              "      <td>0.812261</td>\n",
              "      <td>0.812261</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.827943</td>\n",
              "      <td>0.774880</td>\n",
              "      <td>0.704008</td>\n",
              "      <td>0.704008</td>\n",
              "      <td>0.704008</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.002480</td>\n",
              "      <td>1.216366</td>\n",
              "      <td>0.836301</td>\n",
              "      <td>0.836301</td>\n",
              "      <td>0.836301</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.780000</td>\n",
              "      <td>0.905366</td>\n",
              "      <td>0.501539</td>\n",
              "      <td>0.501539</td>\n",
              "      <td>0.501539</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.948007</td>\n",
              "      <td>1.177039</td>\n",
              "      <td>0.927183</td>\n",
              "      <td>0.927183</td>\n",
              "      <td>0.927183</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.163122</td>\n",
              "      <td>1.091160</td>\n",
              "      <td>1.377007</td>\n",
              "      <td>1.377007</td>\n",
              "      <td>1.377007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>0.654399</td>\n",
              "      <td>1.049749</td>\n",
              "      <td>1.049749</td>\n",
              "      <td>1.049749</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>1.081155</td>\n",
              "      <td>1.048915</td>\n",
              "      <td>1.048915</td>\n",
              "      <td>1.048915</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.098921</td>\n",
              "      <td>0.974987</td>\n",
              "      <td>1.224287</td>\n",
              "      <td>1.224287</td>\n",
              "      <td>1.224287</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d66c3506-091f-4c2c-8626-ed9d9194fdf6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d66c3506-091f-4c2c-8626-ed9d9194fdf6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d66c3506-091f-4c2c-8626-ed9d9194fdf6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3f01b926-60a3-40d7-9198-298cf737950e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3f01b926-60a3-40d7-9198-298cf737950e')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3f01b926-60a3-40d7-9198-298cf737950e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 155
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x = pd.merge(rawallplayersallgw,\n",
        "                     gwadjustments48,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "#rawdfgw228x.rename(columns = {'gw3adjustment_y':'gw3adjustment'}, inplace = True)\n",
        "rawdfgw228x = rawdfgw228x.round(1)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 513
        },
        "id": "-b-0jux2PKIX",
        "outputId": "f40447cf-634b-4694-a8a5-0814175d4eba"
      },
      "execution_count": 160,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.6   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  1.5   \n",
              "2     13                  Arsenal   F  Nketiah   5.6                  7.1   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.1   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "687  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "688  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "689  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "690  569  Wolverhampton Wanderers   G  Jos√© S√°   5.0                  1.3   \n",
              "691  571  Wolverhampton Wanderers   G   ≈†arkiƒá   4.0                  0.5   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  points  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0       0              0.0        0   \n",
              "1               0        0    1        3.8       1              1.0        1   \n",
              "2               2        1   56       19.0      18              6.0      195   \n",
              "3               0        0    0        0.0       0              0.0        0   \n",
              "4               1        0   34        7.1       8              4.0       20   \n",
              "..            ...      ...  ...        ...     ...              ...      ...   \n",
              "687             0        0    0        0.0       0              0.0        0   \n",
              "688             0        0    0        0.0       0              0.0        0   \n",
              "689             0        0    0        0.0       0              0.0        0   \n",
              "690             0        0   71       10.7      14              4.7      270   \n",
              "691             0        0    0        0.0       0              0.0        0   \n",
              "\n",
              "     home_adjustment_x  xPallgw  home_adjustment_y  gw5adjustment  \\\n",
              "0                  1.2      2.0                1.2            1.3   \n",
              "1                  1.2      2.2                1.2            1.3   \n",
              "2                  1.2      4.1                1.2            1.3   \n",
              "3                  1.1      2.0                1.1            1.1   \n",
              "4                  1.1      2.7                1.1            1.1   \n",
              "..                 ...      ...                ...            ...   \n",
              "687                1.0      2.0                1.0            0.7   \n",
              "688                0.8      2.0                0.8            0.7   \n",
              "689                0.8      2.0                0.8            0.7   \n",
              "690                0.8      2.0                0.8            0.7   \n",
              "691                0.8      2.0                0.8            0.7   \n",
              "\n",
              "     gw6adjustment  gw7adjustment  gw8adjustment  \n",
              "0              1.2            1.2            1.2  \n",
              "1              1.2            1.2            1.2  \n",
              "2              1.2            1.2            1.2  \n",
              "3              1.0            1.0            1.0  \n",
              "4              1.0            1.0            1.0  \n",
              "..             ...            ...            ...  \n",
              "687            0.8            0.8            0.8  \n",
              "688            1.0            1.0            1.0  \n",
              "689            1.0            1.0            1.0  \n",
              "690            1.0            1.0            1.0  \n",
              "691            1.0            1.0            1.0  \n",
              "\n",
              "[692 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f8ed7797-da80-44a8-ab6a-e5fbd711bb23\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment_x</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>home_adjustment_y</th>\n",
              "      <th>gw5adjustment</th>\n",
              "      <th>gw6adjustment</th>\n",
              "      <th>gw7adjustment</th>\n",
              "      <th>gw8adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>7.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>56</td>\n",
              "      <td>19.0</td>\n",
              "      <td>18</td>\n",
              "      <td>6.0</td>\n",
              "      <td>195</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.1</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>7.1</td>\n",
              "      <td>8</td>\n",
              "      <td>4.0</td>\n",
              "      <td>20</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.7</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>687</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>688</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>689</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>690</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>71</td>\n",
              "      <td>10.7</td>\n",
              "      <td>14</td>\n",
              "      <td>4.7</td>\n",
              "      <td>270</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>691</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>692 rows √ó 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f8ed7797-da80-44a8-ab6a-e5fbd711bb23')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f8ed7797-da80-44a8-ab6a-e5fbd711bb23 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f8ed7797-da80-44a8-ab6a-e5fbd711bb23');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8ac8ca7c-f1f9-44b3-add2-b1a7fc0e4480\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8ac8ca7c-f1f9-44b3-add2-b1a7fc0e4480')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8ac8ca7c-f1f9-44b3-add2-b1a7fc0e4480 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 160
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw3adjustments = gw3adjustments.groupby('team', as_index=False)['gw3adjustment'].aggregate('sum')\n",
        "gw3adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "6x3Lj7jPTCVC",
        "outputId": "1f46a4a8-f08d-4e96-a454-a50a45b66225"
      },
      "execution_count": 161,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw3adjustment\n",
              "0                   Arsenal       1.218172\n",
              "1               Aston Villa       1.227344\n",
              "2               Bournemouth       0.825462\n",
              "3                 Brentford       1.051138\n",
              "4                  Brighton       1.135628\n",
              "5                   Burnley       0.772656\n",
              "6                   Chelsea       1.282095\n",
              "7            Crystal Palace       0.948862\n",
              "8                   Everton       1.063506\n",
              "9                    Fulham       0.781828\n",
              "10                Liverpool       1.003196\n",
              "11               Luton Town       0.717905\n",
              "12          Manchester City       1.492347\n",
              "13        Manchester United       1.318921\n",
              "14         Newcastle United       0.996804\n",
              "15        Nottingham Forest       0.681079\n",
              "16         Sheffield United       0.507653\n",
              "17                Tottenham       1.174538\n",
              "18                 West Ham       0.864372\n",
              "19  Wolverhampton Wanderers       0.936494"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-64114721-928d-4d39-aaa6-7b35a2e330cf\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw3adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.218172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.227344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.825462</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.051138</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.135628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.772656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.948862</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.063506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.781828</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.003196</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.492347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.318921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.996804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.681079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.507653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.174538</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.864372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.936494</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-64114721-928d-4d39-aaa6-7b35a2e330cf')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-64114721-928d-4d39-aaa6-7b35a2e330cf button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-64114721-928d-4d39-aaa6-7b35a2e330cf');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-404d1c32-2173-4bc6-8af9-a29b161b07ad\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-404d1c32-2173-4bc6-8af9-a29b161b07ad')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-404d1c32-2173-4bc6-8af9-a29b161b07ad button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 161
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x['gw7'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw7adjustment)+2)\n",
        "rawdfgw228x['gw4'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.home_adjustment_x)+2)\n",
        "rawdfgw228x['gw8'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw8adjustment)+2)\n",
        "rawdfgw228x['gw5'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw5adjustment)+2)\n",
        "rawdfgw228x['gw6'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw6adjustment)+2)\n",
        "rawdfgw228x['5GW Total'] = rawdfgw228x.gw7 + rawdfgw228x.gw5 + rawdfgw228x.gw6 + rawdfgw228x.gw4 + rawdfgw228x.gw8\n",
        "rawdfgw228x = rawdfgw228x.drop(columns=[\n",
        "  'gw5adjustment',\n",
        "  'gw6adjustment',\n",
        "  'gw7adjustment',\n",
        "  'gw8adjustment'\n",
        "  ])\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Dgw1xB0YUN9D",
        "outputId": "94c864f0-9d47-4412-e6df-6d9577a23b70"
      },
      "execution_count": 165,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.6   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  1.5   \n",
              "2     13                  Arsenal   F  Nketiah   5.6                  7.1   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.1   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "687  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "688  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "689  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "690  569  Wolverhampton Wanderers   G  Jos√© S√°   5.0                  1.3   \n",
              "691  571  Wolverhampton Wanderers   G   ≈†arkiƒá   4.0                  0.5   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment_x  \\\n",
              "0               0        0    0        0.0  ...        0                1.2   \n",
              "1               0        0    1        3.8  ...        1                1.2   \n",
              "2               2        1   56       19.0  ...      195                1.2   \n",
              "3               0        0    0        0.0  ...        0                1.1   \n",
              "4               1        0   34        7.1  ...       20                1.1   \n",
              "..            ...      ...  ...        ...  ...      ...                ...   \n",
              "687             0        0    0        0.0  ...        0                1.0   \n",
              "688             0        0    0        0.0  ...        0                0.8   \n",
              "689             0        0    0        0.0  ...        0                0.8   \n",
              "690             0        0   71       10.7  ...      270                0.8   \n",
              "691             0        0    0        0.0  ...        0                0.8   \n",
              "\n",
              "     xPallgw  home_adjustment_y   gw7   gw4   gw8   gw5   gw6  5GW Total  \n",
              "0        2.0                1.2  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.2                1.2  2.24  2.24  2.24  2.26  2.24      11.22  \n",
              "2        4.1                1.2  4.52  4.52  4.52  4.73  4.52      22.81  \n",
              "3        2.0                1.1  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.7                1.1  2.70  2.77  2.70  2.77  2.70      13.64  \n",
              "..       ...                ...   ...   ...   ...   ...   ...        ...  \n",
              "687      2.0                1.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "688      2.0                0.8  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "689      2.0                0.8  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "690      2.0                0.8  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "691      2.0                0.8  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "\n",
              "[692 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dc1ea88f-75ba-42f1-85a1-131b4ec0eaa1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment_x</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>home_adjustment_y</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw4</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw5</th>\n",
              "      <th>gw6</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.26</td>\n",
              "      <td>2.24</td>\n",
              "      <td>11.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>7.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>56</td>\n",
              "      <td>19.0</td>\n",
              "      <td>...</td>\n",
              "      <td>195</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.1</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.52</td>\n",
              "      <td>22.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>7.1</td>\n",
              "      <td>...</td>\n",
              "      <td>20</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.7</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.70</td>\n",
              "      <td>2.77</td>\n",
              "      <td>2.70</td>\n",
              "      <td>2.77</td>\n",
              "      <td>2.70</td>\n",
              "      <td>13.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>687</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>688</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>689</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>690</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>71</td>\n",
              "      <td>10.7</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>691</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>692 rows √ó 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dc1ea88f-75ba-42f1-85a1-131b4ec0eaa1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-dc1ea88f-75ba-42f1-85a1-131b4ec0eaa1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-dc1ea88f-75ba-42f1-85a1-131b4ec0eaa1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3e23a8cb-fee9-4d78-a548-fef749dccb91\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3e23a8cb-fee9-4d78-a548-fef749dccb91')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3e23a8cb-fee9-4d78-a548-fef749dccb91 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 165
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.drop_duplicates(subset='name', keep='last', inplace=True)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Jud88GRHgLWf",
        "outputId": "03570377-1b06-4cd3-9c38-31fcd23dd78d"
      },
      "execution_count": 166,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.6   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  1.5   \n",
              "2     13                  Arsenal   F  Nketiah   5.6                  7.1   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.1   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "687  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "688  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "689  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "690  569  Wolverhampton Wanderers   G  Jos√© S√°   5.0                  1.3   \n",
              "691  571  Wolverhampton Wanderers   G   ≈†arkiƒá   4.0                  0.5   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment_x  \\\n",
              "0               0        0    0        0.0  ...        0                1.2   \n",
              "1               0        0    1        3.8  ...        1                1.2   \n",
              "2               2        1   56       19.0  ...      195                1.2   \n",
              "3               0        0    0        0.0  ...        0                1.1   \n",
              "4               1        0   34        7.1  ...       20                1.1   \n",
              "..            ...      ...  ...        ...  ...      ...                ...   \n",
              "687             0        0    0        0.0  ...        0                1.0   \n",
              "688             0        0    0        0.0  ...        0                0.8   \n",
              "689             0        0    0        0.0  ...        0                0.8   \n",
              "690             0        0   71       10.7  ...      270                0.8   \n",
              "691             0        0    0        0.0  ...        0                0.8   \n",
              "\n",
              "     xPallgw  home_adjustment_y   gw7   gw4   gw8   gw5   gw6  5GW Total  \n",
              "0        2.0                1.2  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.2                1.2  2.24  2.24  2.24  2.26  2.24      11.22  \n",
              "2        4.1                1.2  4.52  4.52  4.52  4.73  4.52      22.81  \n",
              "3        2.0                1.1  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.7                1.1  2.70  2.77  2.70  2.77  2.70      13.64  \n",
              "..       ...                ...   ...   ...   ...   ...   ...        ...  \n",
              "687      2.0                1.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "688      2.0                0.8  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "689      2.0                0.8  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "690      2.0                0.8  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "691      2.0                0.8  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "\n",
              "[673 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ca02e60a-d79b-4ee5-97b2-220dbc83b4d4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment_x</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>home_adjustment_y</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw4</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw5</th>\n",
              "      <th>gw6</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.26</td>\n",
              "      <td>2.24</td>\n",
              "      <td>11.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>7.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>56</td>\n",
              "      <td>19.0</td>\n",
              "      <td>...</td>\n",
              "      <td>195</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.1</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.52</td>\n",
              "      <td>22.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>7.1</td>\n",
              "      <td>...</td>\n",
              "      <td>20</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.7</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.70</td>\n",
              "      <td>2.77</td>\n",
              "      <td>2.70</td>\n",
              "      <td>2.77</td>\n",
              "      <td>2.70</td>\n",
              "      <td>13.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>687</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>688</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>689</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>690</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>71</td>\n",
              "      <td>10.7</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>691</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>673 rows √ó 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ca02e60a-d79b-4ee5-97b2-220dbc83b4d4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ca02e60a-d79b-4ee5-97b2-220dbc83b4d4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ca02e60a-d79b-4ee5-97b2-220dbc83b4d4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-34afd477-ebea-4db5-b1cd-fbc9fd81b368\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-34afd477-ebea-4db5-b1cd-fbc9fd81b368')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-34afd477-ebea-4db5-b1cd-fbc9fd81b368 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 166
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter\n",
        "writer = ExcelWriter('API model.xlsx')\n",
        "rawdfgw228x.to_excel(writer, sheet_name='Sheet1')\n",
        "gwadjustments26.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "tdXsMsuwaWa4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "17073970-4835-4ea9-d28b-b22be14e1df7"
      },
      "execution_count": 167,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-167-8cf119597ac9>:8: FutureWarning:\n",
            "\n",
            "save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#from google.colab import drive\n",
        "#drive.mount('/content/drive')"
      ],
      "metadata": {
        "id": "GzSzE5_Ckuq3"
      },
      "execution_count": 168,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import shutil"
      ],
      "metadata": {
        "id": "xSIwXnyAk2op"
      },
      "execution_count": 169,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#shutil.copy(\"/content/API model.xlsx\",\"/content/drive/MyDrive/FPL\")"
      ],
      "metadata": {
        "id": "O724A90vk3b4"
      },
      "execution_count": 170,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.nlargest(50, '5GW Total')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "4ULMO_eqJXIT",
        "outputId": "b1da7c1a-2f85-4d1b-d8a9-02045d3e4583"
      },
      "execution_count": 171,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos             name  cost  \\\n",
              "146  108                Brentford   M           Mbeumo   6.8   \n",
              "290  373        Manchester United   M      B.Fernandes   8.5   \n",
              "59   355          Manchester City   F          Haaland  14.0   \n",
              "98    19                  Arsenal   M             Saka   8.7   \n",
              "397   36              Aston Villa   D             Cash   4.6   \n",
              "251  308                Liverpool   M            Salah  12.5   \n",
              "164  140                 Brighton   M            March   6.6   \n",
              "353  504                Tottenham   M         Maddison   7.7   \n",
              "58   343          Manchester City   F        J.Alvarez   6.6   \n",
              "166  143                 Brighton   M           Mitoma   6.6   \n",
              "28   211                  Chelsea   F        N.Jackson   7.1   \n",
              "249  303                Liverpool   M        Luis D√≠az   7.7   \n",
              "12   119                Brentford   F            Wissa   6.2   \n",
              "291  376        Manchester United   M         Casemiro   5.4   \n",
              "361  526                 West Ham   M            Bowen   7.0   \n",
              "14   132                 Brighton   F         Ferguson   5.9   \n",
              "190  199                  Chelsea   M             Enzo   5.0   \n",
              "207  226           Crystal Palace   M              Eze   6.4   \n",
              "277  353          Manchester City   M            Foden   7.6   \n",
              "15   135                 Brighton   F       Jo√£o Pedro   5.5   \n",
              "32   225           Crystal Palace   F          Edouard   5.5   \n",
              "2     13                  Arsenal   F          Nketiah   5.6   \n",
              "95    14                  Arsenal   M         √òdegaard   8.5   \n",
              "366  539                 West Ham   M        L.Paquet√°   6.0   \n",
              "161  134                 Brighton   M            Gross   6.4   \n",
              "308  412         Newcastle United   M           Gordon   5.5   \n",
              "319  603         Newcastle United   M           Barnes   6.5   \n",
              "299  396        Manchester United   M         Rashford   9.0   \n",
              "285  365          Manchester City   M          Rodrigo   5.7   \n",
              "426  131                 Brighton   D        Estupi√±an   5.3   \n",
              "232  270                   Fulham   M  De Cordova-Reid   5.5   \n",
              "109   43              Aston Villa   M     Douglas Luiz   5.4   \n",
              "196  216                  Chelsea   M         Sterling   7.2   \n",
              "118  599              Aston Villa   M            Diaby   6.6   \n",
              "289  372        Manchester United   M           Antony   6.9   \n",
              "450  195                  Chelsea   D         Chilwell   5.8   \n",
              "94    12                  Arsenal   M       Martinelli   8.0   \n",
              "244  294                Liverpool   M         Diogo J.   8.0   \n",
              "5     60              Aston Villa   F          Watkins   8.0   \n",
              "112   50              Aston Villa   M           McGinn   5.5   \n",
              "51   326               Luton Town   F           Morris   5.5   \n",
              "356  513                Tottenham   M             Sarr   4.5   \n",
              "63   415         Newcastle United   F             Isak   7.7   \n",
              "304  402         Newcastle United   M          Almir√≥n   6.4   \n",
              "88   590  Wolverhampton Wanderers   F            Cunha   5.5   \n",
              "37   258                  Everton   F           Maupay   5.0   \n",
              "278  354          Manchester City   M         Grealish   7.4   \n",
              "425  129                 Brighton   D             Dunk   5.0   \n",
              "317  429         Newcastle United   M           Tonali   5.5   \n",
              "370  664                 West Ham   M      Ward-Prowse   6.0   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  ...  minutes  \\\n",
              "146                 25.4             3        0   67       30.9  ...      270   \n",
              "290                 22.4             1        1   61       33.4  ...      270   \n",
              "59                  91.3             3        0   71       34.6  ...      259   \n",
              "98                  66.3             2        0   78       38.9  ...      268   \n",
              "397                 11.8             2        0   73       22.3  ...      266   \n",
              "251                 26.5             1        2   49       27.2  ...      251   \n",
              "164                 10.6             3        0   83       32.5  ...      234   \n",
              "353                 19.9             1        2   77       35.4  ...      252   \n",
              "58                   9.6             1        1   65       36.2  ...      270   \n",
              "166                 42.2             1        2   76       33.0  ...      260   \n",
              "28                  21.3             1        0   34       26.0  ...      262   \n",
              "249                 13.3             2        0   51       19.8  ...      193   \n",
              "12                  17.4             2        1   68       23.2  ...      239   \n",
              "291                  4.1             1        0   47       23.9  ...      270   \n",
              "361                  7.8             2        1   71       29.0  ...      270   \n",
              "14                   4.9             1        0   22       17.2  ...      125   \n",
              "190                  4.3             0        0   28       23.6  ...      270   \n",
              "207                 10.7             0        0   42       25.9  ...      270   \n",
              "277                 13.9             0        2   57       28.6  ...      184   \n",
              "15                  18.1             1        0   31       18.9  ...      150   \n",
              "32                   2.1             1        0   32       25.0  ...      250   \n",
              "2                    7.1             2        1   56       19.0  ...      195   \n",
              "95                  21.9             1        0   53       18.8  ...      262   \n",
              "366                  1.8             1        0   45       21.3  ...      264   \n",
              "161                  2.6             1        0   69       36.6  ...      260   \n",
              "308                  0.9             1        1   43       18.4  ...      193   \n",
              "319                  3.5             1        1   38       11.3  ...       74   \n",
              "299                 38.8             0        2   22       19.4  ...      261   \n",
              "285                 12.2             2        1  100       29.2  ...      270   \n",
              "426                 64.2             1        2   83       34.0  ...      270   \n",
              "232                  0.2             1        0   31       11.1  ...      200   \n",
              "109                  2.2             1        0   52       17.3  ...      238   \n",
              "196                 13.4             2        1   73       31.0  ...      260   \n",
              "118                  9.2             2        1   76       27.8  ...      221   \n",
              "289                  1.0             0        0   24       18.2  ...      225   \n",
              "450                 33.0             0        1   59       19.8  ...      234   \n",
              "94                  12.3             0        1   39       19.6  ...      244   \n",
              "244                  3.2             1        2   48       21.1  ...      172   \n",
              "5                   23.3             0        3   37       24.8  ...      248   \n",
              "112                  0.6             1        0   55       13.9  ...      243   \n",
              "51                   1.4             1        0   34       11.9  ...      180   \n",
              "356                  3.0             1        1   55       22.3  ...      148   \n",
              "63                  28.8             2        0   63       16.9  ...      203   \n",
              "304                  5.5             0        0   30       13.0  ...      260   \n",
              "88                   0.6             0        0   16       15.3  ...      250   \n",
              "37                   1.0             0        0   -5       12.0  ...      110   \n",
              "278                  4.1             0        1   40       18.0  ...      180   \n",
              "425                  4.0             0        0   41       11.8  ...      270   \n",
              "317                  3.3             1        0   44       11.4  ...      227   \n",
              "370                  5.0             1        2   54       17.1  ...      170   \n",
              "\n",
              "     home_adjustment_x  xPallgw  home_adjustment_y   gw7   gw4   gw8   gw5  \\\n",
              "146                1.1      7.8                1.1  8.96  8.38  8.96  7.22   \n",
              "290                1.1      7.0                1.1  8.00  7.50  8.00  7.00   \n",
              "59                 1.3      6.0                1.3  8.00  7.20  8.00  7.20   \n",
              "98                 1.2      6.2                1.2  7.04  7.04  7.04  7.46   \n",
              "397                1.1      6.5                1.1  6.50  6.95  6.50  6.95   \n",
              "251                1.2      5.4                1.2  6.08  6.08  6.08  6.42   \n",
              "164                1.1      4.9                1.1  5.77  5.19  5.77  4.90   \n",
              "353                1.0      5.7                1.0  4.96  5.70  4.96  6.44   \n",
              "58                 1.3      4.3                1.3  5.45  4.99  5.45  4.99   \n",
              "166                1.1      4.7                1.1  5.51  4.97  5.51  4.70   \n",
              "28                 1.1      4.9                1.1  4.90  5.19  4.90  5.48   \n",
              "249                1.2      4.5                1.2  5.00  5.00  5.00  5.25   \n",
              "12                 1.1      4.7                1.1  5.24  4.97  5.24  4.43   \n",
              "291                1.1      4.6                1.1  5.12  4.86  5.12  4.60   \n",
              "361                1.0      5.5                1.0  4.80  5.50  4.80  4.45   \n",
              "14                 1.1      4.3                1.1  4.99  4.53  4.99  4.30   \n",
              "190                1.1      4.6                1.1  4.60  4.86  4.60  5.12   \n",
              "207                1.0      4.6                1.0  4.86  4.60  4.86  4.34   \n",
              "277                1.3      3.9                1.3  4.85  4.47  4.85  4.47   \n",
              "15                 1.1      4.2                1.1  4.86  4.42  4.86  4.20   \n",
              "32                 1.0      4.5                1.0  4.75  4.50  4.75  4.25   \n",
              "2                  1.2      4.1                1.2  4.52  4.52  4.52  4.73   \n",
              "95                 1.2      4.1                1.2  4.52  4.52  4.52  4.73   \n",
              "366                1.0      5.0                1.0  4.40  5.00  4.40  4.10   \n",
              "161                1.1      4.0                1.1  4.60  4.20  4.60  4.00   \n",
              "308                1.2      3.8                1.2  4.52  4.16  4.52  3.98   \n",
              "319                1.2      3.8                1.2  4.52  4.16  4.52  3.98   \n",
              "299                1.1      4.0                1.1  4.40  4.20  4.40  4.00   \n",
              "285                1.3      3.6                1.3  4.40  4.08  4.40  4.08   \n",
              "426                1.1      3.8                1.1  4.34  3.98  4.34  3.80   \n",
              "232                0.9      4.2                0.9  3.98  3.98  3.98  4.64   \n",
              "109                1.1      4.0                1.1  4.00  4.20  4.00  4.20   \n",
              "196                1.1      3.9                1.1  3.90  4.09  3.90  4.28   \n",
              "118                1.1      3.9                1.1  3.90  4.09  3.90  4.09   \n",
              "289                1.1      3.7                1.1  4.04  3.87  4.04  3.70   \n",
              "450                1.1      3.8                1.1  3.80  3.98  3.80  4.16   \n",
              "94                 1.2      3.5                1.2  3.80  3.80  3.80  3.95   \n",
              "244                1.2      3.5                1.2  3.80  3.80  3.80  3.95   \n",
              "5                  1.1      3.7                1.1  3.70  3.87  3.70  3.87   \n",
              "112                1.1      3.7                1.1  3.70  3.87  3.70  3.87   \n",
              "51                 0.8      3.9                0.8  3.90  3.52  3.90  3.52   \n",
              "356                1.0      3.9                1.0  3.52  3.90  3.52  4.28   \n",
              "63                 1.2      3.3                1.2  3.82  3.56  3.82  3.43   \n",
              "304                1.2      3.3                1.2  3.82  3.56  3.82  3.43   \n",
              "88                 0.8      3.8                0.8  3.80  3.44  3.80  3.26   \n",
              "37                 0.9      4.0                0.9  3.60  3.80  3.60  3.40   \n",
              "278                1.3      3.1                1.3  3.65  3.43  3.65  3.43   \n",
              "425                1.1      3.2                1.1  3.56  3.32  3.56  3.20   \n",
              "317                1.2      3.1                1.2  3.54  3.32  3.54  3.21   \n",
              "370                1.0      3.7                1.0  3.36  3.70  3.36  3.19   \n",
              "\n",
              "      gw6  5GW Total  \n",
              "146  8.96      42.48  \n",
              "290  8.00      38.50  \n",
              "59   8.00      38.40  \n",
              "98   7.04      35.62  \n",
              "397  6.50      33.40  \n",
              "251  6.08      30.74  \n",
              "164  5.77      27.40  \n",
              "353  4.96      27.02  \n",
              "58   5.45      26.33  \n",
              "166  5.51      26.20  \n",
              "28   4.90      25.37  \n",
              "249  5.00      25.25  \n",
              "12   5.24      25.12  \n",
              "291  5.12      24.82  \n",
              "361  4.80      24.35  \n",
              "14   4.99      23.80  \n",
              "190  4.60      23.78  \n",
              "207  4.86      23.52  \n",
              "277  4.85      23.49  \n",
              "15   4.86      23.20  \n",
              "32   4.75      23.00  \n",
              "2    4.52      22.81  \n",
              "95   4.52      22.81  \n",
              "366  4.40      22.30  \n",
              "161  4.60      22.00  \n",
              "308  4.52      21.70  \n",
              "319  4.52      21.70  \n",
              "299  4.40      21.40  \n",
              "285  4.40      21.36  \n",
              "426  4.34      20.80  \n",
              "232  3.98      20.56  \n",
              "109  4.00      20.40  \n",
              "196  3.90      20.07  \n",
              "118  3.90      19.88  \n",
              "289  4.04      19.69  \n",
              "450  3.80      19.54  \n",
              "94   3.80      19.15  \n",
              "244  3.80      19.15  \n",
              "5    3.70      18.84  \n",
              "112  3.70      18.84  \n",
              "51   3.90      18.74  \n",
              "356  3.52      18.74  \n",
              "63   3.82      18.45  \n",
              "304  3.82      18.45  \n",
              "88   3.80      18.10  \n",
              "37   3.60      18.00  \n",
              "278  3.65      17.81  \n",
              "425  3.56      17.20  \n",
              "317  3.54      17.15  \n",
              "370  3.36      16.97  \n",
              "\n",
              "[50 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9ee4e7c3-4564-45b2-b84a-c95ba9ceee94\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment_x</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>home_adjustment_y</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw4</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw5</th>\n",
              "      <th>gw6</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>146</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.8</td>\n",
              "      <td>25.4</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>67</td>\n",
              "      <td>30.9</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.1</td>\n",
              "      <td>7.8</td>\n",
              "      <td>1.1</td>\n",
              "      <td>8.96</td>\n",
              "      <td>8.38</td>\n",
              "      <td>8.96</td>\n",
              "      <td>7.22</td>\n",
              "      <td>8.96</td>\n",
              "      <td>42.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>290</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.5</td>\n",
              "      <td>22.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>61</td>\n",
              "      <td>33.4</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.1</td>\n",
              "      <td>7.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>8.00</td>\n",
              "      <td>7.50</td>\n",
              "      <td>8.00</td>\n",
              "      <td>7.00</td>\n",
              "      <td>8.00</td>\n",
              "      <td>38.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.0</td>\n",
              "      <td>91.3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>71</td>\n",
              "      <td>34.6</td>\n",
              "      <td>...</td>\n",
              "      <td>259</td>\n",
              "      <td>1.3</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>8.00</td>\n",
              "      <td>7.20</td>\n",
              "      <td>8.00</td>\n",
              "      <td>7.20</td>\n",
              "      <td>8.00</td>\n",
              "      <td>38.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.7</td>\n",
              "      <td>66.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>78</td>\n",
              "      <td>38.9</td>\n",
              "      <td>...</td>\n",
              "      <td>268</td>\n",
              "      <td>1.2</td>\n",
              "      <td>6.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>7.04</td>\n",
              "      <td>7.04</td>\n",
              "      <td>7.04</td>\n",
              "      <td>7.46</td>\n",
              "      <td>7.04</td>\n",
              "      <td>35.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>397</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>4.6</td>\n",
              "      <td>11.8</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>73</td>\n",
              "      <td>22.3</td>\n",
              "      <td>...</td>\n",
              "      <td>266</td>\n",
              "      <td>1.1</td>\n",
              "      <td>6.5</td>\n",
              "      <td>1.1</td>\n",
              "      <td>6.50</td>\n",
              "      <td>6.95</td>\n",
              "      <td>6.50</td>\n",
              "      <td>6.95</td>\n",
              "      <td>6.50</td>\n",
              "      <td>33.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>251</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.5</td>\n",
              "      <td>26.5</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>49</td>\n",
              "      <td>27.2</td>\n",
              "      <td>...</td>\n",
              "      <td>251</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.4</td>\n",
              "      <td>1.2</td>\n",
              "      <td>6.08</td>\n",
              "      <td>6.08</td>\n",
              "      <td>6.08</td>\n",
              "      <td>6.42</td>\n",
              "      <td>6.08</td>\n",
              "      <td>30.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>164</th>\n",
              "      <td>140</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>March</td>\n",
              "      <td>6.6</td>\n",
              "      <td>10.6</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>83</td>\n",
              "      <td>32.5</td>\n",
              "      <td>...</td>\n",
              "      <td>234</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.77</td>\n",
              "      <td>5.19</td>\n",
              "      <td>5.77</td>\n",
              "      <td>4.90</td>\n",
              "      <td>5.77</td>\n",
              "      <td>27.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>353</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.7</td>\n",
              "      <td>19.9</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>77</td>\n",
              "      <td>35.4</td>\n",
              "      <td>...</td>\n",
              "      <td>252</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.96</td>\n",
              "      <td>5.70</td>\n",
              "      <td>4.96</td>\n",
              "      <td>6.44</td>\n",
              "      <td>4.96</td>\n",
              "      <td>27.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>58</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>6.6</td>\n",
              "      <td>9.6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>65</td>\n",
              "      <td>36.2</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>5.45</td>\n",
              "      <td>4.99</td>\n",
              "      <td>5.45</td>\n",
              "      <td>4.99</td>\n",
              "      <td>5.45</td>\n",
              "      <td>26.33</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>166</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.6</td>\n",
              "      <td>42.2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>76</td>\n",
              "      <td>33.0</td>\n",
              "      <td>...</td>\n",
              "      <td>260</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.7</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.51</td>\n",
              "      <td>4.97</td>\n",
              "      <td>5.51</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.51</td>\n",
              "      <td>26.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>7.1</td>\n",
              "      <td>21.3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>26.0</td>\n",
              "      <td>...</td>\n",
              "      <td>262</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.90</td>\n",
              "      <td>5.19</td>\n",
              "      <td>4.90</td>\n",
              "      <td>5.48</td>\n",
              "      <td>4.90</td>\n",
              "      <td>25.37</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>249</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis D√≠az</td>\n",
              "      <td>7.7</td>\n",
              "      <td>13.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>51</td>\n",
              "      <td>19.8</td>\n",
              "      <td>...</td>\n",
              "      <td>193</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.5</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.00</td>\n",
              "      <td>25.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>6.2</td>\n",
              "      <td>17.4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>68</td>\n",
              "      <td>23.2</td>\n",
              "      <td>...</td>\n",
              "      <td>239</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.7</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.24</td>\n",
              "      <td>4.97</td>\n",
              "      <td>5.24</td>\n",
              "      <td>4.43</td>\n",
              "      <td>5.24</td>\n",
              "      <td>25.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>291</th>\n",
              "      <td>376</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Casemiro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>4.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>47</td>\n",
              "      <td>23.9</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.6</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.86</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.60</td>\n",
              "      <td>5.12</td>\n",
              "      <td>24.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.0</td>\n",
              "      <td>7.8</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>71</td>\n",
              "      <td>29.0</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.80</td>\n",
              "      <td>5.50</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.45</td>\n",
              "      <td>4.80</td>\n",
              "      <td>24.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>132</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Ferguson</td>\n",
              "      <td>5.9</td>\n",
              "      <td>4.9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>17.2</td>\n",
              "      <td>...</td>\n",
              "      <td>125</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.53</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.99</td>\n",
              "      <td>23.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>190</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>28</td>\n",
              "      <td>23.6</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.6</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.60</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.60</td>\n",
              "      <td>23.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>207</th>\n",
              "      <td>226</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>M</td>\n",
              "      <td>Eze</td>\n",
              "      <td>6.4</td>\n",
              "      <td>10.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>42</td>\n",
              "      <td>25.9</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.6</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.86</td>\n",
              "      <td>23.52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>277</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.6</td>\n",
              "      <td>13.9</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>57</td>\n",
              "      <td>28.6</td>\n",
              "      <td>...</td>\n",
              "      <td>184</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.85</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.85</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.85</td>\n",
              "      <td>23.49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Jo√£o Pedro</td>\n",
              "      <td>5.5</td>\n",
              "      <td>18.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>18.9</td>\n",
              "      <td>...</td>\n",
              "      <td>150</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.86</td>\n",
              "      <td>23.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>225</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>F</td>\n",
              "      <td>Edouard</td>\n",
              "      <td>5.5</td>\n",
              "      <td>2.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>32</td>\n",
              "      <td>25.0</td>\n",
              "      <td>...</td>\n",
              "      <td>250</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.75</td>\n",
              "      <td>4.50</td>\n",
              "      <td>4.75</td>\n",
              "      <td>4.25</td>\n",
              "      <td>4.75</td>\n",
              "      <td>23.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>7.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>56</td>\n",
              "      <td>19.0</td>\n",
              "      <td>...</td>\n",
              "      <td>195</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.1</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.52</td>\n",
              "      <td>22.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>√òdegaard</td>\n",
              "      <td>8.5</td>\n",
              "      <td>21.9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>53</td>\n",
              "      <td>18.8</td>\n",
              "      <td>...</td>\n",
              "      <td>262</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.1</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.52</td>\n",
              "      <td>22.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>539</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>L.Paquet√°</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>45</td>\n",
              "      <td>21.3</td>\n",
              "      <td>...</td>\n",
              "      <td>264</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.40</td>\n",
              "      <td>22.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>161</th>\n",
              "      <td>134</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Gross</td>\n",
              "      <td>6.4</td>\n",
              "      <td>2.6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>69</td>\n",
              "      <td>36.6</td>\n",
              "      <td>...</td>\n",
              "      <td>260</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.60</td>\n",
              "      <td>22.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>308</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>43</td>\n",
              "      <td>18.4</td>\n",
              "      <td>...</td>\n",
              "      <td>193</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.52</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.52</td>\n",
              "      <td>21.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>319</th>\n",
              "      <td>603</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Barnes</td>\n",
              "      <td>6.5</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>38</td>\n",
              "      <td>11.3</td>\n",
              "      <td>...</td>\n",
              "      <td>74</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.52</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.52</td>\n",
              "      <td>21.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>299</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>9.0</td>\n",
              "      <td>38.8</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>22</td>\n",
              "      <td>19.4</td>\n",
              "      <td>...</td>\n",
              "      <td>261</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.40</td>\n",
              "      <td>21.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>285</th>\n",
              "      <td>365</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Rodrigo</td>\n",
              "      <td>5.7</td>\n",
              "      <td>12.2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>100</td>\n",
              "      <td>29.2</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.40</td>\n",
              "      <td>21.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>426</th>\n",
              "      <td>131</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Estupi√±an</td>\n",
              "      <td>5.3</td>\n",
              "      <td>64.2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>83</td>\n",
              "      <td>34.0</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.34</td>\n",
              "      <td>20.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>232</th>\n",
              "      <td>270</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>M</td>\n",
              "      <td>De Cordova-Reid</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>11.1</td>\n",
              "      <td>...</td>\n",
              "      <td>200</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.64</td>\n",
              "      <td>3.98</td>\n",
              "      <td>20.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>109</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.4</td>\n",
              "      <td>2.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>52</td>\n",
              "      <td>17.3</td>\n",
              "      <td>...</td>\n",
              "      <td>238</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.00</td>\n",
              "      <td>20.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>196</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.2</td>\n",
              "      <td>13.4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>73</td>\n",
              "      <td>31.0</td>\n",
              "      <td>...</td>\n",
              "      <td>260</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.28</td>\n",
              "      <td>3.90</td>\n",
              "      <td>20.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.6</td>\n",
              "      <td>9.2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>76</td>\n",
              "      <td>27.8</td>\n",
              "      <td>...</td>\n",
              "      <td>221</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.90</td>\n",
              "      <td>19.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>289</th>\n",
              "      <td>372</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Antony</td>\n",
              "      <td>6.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>24</td>\n",
              "      <td>18.2</td>\n",
              "      <td>...</td>\n",
              "      <td>225</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.70</td>\n",
              "      <td>4.04</td>\n",
              "      <td>19.69</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>450</th>\n",
              "      <td>195</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>D</td>\n",
              "      <td>Chilwell</td>\n",
              "      <td>5.8</td>\n",
              "      <td>33.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>59</td>\n",
              "      <td>19.8</td>\n",
              "      <td>...</td>\n",
              "      <td>234</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.80</td>\n",
              "      <td>19.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>12</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Martinelli</td>\n",
              "      <td>8.0</td>\n",
              "      <td>12.3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>39</td>\n",
              "      <td>19.6</td>\n",
              "      <td>...</td>\n",
              "      <td>244</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.80</td>\n",
              "      <td>19.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>244</th>\n",
              "      <td>294</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Diogo J.</td>\n",
              "      <td>8.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>48</td>\n",
              "      <td>21.1</td>\n",
              "      <td>...</td>\n",
              "      <td>172</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.80</td>\n",
              "      <td>19.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.0</td>\n",
              "      <td>23.3</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>37</td>\n",
              "      <td>24.8</td>\n",
              "      <td>...</td>\n",
              "      <td>248</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.70</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.70</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.70</td>\n",
              "      <td>18.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>50</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>McGinn</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>13.9</td>\n",
              "      <td>...</td>\n",
              "      <td>243</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.70</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.70</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.70</td>\n",
              "      <td>18.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>326</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>F</td>\n",
              "      <td>Morris</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>11.9</td>\n",
              "      <td>...</td>\n",
              "      <td>180</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.90</td>\n",
              "      <td>3.52</td>\n",
              "      <td>3.90</td>\n",
              "      <td>3.52</td>\n",
              "      <td>3.90</td>\n",
              "      <td>18.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>356</th>\n",
              "      <td>513</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Sarr</td>\n",
              "      <td>4.5</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>55</td>\n",
              "      <td>22.3</td>\n",
              "      <td>...</td>\n",
              "      <td>148</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.52</td>\n",
              "      <td>3.90</td>\n",
              "      <td>3.52</td>\n",
              "      <td>4.28</td>\n",
              "      <td>3.52</td>\n",
              "      <td>18.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>63</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.7</td>\n",
              "      <td>28.8</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>63</td>\n",
              "      <td>16.9</td>\n",
              "      <td>...</td>\n",
              "      <td>203</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.82</td>\n",
              "      <td>18.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>304</th>\n",
              "      <td>402</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Almir√≥n</td>\n",
              "      <td>6.4</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>30</td>\n",
              "      <td>13.0</td>\n",
              "      <td>...</td>\n",
              "      <td>260</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.82</td>\n",
              "      <td>18.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88</th>\n",
              "      <td>590</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>F</td>\n",
              "      <td>Cunha</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>15.3</td>\n",
              "      <td>...</td>\n",
              "      <td>250</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.8</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.80</td>\n",
              "      <td>18.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>258</td>\n",
              "      <td>Everton</td>\n",
              "      <td>F</td>\n",
              "      <td>Maupay</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-5</td>\n",
              "      <td>12.0</td>\n",
              "      <td>...</td>\n",
              "      <td>110</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.60</td>\n",
              "      <td>18.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>278</th>\n",
              "      <td>354</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Grealish</td>\n",
              "      <td>7.4</td>\n",
              "      <td>4.1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>40</td>\n",
              "      <td>18.0</td>\n",
              "      <td>...</td>\n",
              "      <td>180</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.65</td>\n",
              "      <td>17.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>425</th>\n",
              "      <td>129</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Dunk</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>41</td>\n",
              "      <td>11.8</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>317</th>\n",
              "      <td>429</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Tonali</td>\n",
              "      <td>5.5</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>44</td>\n",
              "      <td>11.4</td>\n",
              "      <td>...</td>\n",
              "      <td>227</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>17.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>370</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>54</td>\n",
              "      <td>17.1</td>\n",
              "      <td>...</td>\n",
              "      <td>170</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.36</td>\n",
              "      <td>3.70</td>\n",
              "      <td>3.36</td>\n",
              "      <td>3.19</td>\n",
              "      <td>3.36</td>\n",
              "      <td>16.97</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows √ó 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9ee4e7c3-4564-45b2-b84a-c95ba9ceee94')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9ee4e7c3-4564-45b2-b84a-c95ba9ceee94 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9ee4e7c3-4564-45b2-b84a-c95ba9ceee94');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-10f5976b-1549-45f2-9cea-d34a55298726\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-10f5976b-1549-45f2-9cea-d34a55298726')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-10f5976b-1549-45f2-9cea-d34a55298726 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 171
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Top50 = rawdfgw228x.nlargest(50, '5GW Total')\n",
        "Top50"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Vuuihhw-Jx7s",
        "outputId": "4127e0ab-1b6d-414b-8b1f-bba044e21caa"
      },
      "execution_count": 172,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos             name  cost  \\\n",
              "146  108                Brentford   M           Mbeumo   6.8   \n",
              "290  373        Manchester United   M      B.Fernandes   8.5   \n",
              "59   355          Manchester City   F          Haaland  14.0   \n",
              "98    19                  Arsenal   M             Saka   8.7   \n",
              "397   36              Aston Villa   D             Cash   4.6   \n",
              "251  308                Liverpool   M            Salah  12.5   \n",
              "164  140                 Brighton   M            March   6.6   \n",
              "353  504                Tottenham   M         Maddison   7.7   \n",
              "58   343          Manchester City   F        J.Alvarez   6.6   \n",
              "166  143                 Brighton   M           Mitoma   6.6   \n",
              "28   211                  Chelsea   F        N.Jackson   7.1   \n",
              "249  303                Liverpool   M        Luis D√≠az   7.7   \n",
              "12   119                Brentford   F            Wissa   6.2   \n",
              "291  376        Manchester United   M         Casemiro   5.4   \n",
              "361  526                 West Ham   M            Bowen   7.0   \n",
              "14   132                 Brighton   F         Ferguson   5.9   \n",
              "190  199                  Chelsea   M             Enzo   5.0   \n",
              "207  226           Crystal Palace   M              Eze   6.4   \n",
              "277  353          Manchester City   M            Foden   7.6   \n",
              "15   135                 Brighton   F       Jo√£o Pedro   5.5   \n",
              "32   225           Crystal Palace   F          Edouard   5.5   \n",
              "2     13                  Arsenal   F          Nketiah   5.6   \n",
              "95    14                  Arsenal   M         √òdegaard   8.5   \n",
              "366  539                 West Ham   M        L.Paquet√°   6.0   \n",
              "161  134                 Brighton   M            Gross   6.4   \n",
              "308  412         Newcastle United   M           Gordon   5.5   \n",
              "319  603         Newcastle United   M           Barnes   6.5   \n",
              "299  396        Manchester United   M         Rashford   9.0   \n",
              "285  365          Manchester City   M          Rodrigo   5.7   \n",
              "426  131                 Brighton   D        Estupi√±an   5.3   \n",
              "232  270                   Fulham   M  De Cordova-Reid   5.5   \n",
              "109   43              Aston Villa   M     Douglas Luiz   5.4   \n",
              "196  216                  Chelsea   M         Sterling   7.2   \n",
              "118  599              Aston Villa   M            Diaby   6.6   \n",
              "289  372        Manchester United   M           Antony   6.9   \n",
              "450  195                  Chelsea   D         Chilwell   5.8   \n",
              "94    12                  Arsenal   M       Martinelli   8.0   \n",
              "244  294                Liverpool   M         Diogo J.   8.0   \n",
              "5     60              Aston Villa   F          Watkins   8.0   \n",
              "112   50              Aston Villa   M           McGinn   5.5   \n",
              "51   326               Luton Town   F           Morris   5.5   \n",
              "356  513                Tottenham   M             Sarr   4.5   \n",
              "63   415         Newcastle United   F             Isak   7.7   \n",
              "304  402         Newcastle United   M          Almir√≥n   6.4   \n",
              "88   590  Wolverhampton Wanderers   F            Cunha   5.5   \n",
              "37   258                  Everton   F           Maupay   5.0   \n",
              "278  354          Manchester City   M         Grealish   7.4   \n",
              "425  129                 Brighton   D             Dunk   5.0   \n",
              "317  429         Newcastle United   M           Tonali   5.5   \n",
              "370  664                 West Ham   M      Ward-Prowse   6.0   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  ...  minutes  \\\n",
              "146                 25.4             3        0   67       30.9  ...      270   \n",
              "290                 22.4             1        1   61       33.4  ...      270   \n",
              "59                  91.3             3        0   71       34.6  ...      259   \n",
              "98                  66.3             2        0   78       38.9  ...      268   \n",
              "397                 11.8             2        0   73       22.3  ...      266   \n",
              "251                 26.5             1        2   49       27.2  ...      251   \n",
              "164                 10.6             3        0   83       32.5  ...      234   \n",
              "353                 19.9             1        2   77       35.4  ...      252   \n",
              "58                   9.6             1        1   65       36.2  ...      270   \n",
              "166                 42.2             1        2   76       33.0  ...      260   \n",
              "28                  21.3             1        0   34       26.0  ...      262   \n",
              "249                 13.3             2        0   51       19.8  ...      193   \n",
              "12                  17.4             2        1   68       23.2  ...      239   \n",
              "291                  4.1             1        0   47       23.9  ...      270   \n",
              "361                  7.8             2        1   71       29.0  ...      270   \n",
              "14                   4.9             1        0   22       17.2  ...      125   \n",
              "190                  4.3             0        0   28       23.6  ...      270   \n",
              "207                 10.7             0        0   42       25.9  ...      270   \n",
              "277                 13.9             0        2   57       28.6  ...      184   \n",
              "15                  18.1             1        0   31       18.9  ...      150   \n",
              "32                   2.1             1        0   32       25.0  ...      250   \n",
              "2                    7.1             2        1   56       19.0  ...      195   \n",
              "95                  21.9             1        0   53       18.8  ...      262   \n",
              "366                  1.8             1        0   45       21.3  ...      264   \n",
              "161                  2.6             1        0   69       36.6  ...      260   \n",
              "308                  0.9             1        1   43       18.4  ...      193   \n",
              "319                  3.5             1        1   38       11.3  ...       74   \n",
              "299                 38.8             0        2   22       19.4  ...      261   \n",
              "285                 12.2             2        1  100       29.2  ...      270   \n",
              "426                 64.2             1        2   83       34.0  ...      270   \n",
              "232                  0.2             1        0   31       11.1  ...      200   \n",
              "109                  2.2             1        0   52       17.3  ...      238   \n",
              "196                 13.4             2        1   73       31.0  ...      260   \n",
              "118                  9.2             2        1   76       27.8  ...      221   \n",
              "289                  1.0             0        0   24       18.2  ...      225   \n",
              "450                 33.0             0        1   59       19.8  ...      234   \n",
              "94                  12.3             0        1   39       19.6  ...      244   \n",
              "244                  3.2             1        2   48       21.1  ...      172   \n",
              "5                   23.3             0        3   37       24.8  ...      248   \n",
              "112                  0.6             1        0   55       13.9  ...      243   \n",
              "51                   1.4             1        0   34       11.9  ...      180   \n",
              "356                  3.0             1        1   55       22.3  ...      148   \n",
              "63                  28.8             2        0   63       16.9  ...      203   \n",
              "304                  5.5             0        0   30       13.0  ...      260   \n",
              "88                   0.6             0        0   16       15.3  ...      250   \n",
              "37                   1.0             0        0   -5       12.0  ...      110   \n",
              "278                  4.1             0        1   40       18.0  ...      180   \n",
              "425                  4.0             0        0   41       11.8  ...      270   \n",
              "317                  3.3             1        0   44       11.4  ...      227   \n",
              "370                  5.0             1        2   54       17.1  ...      170   \n",
              "\n",
              "     home_adjustment_x  xPallgw  home_adjustment_y   gw7   gw4   gw8   gw5  \\\n",
              "146                1.1      7.8                1.1  8.96  8.38  8.96  7.22   \n",
              "290                1.1      7.0                1.1  8.00  7.50  8.00  7.00   \n",
              "59                 1.3      6.0                1.3  8.00  7.20  8.00  7.20   \n",
              "98                 1.2      6.2                1.2  7.04  7.04  7.04  7.46   \n",
              "397                1.1      6.5                1.1  6.50  6.95  6.50  6.95   \n",
              "251                1.2      5.4                1.2  6.08  6.08  6.08  6.42   \n",
              "164                1.1      4.9                1.1  5.77  5.19  5.77  4.90   \n",
              "353                1.0      5.7                1.0  4.96  5.70  4.96  6.44   \n",
              "58                 1.3      4.3                1.3  5.45  4.99  5.45  4.99   \n",
              "166                1.1      4.7                1.1  5.51  4.97  5.51  4.70   \n",
              "28                 1.1      4.9                1.1  4.90  5.19  4.90  5.48   \n",
              "249                1.2      4.5                1.2  5.00  5.00  5.00  5.25   \n",
              "12                 1.1      4.7                1.1  5.24  4.97  5.24  4.43   \n",
              "291                1.1      4.6                1.1  5.12  4.86  5.12  4.60   \n",
              "361                1.0      5.5                1.0  4.80  5.50  4.80  4.45   \n",
              "14                 1.1      4.3                1.1  4.99  4.53  4.99  4.30   \n",
              "190                1.1      4.6                1.1  4.60  4.86  4.60  5.12   \n",
              "207                1.0      4.6                1.0  4.86  4.60  4.86  4.34   \n",
              "277                1.3      3.9                1.3  4.85  4.47  4.85  4.47   \n",
              "15                 1.1      4.2                1.1  4.86  4.42  4.86  4.20   \n",
              "32                 1.0      4.5                1.0  4.75  4.50  4.75  4.25   \n",
              "2                  1.2      4.1                1.2  4.52  4.52  4.52  4.73   \n",
              "95                 1.2      4.1                1.2  4.52  4.52  4.52  4.73   \n",
              "366                1.0      5.0                1.0  4.40  5.00  4.40  4.10   \n",
              "161                1.1      4.0                1.1  4.60  4.20  4.60  4.00   \n",
              "308                1.2      3.8                1.2  4.52  4.16  4.52  3.98   \n",
              "319                1.2      3.8                1.2  4.52  4.16  4.52  3.98   \n",
              "299                1.1      4.0                1.1  4.40  4.20  4.40  4.00   \n",
              "285                1.3      3.6                1.3  4.40  4.08  4.40  4.08   \n",
              "426                1.1      3.8                1.1  4.34  3.98  4.34  3.80   \n",
              "232                0.9      4.2                0.9  3.98  3.98  3.98  4.64   \n",
              "109                1.1      4.0                1.1  4.00  4.20  4.00  4.20   \n",
              "196                1.1      3.9                1.1  3.90  4.09  3.90  4.28   \n",
              "118                1.1      3.9                1.1  3.90  4.09  3.90  4.09   \n",
              "289                1.1      3.7                1.1  4.04  3.87  4.04  3.70   \n",
              "450                1.1      3.8                1.1  3.80  3.98  3.80  4.16   \n",
              "94                 1.2      3.5                1.2  3.80  3.80  3.80  3.95   \n",
              "244                1.2      3.5                1.2  3.80  3.80  3.80  3.95   \n",
              "5                  1.1      3.7                1.1  3.70  3.87  3.70  3.87   \n",
              "112                1.1      3.7                1.1  3.70  3.87  3.70  3.87   \n",
              "51                 0.8      3.9                0.8  3.90  3.52  3.90  3.52   \n",
              "356                1.0      3.9                1.0  3.52  3.90  3.52  4.28   \n",
              "63                 1.2      3.3                1.2  3.82  3.56  3.82  3.43   \n",
              "304                1.2      3.3                1.2  3.82  3.56  3.82  3.43   \n",
              "88                 0.8      3.8                0.8  3.80  3.44  3.80  3.26   \n",
              "37                 0.9      4.0                0.9  3.60  3.80  3.60  3.40   \n",
              "278                1.3      3.1                1.3  3.65  3.43  3.65  3.43   \n",
              "425                1.1      3.2                1.1  3.56  3.32  3.56  3.20   \n",
              "317                1.2      3.1                1.2  3.54  3.32  3.54  3.21   \n",
              "370                1.0      3.7                1.0  3.36  3.70  3.36  3.19   \n",
              "\n",
              "      gw6  5GW Total  \n",
              "146  8.96      42.48  \n",
              "290  8.00      38.50  \n",
              "59   8.00      38.40  \n",
              "98   7.04      35.62  \n",
              "397  6.50      33.40  \n",
              "251  6.08      30.74  \n",
              "164  5.77      27.40  \n",
              "353  4.96      27.02  \n",
              "58   5.45      26.33  \n",
              "166  5.51      26.20  \n",
              "28   4.90      25.37  \n",
              "249  5.00      25.25  \n",
              "12   5.24      25.12  \n",
              "291  5.12      24.82  \n",
              "361  4.80      24.35  \n",
              "14   4.99      23.80  \n",
              "190  4.60      23.78  \n",
              "207  4.86      23.52  \n",
              "277  4.85      23.49  \n",
              "15   4.86      23.20  \n",
              "32   4.75      23.00  \n",
              "2    4.52      22.81  \n",
              "95   4.52      22.81  \n",
              "366  4.40      22.30  \n",
              "161  4.60      22.00  \n",
              "308  4.52      21.70  \n",
              "319  4.52      21.70  \n",
              "299  4.40      21.40  \n",
              "285  4.40      21.36  \n",
              "426  4.34      20.80  \n",
              "232  3.98      20.56  \n",
              "109  4.00      20.40  \n",
              "196  3.90      20.07  \n",
              "118  3.90      19.88  \n",
              "289  4.04      19.69  \n",
              "450  3.80      19.54  \n",
              "94   3.80      19.15  \n",
              "244  3.80      19.15  \n",
              "5    3.70      18.84  \n",
              "112  3.70      18.84  \n",
              "51   3.90      18.74  \n",
              "356  3.52      18.74  \n",
              "63   3.82      18.45  \n",
              "304  3.82      18.45  \n",
              "88   3.80      18.10  \n",
              "37   3.60      18.00  \n",
              "278  3.65      17.81  \n",
              "425  3.56      17.20  \n",
              "317  3.54      17.15  \n",
              "370  3.36      16.97  \n",
              "\n",
              "[50 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-db4d39f7-8d58-4ce1-87f2-c0d271a872f2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment_x</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>home_adjustment_y</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw4</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw5</th>\n",
              "      <th>gw6</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>146</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.8</td>\n",
              "      <td>25.4</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>67</td>\n",
              "      <td>30.9</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.1</td>\n",
              "      <td>7.8</td>\n",
              "      <td>1.1</td>\n",
              "      <td>8.96</td>\n",
              "      <td>8.38</td>\n",
              "      <td>8.96</td>\n",
              "      <td>7.22</td>\n",
              "      <td>8.96</td>\n",
              "      <td>42.48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>290</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.5</td>\n",
              "      <td>22.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>61</td>\n",
              "      <td>33.4</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.1</td>\n",
              "      <td>7.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>8.00</td>\n",
              "      <td>7.50</td>\n",
              "      <td>8.00</td>\n",
              "      <td>7.00</td>\n",
              "      <td>8.00</td>\n",
              "      <td>38.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.0</td>\n",
              "      <td>91.3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>71</td>\n",
              "      <td>34.6</td>\n",
              "      <td>...</td>\n",
              "      <td>259</td>\n",
              "      <td>1.3</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>8.00</td>\n",
              "      <td>7.20</td>\n",
              "      <td>8.00</td>\n",
              "      <td>7.20</td>\n",
              "      <td>8.00</td>\n",
              "      <td>38.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.7</td>\n",
              "      <td>66.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>78</td>\n",
              "      <td>38.9</td>\n",
              "      <td>...</td>\n",
              "      <td>268</td>\n",
              "      <td>1.2</td>\n",
              "      <td>6.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>7.04</td>\n",
              "      <td>7.04</td>\n",
              "      <td>7.04</td>\n",
              "      <td>7.46</td>\n",
              "      <td>7.04</td>\n",
              "      <td>35.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>397</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>4.6</td>\n",
              "      <td>11.8</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>73</td>\n",
              "      <td>22.3</td>\n",
              "      <td>...</td>\n",
              "      <td>266</td>\n",
              "      <td>1.1</td>\n",
              "      <td>6.5</td>\n",
              "      <td>1.1</td>\n",
              "      <td>6.50</td>\n",
              "      <td>6.95</td>\n",
              "      <td>6.50</td>\n",
              "      <td>6.95</td>\n",
              "      <td>6.50</td>\n",
              "      <td>33.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>251</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.5</td>\n",
              "      <td>26.5</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>49</td>\n",
              "      <td>27.2</td>\n",
              "      <td>...</td>\n",
              "      <td>251</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.4</td>\n",
              "      <td>1.2</td>\n",
              "      <td>6.08</td>\n",
              "      <td>6.08</td>\n",
              "      <td>6.08</td>\n",
              "      <td>6.42</td>\n",
              "      <td>6.08</td>\n",
              "      <td>30.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>164</th>\n",
              "      <td>140</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>March</td>\n",
              "      <td>6.6</td>\n",
              "      <td>10.6</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>83</td>\n",
              "      <td>32.5</td>\n",
              "      <td>...</td>\n",
              "      <td>234</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.77</td>\n",
              "      <td>5.19</td>\n",
              "      <td>5.77</td>\n",
              "      <td>4.90</td>\n",
              "      <td>5.77</td>\n",
              "      <td>27.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>353</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.7</td>\n",
              "      <td>19.9</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>77</td>\n",
              "      <td>35.4</td>\n",
              "      <td>...</td>\n",
              "      <td>252</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.96</td>\n",
              "      <td>5.70</td>\n",
              "      <td>4.96</td>\n",
              "      <td>6.44</td>\n",
              "      <td>4.96</td>\n",
              "      <td>27.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>58</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>6.6</td>\n",
              "      <td>9.6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>65</td>\n",
              "      <td>36.2</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.3</td>\n",
              "      <td>1.3</td>\n",
              "      <td>5.45</td>\n",
              "      <td>4.99</td>\n",
              "      <td>5.45</td>\n",
              "      <td>4.99</td>\n",
              "      <td>5.45</td>\n",
              "      <td>26.33</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>166</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.6</td>\n",
              "      <td>42.2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>76</td>\n",
              "      <td>33.0</td>\n",
              "      <td>...</td>\n",
              "      <td>260</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.7</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.51</td>\n",
              "      <td>4.97</td>\n",
              "      <td>5.51</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.51</td>\n",
              "      <td>26.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>7.1</td>\n",
              "      <td>21.3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>26.0</td>\n",
              "      <td>...</td>\n",
              "      <td>262</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.90</td>\n",
              "      <td>5.19</td>\n",
              "      <td>4.90</td>\n",
              "      <td>5.48</td>\n",
              "      <td>4.90</td>\n",
              "      <td>25.37</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>249</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis D√≠az</td>\n",
              "      <td>7.7</td>\n",
              "      <td>13.3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>51</td>\n",
              "      <td>19.8</td>\n",
              "      <td>...</td>\n",
              "      <td>193</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.5</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.00</td>\n",
              "      <td>25.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>6.2</td>\n",
              "      <td>17.4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>68</td>\n",
              "      <td>23.2</td>\n",
              "      <td>...</td>\n",
              "      <td>239</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.7</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.24</td>\n",
              "      <td>4.97</td>\n",
              "      <td>5.24</td>\n",
              "      <td>4.43</td>\n",
              "      <td>5.24</td>\n",
              "      <td>25.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>291</th>\n",
              "      <td>376</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Casemiro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>4.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>47</td>\n",
              "      <td>23.9</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.6</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.86</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.60</td>\n",
              "      <td>5.12</td>\n",
              "      <td>24.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.0</td>\n",
              "      <td>7.8</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>71</td>\n",
              "      <td>29.0</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.80</td>\n",
              "      <td>5.50</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.45</td>\n",
              "      <td>4.80</td>\n",
              "      <td>24.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>132</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Ferguson</td>\n",
              "      <td>5.9</td>\n",
              "      <td>4.9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>17.2</td>\n",
              "      <td>...</td>\n",
              "      <td>125</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.53</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.99</td>\n",
              "      <td>23.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>190</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>28</td>\n",
              "      <td>23.6</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.6</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.60</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.60</td>\n",
              "      <td>23.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>207</th>\n",
              "      <td>226</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>M</td>\n",
              "      <td>Eze</td>\n",
              "      <td>6.4</td>\n",
              "      <td>10.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>42</td>\n",
              "      <td>25.9</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.6</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.86</td>\n",
              "      <td>23.52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>277</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.6</td>\n",
              "      <td>13.9</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>57</td>\n",
              "      <td>28.6</td>\n",
              "      <td>...</td>\n",
              "      <td>184</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.85</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.85</td>\n",
              "      <td>4.47</td>\n",
              "      <td>4.85</td>\n",
              "      <td>23.49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Jo√£o Pedro</td>\n",
              "      <td>5.5</td>\n",
              "      <td>18.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>18.9</td>\n",
              "      <td>...</td>\n",
              "      <td>150</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.2</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.86</td>\n",
              "      <td>23.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>225</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>F</td>\n",
              "      <td>Edouard</td>\n",
              "      <td>5.5</td>\n",
              "      <td>2.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>32</td>\n",
              "      <td>25.0</td>\n",
              "      <td>...</td>\n",
              "      <td>250</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.75</td>\n",
              "      <td>4.50</td>\n",
              "      <td>4.75</td>\n",
              "      <td>4.25</td>\n",
              "      <td>4.75</td>\n",
              "      <td>23.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>7.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>56</td>\n",
              "      <td>19.0</td>\n",
              "      <td>...</td>\n",
              "      <td>195</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.1</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.52</td>\n",
              "      <td>22.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>√òdegaard</td>\n",
              "      <td>8.5</td>\n",
              "      <td>21.9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>53</td>\n",
              "      <td>18.8</td>\n",
              "      <td>...</td>\n",
              "      <td>262</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.1</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.52</td>\n",
              "      <td>22.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>539</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>L.Paquet√°</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>45</td>\n",
              "      <td>21.3</td>\n",
              "      <td>...</td>\n",
              "      <td>264</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.40</td>\n",
              "      <td>22.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>161</th>\n",
              "      <td>134</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Gross</td>\n",
              "      <td>6.4</td>\n",
              "      <td>2.6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>69</td>\n",
              "      <td>36.6</td>\n",
              "      <td>...</td>\n",
              "      <td>260</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.60</td>\n",
              "      <td>22.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>308</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>43</td>\n",
              "      <td>18.4</td>\n",
              "      <td>...</td>\n",
              "      <td>193</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.52</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.52</td>\n",
              "      <td>21.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>319</th>\n",
              "      <td>603</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Barnes</td>\n",
              "      <td>6.5</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>38</td>\n",
              "      <td>11.3</td>\n",
              "      <td>...</td>\n",
              "      <td>74</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.52</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.52</td>\n",
              "      <td>21.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>299</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>9.0</td>\n",
              "      <td>38.8</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>22</td>\n",
              "      <td>19.4</td>\n",
              "      <td>...</td>\n",
              "      <td>261</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.40</td>\n",
              "      <td>21.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>285</th>\n",
              "      <td>365</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Rodrigo</td>\n",
              "      <td>5.7</td>\n",
              "      <td>12.2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>100</td>\n",
              "      <td>29.2</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>1.3</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.40</td>\n",
              "      <td>21.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>426</th>\n",
              "      <td>131</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Estupi√±an</td>\n",
              "      <td>5.3</td>\n",
              "      <td>64.2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>83</td>\n",
              "      <td>34.0</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.34</td>\n",
              "      <td>20.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>232</th>\n",
              "      <td>270</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>M</td>\n",
              "      <td>De Cordova-Reid</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>11.1</td>\n",
              "      <td>...</td>\n",
              "      <td>200</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.64</td>\n",
              "      <td>3.98</td>\n",
              "      <td>20.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>109</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.4</td>\n",
              "      <td>2.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>52</td>\n",
              "      <td>17.3</td>\n",
              "      <td>...</td>\n",
              "      <td>238</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.00</td>\n",
              "      <td>20.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>196</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.2</td>\n",
              "      <td>13.4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>73</td>\n",
              "      <td>31.0</td>\n",
              "      <td>...</td>\n",
              "      <td>260</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.28</td>\n",
              "      <td>3.90</td>\n",
              "      <td>20.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.6</td>\n",
              "      <td>9.2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>76</td>\n",
              "      <td>27.8</td>\n",
              "      <td>...</td>\n",
              "      <td>221</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.90</td>\n",
              "      <td>19.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>289</th>\n",
              "      <td>372</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Antony</td>\n",
              "      <td>6.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>24</td>\n",
              "      <td>18.2</td>\n",
              "      <td>...</td>\n",
              "      <td>225</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.87</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.70</td>\n",
              "      <td>4.04</td>\n",
              "      <td>19.69</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>450</th>\n",
              "      <td>195</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>D</td>\n",
              "      <td>Chilwell</td>\n",
              "      <td>5.8</td>\n",
              "      <td>33.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>59</td>\n",
              "      <td>19.8</td>\n",
              "      <td>...</td>\n",
              "      <td>234</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.80</td>\n",
              "      <td>19.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>12</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Martinelli</td>\n",
              "      <td>8.0</td>\n",
              "      <td>12.3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>39</td>\n",
              "      <td>19.6</td>\n",
              "      <td>...</td>\n",
              "      <td>244</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.80</td>\n",
              "      <td>19.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>244</th>\n",
              "      <td>294</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Diogo J.</td>\n",
              "      <td>8.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>48</td>\n",
              "      <td>21.1</td>\n",
              "      <td>...</td>\n",
              "      <td>172</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.80</td>\n",
              "      <td>19.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.0</td>\n",
              "      <td>23.3</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>37</td>\n",
              "      <td>24.8</td>\n",
              "      <td>...</td>\n",
              "      <td>248</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.70</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.70</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.70</td>\n",
              "      <td>18.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>50</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>McGinn</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>13.9</td>\n",
              "      <td>...</td>\n",
              "      <td>243</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.70</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.70</td>\n",
              "      <td>3.87</td>\n",
              "      <td>3.70</td>\n",
              "      <td>18.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>326</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>F</td>\n",
              "      <td>Morris</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>11.9</td>\n",
              "      <td>...</td>\n",
              "      <td>180</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.90</td>\n",
              "      <td>3.52</td>\n",
              "      <td>3.90</td>\n",
              "      <td>3.52</td>\n",
              "      <td>3.90</td>\n",
              "      <td>18.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>356</th>\n",
              "      <td>513</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Sarr</td>\n",
              "      <td>4.5</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>55</td>\n",
              "      <td>22.3</td>\n",
              "      <td>...</td>\n",
              "      <td>148</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.52</td>\n",
              "      <td>3.90</td>\n",
              "      <td>3.52</td>\n",
              "      <td>4.28</td>\n",
              "      <td>3.52</td>\n",
              "      <td>18.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>63</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.7</td>\n",
              "      <td>28.8</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>63</td>\n",
              "      <td>16.9</td>\n",
              "      <td>...</td>\n",
              "      <td>203</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.82</td>\n",
              "      <td>18.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>304</th>\n",
              "      <td>402</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Almir√≥n</td>\n",
              "      <td>6.4</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>30</td>\n",
              "      <td>13.0</td>\n",
              "      <td>...</td>\n",
              "      <td>260</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.82</td>\n",
              "      <td>18.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88</th>\n",
              "      <td>590</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>F</td>\n",
              "      <td>Cunha</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>15.3</td>\n",
              "      <td>...</td>\n",
              "      <td>250</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.8</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.80</td>\n",
              "      <td>18.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>258</td>\n",
              "      <td>Everton</td>\n",
              "      <td>F</td>\n",
              "      <td>Maupay</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-5</td>\n",
              "      <td>12.0</td>\n",
              "      <td>...</td>\n",
              "      <td>110</td>\n",
              "      <td>0.9</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.60</td>\n",
              "      <td>18.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>278</th>\n",
              "      <td>354</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Grealish</td>\n",
              "      <td>7.4</td>\n",
              "      <td>4.1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>40</td>\n",
              "      <td>18.0</td>\n",
              "      <td>...</td>\n",
              "      <td>180</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.65</td>\n",
              "      <td>17.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>425</th>\n",
              "      <td>129</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Dunk</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>41</td>\n",
              "      <td>11.8</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>317</th>\n",
              "      <td>429</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Tonali</td>\n",
              "      <td>5.5</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>44</td>\n",
              "      <td>11.4</td>\n",
              "      <td>...</td>\n",
              "      <td>227</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.54</td>\n",
              "      <td>17.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>370</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>54</td>\n",
              "      <td>17.1</td>\n",
              "      <td>...</td>\n",
              "      <td>170</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.36</td>\n",
              "      <td>3.70</td>\n",
              "      <td>3.36</td>\n",
              "      <td>3.19</td>\n",
              "      <td>3.36</td>\n",
              "      <td>16.97</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows √ó 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-db4d39f7-8d58-4ce1-87f2-c0d271a872f2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-db4d39f7-8d58-4ce1-87f2-c0d271a872f2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-db4d39f7-8d58-4ce1-87f2-c0d271a872f2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2b79d8d7-06bb-4b12-8780-a5486d1ee4ab\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2b79d8d7-06bb-4b12-8780-a5486d1ee4ab')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2b79d8d7-06bb-4b12-8780-a5486d1ee4ab button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 172
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import string"
      ],
      "metadata": {
        "id": "JSw3vk9PJvps"
      },
      "execution_count": 173,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=Top50['cost'],y=Top50['5GW Total'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('cost')\n",
        "ax.set_ylabel('5GW Total')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in Top50.iterrows():\n",
        "    ax.annotate(row['name'], (row['cost'], row['5GW Total']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "id": "435FV-_ocWOi",
        "outputId": "04f0442a-e4d7-474f-8307-d3ceaff0972f"
      },
      "execution_count": 174,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x"
      ],
      "metadata": {
        "id": "mQ58vdHpUd8O",
        "outputId": "aab0d5c6-fc15-47d2-ea81-ed3696e02e40",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        }
      },
      "execution_count": 175,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.6   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  1.5   \n",
              "2     13                  Arsenal   F  Nketiah   5.6                  7.1   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.2   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.1   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "687  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "688  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "689  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "690  569  Wolverhampton Wanderers   G  Jos√© S√°   5.0                  1.3   \n",
              "691  571  Wolverhampton Wanderers   G   ≈†arkiƒá   4.0                  0.5   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  minutes  home_adjustment_x  \\\n",
              "0               0        0    0        0.0  ...        0                1.2   \n",
              "1               0        0    1        3.8  ...        1                1.2   \n",
              "2               2        1   56       19.0  ...      195                1.2   \n",
              "3               0        0    0        0.0  ...        0                1.1   \n",
              "4               1        0   34        7.1  ...       20                1.1   \n",
              "..            ...      ...  ...        ...  ...      ...                ...   \n",
              "687             0        0    0        0.0  ...        0                1.0   \n",
              "688             0        0    0        0.0  ...        0                0.8   \n",
              "689             0        0    0        0.0  ...        0                0.8   \n",
              "690             0        0   71       10.7  ...      270                0.8   \n",
              "691             0        0    0        0.0  ...        0                0.8   \n",
              "\n",
              "     xPallgw  home_adjustment_y   gw7   gw4   gw8   gw5   gw6  5GW Total  \n",
              "0        2.0                1.2  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.2                1.2  2.24  2.24  2.24  2.26  2.24      11.22  \n",
              "2        4.1                1.2  4.52  4.52  4.52  4.73  4.52      22.81  \n",
              "3        2.0                1.1  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.7                1.1  2.70  2.77  2.70  2.77  2.70      13.64  \n",
              "..       ...                ...   ...   ...   ...   ...   ...        ...  \n",
              "687      2.0                1.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "688      2.0                0.8  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "689      2.0                0.8  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "690      2.0                0.8  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "691      2.0                0.8  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "\n",
              "[673 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-037f5d37-5fda-409d-a05a-d9a07e3790f7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment_x</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>home_adjustment_y</th>\n",
              "      <th>gw7</th>\n",
              "      <th>gw4</th>\n",
              "      <th>gw8</th>\n",
              "      <th>gw5</th>\n",
              "      <th>gw6</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>1.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.26</td>\n",
              "      <td>2.24</td>\n",
              "      <td>11.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.6</td>\n",
              "      <td>7.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>56</td>\n",
              "      <td>19.0</td>\n",
              "      <td>...</td>\n",
              "      <td>195</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.1</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.52</td>\n",
              "      <td>22.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>7.1</td>\n",
              "      <td>...</td>\n",
              "      <td>20</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.7</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.70</td>\n",
              "      <td>2.77</td>\n",
              "      <td>2.70</td>\n",
              "      <td>2.77</td>\n",
              "      <td>2.70</td>\n",
              "      <td>13.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>687</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>688</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>689</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>690</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>71</td>\n",
              "      <td>10.7</td>\n",
              "      <td>...</td>\n",
              "      <td>270</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>691</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>673 rows √ó 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-037f5d37-5fda-409d-a05a-d9a07e3790f7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-037f5d37-5fda-409d-a05a-d9a07e3790f7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-037f5d37-5fda-409d-a05a-d9a07e3790f7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ba7d3bca-090e-4782-ae27-24e533e9e1a6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ba7d3bca-090e-4782-ae27-24e533e9e1a6')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ba7d3bca-090e-4782-ae27-24e533e9e1a6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 175
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "apiplayers = master"
      ],
      "metadata": {
        "id": "3bvpGcxtVMyS"
      },
      "execution_count": 176,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Mostselected = apiplayers.nlargest(20, 'selected_by_percent')\n",
        "Mostselected"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "O-wNiNtosYZU",
        "outputId": "9bae2524-2bba-4cd3-eaf4-545c2fe6b5a9"
      },
      "execution_count": 177,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id               team pos         name  cost  selected_by_percent  \\\n",
              "429  355    Manchester City   F      Haaland  14.0                 91.3   \n",
              "18    19            Arsenal   M         Saka   8.7                 66.3   \n",
              "143  131           Brighton   D    Estupi√±an   5.3                 64.2   \n",
              "155  143           Brighton   M       Mitoma   6.6                 42.2   \n",
              "472  396  Manchester United   M     Rashford   9.0                 38.8   \n",
              "220  195            Chelsea   D     Chilwell   5.8                 33.0   \n",
              "512  430   Newcastle United   D     Trippier   6.5                 31.2   \n",
              "497  415   Newcastle United   F         Isak   7.7                 28.8   \n",
              "19    20            Arsenal   D       Saliba   5.2                 28.3   \n",
              "636  524           West Ham   G       Areola   4.1                 27.0   \n",
              "478  597  Manchester United   G        Onana   5.0                 26.7   \n",
              "365  308          Liverpool   M        Salah  12.5                 26.5   \n",
              "120  108          Brentford   M       Mbeumo   6.8                 25.4   \n",
              "60    60        Aston Villa   F      Watkins   8.0                 23.3   \n",
              "450  373  Manchester United   M  B.Fernandes   8.5                 22.4   \n",
              "13    14            Arsenal   M     √òdegaard   8.5                 21.9   \n",
              "234  211            Chelsea   F    N.Jackson   7.1                 21.3   \n",
              "426  352    Manchester City   G   Ederson M.   5.6                 20.4   \n",
              "612  504          Tottenham   M     Maddison   7.7                 19.9   \n",
              "147  135           Brighton   F   Jo√£o Pedro   5.5                 18.1   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "429            2.96              0.08             3        0   71       34.6   \n",
              "18             1.71              1.36             2        0   78       38.9   \n",
              "143            0.36              1.08             1        2   83       34.0   \n",
              "155            0.62              1.67             1        2   76       33.0   \n",
              "472            0.78              0.65             0        2   22       19.4   \n",
              "220            0.41              1.00             0        1   59       19.8   \n",
              "512            0.00              0.51             0        0   56       21.2   \n",
              "497            0.92              0.06             2        0   63       16.9   \n",
              "19             0.04              0.07             0        1   65       11.7   \n",
              "636            0.00              0.00             0        0   74       11.7   \n",
              "478            0.00              0.00             0        0   59       10.2   \n",
              "365            1.69              0.54             1        2   49       27.2   \n",
              "120            3.18              0.52             3        0   67       30.9   \n",
              "60             1.16              0.16             0        3   37       24.8   \n",
              "450            2.00              1.69             1        1   61       33.4   \n",
              "13             1.05              0.32             1        0   53       18.8   \n",
              "234            2.03              0.23             1        0   34       26.0   \n",
              "426            0.00              0.02             0        0   59        4.5   \n",
              "612            1.25              1.63             1        2   77       35.4   \n",
              "147            1.51              0.15             1        0   31       18.9   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  \n",
              "429      19              6.3      259         2            3  \n",
              "18       21              7.0      268         2            3  \n",
              "143      19              6.3      270         2            3  \n",
              "155      18              6.0      260         2            3  \n",
              "472      12              4.0      261         2            3  \n",
              "220      14              4.7      234         2            3  \n",
              "512       4              1.3      270         2            3  \n",
              "497      17              5.7      203         2            3  \n",
              "19       14              4.7      270         2            3  \n",
              "636      18              6.0      270         2            3  \n",
              "478      11              3.7      270         2            3  \n",
              "365      15              5.0      251         2            3  \n",
              "120      25              8.3      270         2            3  \n",
              "60       15              5.0      248         2            3  \n",
              "450      16              5.3      270         2            3  \n",
              "13       15              5.0      262         2            3  \n",
              "234       9              3.0      262         2            3  \n",
              "426      14              4.7      270         2            3  \n",
              "612      22              7.3      252         2            3  \n",
              "147       8              2.7      150         2            3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-14521416-fec3-4846-9193-3437c861d7e3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>429</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.0</td>\n",
              "      <td>91.3</td>\n",
              "      <td>2.96</td>\n",
              "      <td>0.08</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>71</td>\n",
              "      <td>34.6</td>\n",
              "      <td>19</td>\n",
              "      <td>6.3</td>\n",
              "      <td>259</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.7</td>\n",
              "      <td>66.3</td>\n",
              "      <td>1.71</td>\n",
              "      <td>1.36</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>78</td>\n",
              "      <td>38.9</td>\n",
              "      <td>21</td>\n",
              "      <td>7.0</td>\n",
              "      <td>268</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>143</th>\n",
              "      <td>131</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Estupi√±an</td>\n",
              "      <td>5.3</td>\n",
              "      <td>64.2</td>\n",
              "      <td>0.36</td>\n",
              "      <td>1.08</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>83</td>\n",
              "      <td>34.0</td>\n",
              "      <td>19</td>\n",
              "      <td>6.3</td>\n",
              "      <td>270</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>155</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.6</td>\n",
              "      <td>42.2</td>\n",
              "      <td>0.62</td>\n",
              "      <td>1.67</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>76</td>\n",
              "      <td>33.0</td>\n",
              "      <td>18</td>\n",
              "      <td>6.0</td>\n",
              "      <td>260</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>472</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>9.0</td>\n",
              "      <td>38.8</td>\n",
              "      <td>0.78</td>\n",
              "      <td>0.65</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>22</td>\n",
              "      <td>19.4</td>\n",
              "      <td>12</td>\n",
              "      <td>4.0</td>\n",
              "      <td>261</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>220</th>\n",
              "      <td>195</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>D</td>\n",
              "      <td>Chilwell</td>\n",
              "      <td>5.8</td>\n",
              "      <td>33.0</td>\n",
              "      <td>0.41</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>59</td>\n",
              "      <td>19.8</td>\n",
              "      <td>14</td>\n",
              "      <td>4.7</td>\n",
              "      <td>234</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>512</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>6.5</td>\n",
              "      <td>31.2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.51</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>56</td>\n",
              "      <td>21.2</td>\n",
              "      <td>4</td>\n",
              "      <td>1.3</td>\n",
              "      <td>270</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>497</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.7</td>\n",
              "      <td>28.8</td>\n",
              "      <td>0.92</td>\n",
              "      <td>0.06</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>63</td>\n",
              "      <td>16.9</td>\n",
              "      <td>17</td>\n",
              "      <td>5.7</td>\n",
              "      <td>203</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.2</td>\n",
              "      <td>28.3</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.07</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>65</td>\n",
              "      <td>11.7</td>\n",
              "      <td>14</td>\n",
              "      <td>4.7</td>\n",
              "      <td>270</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>636</th>\n",
              "      <td>524</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Areola</td>\n",
              "      <td>4.1</td>\n",
              "      <td>27.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>74</td>\n",
              "      <td>11.7</td>\n",
              "      <td>18</td>\n",
              "      <td>6.0</td>\n",
              "      <td>270</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>478</th>\n",
              "      <td>597</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>G</td>\n",
              "      <td>Onana</td>\n",
              "      <td>5.0</td>\n",
              "      <td>26.7</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>59</td>\n",
              "      <td>10.2</td>\n",
              "      <td>11</td>\n",
              "      <td>3.7</td>\n",
              "      <td>270</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.5</td>\n",
              "      <td>26.5</td>\n",
              "      <td>1.69</td>\n",
              "      <td>0.54</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>49</td>\n",
              "      <td>27.2</td>\n",
              "      <td>15</td>\n",
              "      <td>5.0</td>\n",
              "      <td>251</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>120</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.8</td>\n",
              "      <td>25.4</td>\n",
              "      <td>3.18</td>\n",
              "      <td>0.52</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>67</td>\n",
              "      <td>30.9</td>\n",
              "      <td>25</td>\n",
              "      <td>8.3</td>\n",
              "      <td>270</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.0</td>\n",
              "      <td>23.3</td>\n",
              "      <td>1.16</td>\n",
              "      <td>0.16</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>37</td>\n",
              "      <td>24.8</td>\n",
              "      <td>15</td>\n",
              "      <td>5.0</td>\n",
              "      <td>248</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>450</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.5</td>\n",
              "      <td>22.4</td>\n",
              "      <td>2.00</td>\n",
              "      <td>1.69</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>61</td>\n",
              "      <td>33.4</td>\n",
              "      <td>16</td>\n",
              "      <td>5.3</td>\n",
              "      <td>270</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>√òdegaard</td>\n",
              "      <td>8.5</td>\n",
              "      <td>21.9</td>\n",
              "      <td>1.05</td>\n",
              "      <td>0.32</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>53</td>\n",
              "      <td>18.8</td>\n",
              "      <td>15</td>\n",
              "      <td>5.0</td>\n",
              "      <td>262</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>234</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>7.1</td>\n",
              "      <td>21.3</td>\n",
              "      <td>2.03</td>\n",
              "      <td>0.23</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>26.0</td>\n",
              "      <td>9</td>\n",
              "      <td>3.0</td>\n",
              "      <td>262</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>426</th>\n",
              "      <td>352</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Ederson M.</td>\n",
              "      <td>5.6</td>\n",
              "      <td>20.4</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>59</td>\n",
              "      <td>4.5</td>\n",
              "      <td>14</td>\n",
              "      <td>4.7</td>\n",
              "      <td>270</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>612</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.7</td>\n",
              "      <td>19.9</td>\n",
              "      <td>1.25</td>\n",
              "      <td>1.63</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>77</td>\n",
              "      <td>35.4</td>\n",
              "      <td>22</td>\n",
              "      <td>7.3</td>\n",
              "      <td>252</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>147</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Jo√£o Pedro</td>\n",
              "      <td>5.5</td>\n",
              "      <td>18.1</td>\n",
              "      <td>1.51</td>\n",
              "      <td>0.15</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>18.9</td>\n",
              "      <td>8</td>\n",
              "      <td>2.7</td>\n",
              "      <td>150</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-14521416-fec3-4846-9193-3437c861d7e3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-14521416-fec3-4846-9193-3437c861d7e3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-14521416-fec3-4846-9193-3437c861d7e3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6aa6b218-1091-4d34-a307-4d67f9e973e4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6aa6b218-1091-4d34-a307-4d67f9e973e4')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6aa6b218-1091-4d34-a307-4d67f9e973e4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 177
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ax = sns.barplot(x='selected_by_percent', y='name', data=Mostselected, hue='pos', dodge=False)\n",
        "sns.set(rc={'figure.figsize':(11.7,8.27)})\n",
        "plt.title(\"Most Selected\")\n",
        "plt.xticks(rotation=90)\n",
        "plt.ylabel(\"selected_by_percent\")\n",
        "plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0)\n",
        "plt.gcf().set_size_inches(30,10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 603
        },
        "id": "8PBz92opthgG",
        "outputId": "2881efa3-191c-4716-9f04-e126c7e7b7ba"
      },
      "execution_count": 178,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 3000x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltablexGxGc = epltable.drop(columns=[\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltablexGxGc= epltablexGxGc.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltablexGxGc= epltablexGxGc.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leeds United','Leeds')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leicester City','Leicester')\n",
        "epltablexGxGc= epltablexGxGc.replace('Manchester Utd','Manchester United')\n",
        "epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltablexGxGc= epltablexGxGc.replace('Nottham Forest','Nottingham Forest')\n",
        "epltablexGxGc['xCSP'] = (4 - (epltablexGxGc.xGA * 4/23))\n",
        "epltablexGxGc.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "epltablexGxGc['xG/90'] = (epltablexGxGc.xG / epltablexGxGc.MP)\n",
        "epltablexGxGc['xGA/90'] = (epltablexGxGc.xGA / epltablexGxGc.MP)\n",
        "epltablexGxGc"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 746
        },
        "id": "D8nuKObbLt5s",
        "outputId": "9c5f63f4-7f69-4a6a-db77-0c1c431b927c"
      },
      "execution_count": 179,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-179-f34def3770e4>:14: FutureWarning:\n",
            "\n",
            "The default value of regex will change from True to False in a future version.\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Rk                     team  MP  W  D  L  GF  GA  GD  Pts  Pts/MP   xG  \\\n",
              "0    1          Manchester City   3  3  0  0   6   1   5    9    3.00  6.5   \n",
              "1    2                 West Ham   3  2  1  0   7   3   4    7    2.33  5.9   \n",
              "2    3                Tottenham   3  2  1  0   6   2   4    7    2.33  5.1   \n",
              "3    4                Liverpool   3  2  1  0   6   3   3    7    2.33  5.2   \n",
              "4    5                  Arsenal   3  2  1  0   5   3   2    7    2.33  6.0   \n",
              "5    6                 Brighton   3  2  0  1   9   5   4    6    2.00  7.7   \n",
              "6    7              Aston Villa   3  2  0  1   8   6   2    6    2.00  7.2   \n",
              "7    8        Manchester United   3  2  0  1   4   4   0    6    2.00  7.1   \n",
              "8    9                Brentford   3  1  2  0   6   3   3    5    1.67  6.8   \n",
              "9   10                  Chelsea   3  1  1  1   5   4   1    4    1.33  6.1   \n",
              "10  11           Crystal Palace   3  1  1  1   2   2   0    4    1.33  3.7   \n",
              "11  12                   Fulham   3  1  1  1   3   5  -2    4    1.33  2.5   \n",
              "12  13         Newcastle United   3  1  0  2   6   4   2    3    1.00  5.6   \n",
              "13  14        Nottingham Forest   3  1  0  2   5   6  -1    3    1.00  3.8   \n",
              "14  15  Wolverhampton Wanderers   3  1  0  2   2   5  -3    3    1.00  5.3   \n",
              "15  16              Bournemouth   3  0  1  2   2   6  -4    1    0.33  3.3   \n",
              "16  17            Sheffield Utd   3  0  0  3   2   5  -3    0    0.00  1.7   \n",
              "17  18                  Burnley   2  0  0  2   1   6  -5    0    0.00  1.1   \n",
              "18  19               Luton Town   2  0  0  2   1   7  -6    0    0.00  1.9   \n",
              "19  20                  Everton   3  0  0  3   0   6  -6    0    0.00  4.7   \n",
              "\n",
              "    xGA  xGD  xGD/90      xCSP     xG/90    xGA/90  \n",
              "0   1.3  5.2    1.73  3.773913  2.166667  0.433333  \n",
              "1   5.3  0.6    0.21  3.078261  1.966667  1.766667  \n",
              "2   4.9  0.1    0.05  3.147826  1.700000  1.633333  \n",
              "3   4.6  0.6    0.19  3.200000  1.733333  1.533333  \n",
              "4   2.7  3.3    1.09  3.530435  2.000000  0.900000  \n",
              "5   6.6  1.1    0.37  2.852174  2.566667  2.200000  \n",
              "6   4.7  2.5    0.83  3.182609  2.400000  1.566667  \n",
              "7   5.2  1.9    0.64  3.095652  2.366667  1.733333  \n",
              "8   2.5  4.3    1.43  3.565217  2.266667  0.833333  \n",
              "9   3.5  2.6    0.85  3.391304  2.033333  1.166667  \n",
              "10  3.5  0.2    0.06  3.391304  1.233333  1.166667  \n",
              "11  9.5 -7.0   -2.34  2.347826  0.833333  3.166667  \n",
              "12  3.6  2.0    0.66  3.373913  1.866667  1.200000  \n",
              "13  4.2 -0.4   -0.13  3.269565  1.266667  1.400000  \n",
              "14  5.7 -0.4   -0.12  3.008696  1.766667  1.900000  \n",
              "15  6.2 -2.9   -0.97  2.921739  1.100000  2.066667  \n",
              "16  6.8 -5.1   -1.71  2.817391  0.566667  2.266667  \n",
              "17  4.4 -3.4   -1.70  3.234783  0.550000  2.200000  \n",
              "18  6.2 -4.3   -2.16  2.921739  0.950000  3.100000  \n",
              "19  5.5 -0.8   -0.28  3.043478  1.566667  1.833333  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-563c0ace-36d8-4a9d-b720-01467ce589ed\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rk</th>\n",
              "      <th>team</th>\n",
              "      <th>MP</th>\n",
              "      <th>W</th>\n",
              "      <th>D</th>\n",
              "      <th>L</th>\n",
              "      <th>GF</th>\n",
              "      <th>GA</th>\n",
              "      <th>GD</th>\n",
              "      <th>Pts</th>\n",
              "      <th>Pts/MP</th>\n",
              "      <th>xG</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xGD</th>\n",
              "      <th>xGD/90</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>xG/90</th>\n",
              "      <th>xGA/90</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>9</td>\n",
              "      <td>3.00</td>\n",
              "      <td>6.5</td>\n",
              "      <td>1.3</td>\n",
              "      <td>5.2</td>\n",
              "      <td>1.73</td>\n",
              "      <td>3.773913</td>\n",
              "      <td>2.166667</td>\n",
              "      <td>0.433333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>2.33</td>\n",
              "      <td>5.9</td>\n",
              "      <td>5.3</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.21</td>\n",
              "      <td>3.078261</td>\n",
              "      <td>1.966667</td>\n",
              "      <td>1.766667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>2.33</td>\n",
              "      <td>5.1</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.05</td>\n",
              "      <td>3.147826</td>\n",
              "      <td>1.700000</td>\n",
              "      <td>1.633333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>2.33</td>\n",
              "      <td>5.2</td>\n",
              "      <td>4.6</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.19</td>\n",
              "      <td>3.200000</td>\n",
              "      <td>1.733333</td>\n",
              "      <td>1.533333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>2.33</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2.7</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.09</td>\n",
              "      <td>3.530435</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.900000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>9</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>2.00</td>\n",
              "      <td>7.7</td>\n",
              "      <td>6.6</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0.37</td>\n",
              "      <td>2.852174</td>\n",
              "      <td>2.566667</td>\n",
              "      <td>2.200000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>2.00</td>\n",
              "      <td>7.2</td>\n",
              "      <td>4.7</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.83</td>\n",
              "      <td>3.182609</td>\n",
              "      <td>2.400000</td>\n",
              "      <td>1.566667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>2.00</td>\n",
              "      <td>7.1</td>\n",
              "      <td>5.2</td>\n",
              "      <td>1.9</td>\n",
              "      <td>0.64</td>\n",
              "      <td>3.095652</td>\n",
              "      <td>2.366667</td>\n",
              "      <td>1.733333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>1.67</td>\n",
              "      <td>6.8</td>\n",
              "      <td>2.5</td>\n",
              "      <td>4.3</td>\n",
              "      <td>1.43</td>\n",
              "      <td>3.565217</td>\n",
              "      <td>2.266667</td>\n",
              "      <td>0.833333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>1.33</td>\n",
              "      <td>6.1</td>\n",
              "      <td>3.5</td>\n",
              "      <td>2.6</td>\n",
              "      <td>0.85</td>\n",
              "      <td>3.391304</td>\n",
              "      <td>2.033333</td>\n",
              "      <td>1.166667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1.33</td>\n",
              "      <td>3.7</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.06</td>\n",
              "      <td>3.391304</td>\n",
              "      <td>1.233333</td>\n",
              "      <td>1.166667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>-2</td>\n",
              "      <td>4</td>\n",
              "      <td>1.33</td>\n",
              "      <td>2.5</td>\n",
              "      <td>9.5</td>\n",
              "      <td>-7.0</td>\n",
              "      <td>-2.34</td>\n",
              "      <td>2.347826</td>\n",
              "      <td>0.833333</td>\n",
              "      <td>3.166667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.00</td>\n",
              "      <td>5.6</td>\n",
              "      <td>3.6</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.66</td>\n",
              "      <td>3.373913</td>\n",
              "      <td>1.866667</td>\n",
              "      <td>1.200000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>-1</td>\n",
              "      <td>3</td>\n",
              "      <td>1.00</td>\n",
              "      <td>3.8</td>\n",
              "      <td>4.2</td>\n",
              "      <td>-0.4</td>\n",
              "      <td>-0.13</td>\n",
              "      <td>3.269565</td>\n",
              "      <td>1.266667</td>\n",
              "      <td>1.400000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>-3</td>\n",
              "      <td>3</td>\n",
              "      <td>1.00</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.7</td>\n",
              "      <td>-0.4</td>\n",
              "      <td>-0.12</td>\n",
              "      <td>3.008696</td>\n",
              "      <td>1.766667</td>\n",
              "      <td>1.900000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>16</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>-4</td>\n",
              "      <td>1</td>\n",
              "      <td>0.33</td>\n",
              "      <td>3.3</td>\n",
              "      <td>6.2</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>-0.97</td>\n",
              "      <td>2.921739</td>\n",
              "      <td>1.100000</td>\n",
              "      <td>2.066667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>Sheffield Utd</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>-3</td>\n",
              "      <td>0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1.7</td>\n",
              "      <td>6.8</td>\n",
              "      <td>-5.1</td>\n",
              "      <td>-1.71</td>\n",
              "      <td>2.817391</td>\n",
              "      <td>0.566667</td>\n",
              "      <td>2.266667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>-5</td>\n",
              "      <td>0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.4</td>\n",
              "      <td>-3.4</td>\n",
              "      <td>-1.70</td>\n",
              "      <td>3.234783</td>\n",
              "      <td>0.550000</td>\n",
              "      <td>2.200000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>-6</td>\n",
              "      <td>0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1.9</td>\n",
              "      <td>6.2</td>\n",
              "      <td>-4.3</td>\n",
              "      <td>-2.16</td>\n",
              "      <td>2.921739</td>\n",
              "      <td>0.950000</td>\n",
              "      <td>3.100000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>Everton</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>-6</td>\n",
              "      <td>0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>4.7</td>\n",
              "      <td>5.5</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-0.28</td>\n",
              "      <td>3.043478</td>\n",
              "      <td>1.566667</td>\n",
              "      <td>1.833333</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-563c0ace-36d8-4a9d-b720-01467ce589ed')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-563c0ace-36d8-4a9d-b720-01467ce589ed button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-563c0ace-36d8-4a9d-b720-01467ce589ed');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-da918cb9-085d-4f48-9755-0f9c756a2ec8\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-da918cb9-085d-4f48-9755-0f9c756a2ec8')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-da918cb9-085d-4f48-9755-0f9c756a2ec8 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 179
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=epltablexGxGc['xG/90'],y=epltablexGxGc['xGA/90'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('xG/90')\n",
        "ax.set_ylabel('xGA/90')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in epltablexGxGc.iterrows():\n",
        "    ax.annotate(row['team'], (row['xG/90'], row['xGA/90']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "id": "TYn5yVsCNlLv",
        "outputId": "fbe41c37-0849-4cd5-b1e0-ad6f85f36670"
      },
      "execution_count": 180,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 583
        },
        "id": "wrjHrDmJ8OlM",
        "outputId": "1796651d-1fcd-4f58-be23-b2f61a6790a4"
      },
      "execution_count": 181,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id       player_name games_x time_x goals_1wks_x            xG_1wks_x  \\\n",
              "0     6049       Solly March       3    241            3   2.1514047384262085   \n",
              "1     6552      Bryan Mbeumo       3    270            3    3.051823675632477   \n",
              "2     7814     Taiwo Awoniyi       3    183            3    1.666745364665985   \n",
              "3     8260    Erling Haaland       3    265            3   3.3890090584754944   \n",
              "4      531   Michail Antonio       3    247            2   0.9052570015192032   \n",
              "..     ...               ...     ...    ...          ...                  ...   \n",
              "362  11807       Ian Maatsen       2      4            0                    0   \n",
              "363  11810     Mason Burstow       2      2            0                    0   \n",
              "364  11926     Edson √Ålvarez       2     89            0                    0   \n",
              "365  11984  Youssef Chermiti       1     22            0  0.06607918441295624   \n",
              "366  11998   Hannes Delcroix       1     90            0  0.07460393756628036   \n",
              "\n",
              "    assists_1wks_x            xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0                0   0.1520106978714466           10                 5  ...   \n",
              "1                0    0.264384388923645            7                 3  ...   \n",
              "2                0  0.07604995369911194            5                 2  ...   \n",
              "3                0   0.4058229774236679           16                 4  ...   \n",
              "4                0  0.15586480498313904            5                 1  ...   \n",
              "..             ...                  ...          ...               ...  ...   \n",
              "362              0                    0            0                 0  ...   \n",
              "363              0                    0            0                 0  ...   \n",
              "364              0                    0            0                 0  ...   \n",
              "365              0                    0            1                 0  ...   \n",
              "366              0   0.0830167606472969            2                 2  ...   \n",
              "\n",
              "    yellow_cards red_cards position_y       team_title_y npg_1wks_y  \\\n",
              "0              0         0          M           Brighton          3   \n",
              "1              0         0          F          Brentford          1   \n",
              "2              0         0        F S  Nottingham Forest          3   \n",
              "3              0         0          F    Manchester City          3   \n",
              "4              1         0          F           West Ham          2   \n",
              "..           ...       ...        ...                ...        ...   \n",
              "362            1         0          S            Chelsea          0   \n",
              "363            0         0          S            Chelsea          0   \n",
              "364            1         0        M S           West Ham          0   \n",
              "365            1         0          S            Everton          0   \n",
              "366            0         0          D            Burnley          0   \n",
              "\n",
              "             npxG_1wks_y              xGChain             xGBuildup goals  \\\n",
              "0     2.1514047384262085     2.92387917637825     0.847283273935318     3   \n",
              "1     1.5294859409332275   1.5952002853155136   0.06571434438228607     3   \n",
              "2      1.666745364665985   1.7157853245735168  0.015222105197608471     3   \n",
              "3      2.627840220928192   2.9821196794509888    0.5024585798382759     3   \n",
              "4     0.9052570015192032   1.6813295632600784    0.6202077269554138     2   \n",
              "..                   ...                  ...                   ...   ...   \n",
              "362                    0                    0                     0     0   \n",
              "363                    0                    0                     0     0   \n",
              "364                    0                    0                     0     0   \n",
              "365  0.06607918441295624                    0                     0     0   \n",
              "366  0.07460393756628036  0.11859950423240662   0.03558274731040001     0   \n",
              "\n",
              "    assists  \n",
              "0         0  \n",
              "1         0  \n",
              "2         0  \n",
              "3         0  \n",
              "4         0  \n",
              "..      ...  \n",
              "362       0  \n",
              "363       0  \n",
              "364       0  \n",
              "365       0  \n",
              "366       0  \n",
              "\n",
              "[367 rows x 50 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cde2711b-f76a-4e73-8e4e-52573caf8415\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6049</td>\n",
              "      <td>Solly March</td>\n",
              "      <td>3</td>\n",
              "      <td>241</td>\n",
              "      <td>3</td>\n",
              "      <td>2.1514047384262085</td>\n",
              "      <td>0</td>\n",
              "      <td>0.1520106978714466</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>2.1514047384262085</td>\n",
              "      <td>2.92387917637825</td>\n",
              "      <td>0.847283273935318</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>3</td>\n",
              "      <td>270</td>\n",
              "      <td>3</td>\n",
              "      <td>3.051823675632477</td>\n",
              "      <td>0</td>\n",
              "      <td>0.264384388923645</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>1</td>\n",
              "      <td>1.5294859409332275</td>\n",
              "      <td>1.5952002853155136</td>\n",
              "      <td>0.06571434438228607</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>3</td>\n",
              "      <td>183</td>\n",
              "      <td>3</td>\n",
              "      <td>1.666745364665985</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07604995369911194</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>3</td>\n",
              "      <td>1.666745364665985</td>\n",
              "      <td>1.7157853245735168</td>\n",
              "      <td>0.015222105197608471</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>3</td>\n",
              "      <td>265</td>\n",
              "      <td>3</td>\n",
              "      <td>3.3890090584754944</td>\n",
              "      <td>0</td>\n",
              "      <td>0.4058229774236679</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>3</td>\n",
              "      <td>2.627840220928192</td>\n",
              "      <td>2.9821196794509888</td>\n",
              "      <td>0.5024585798382759</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>531</td>\n",
              "      <td>Michail Antonio</td>\n",
              "      <td>3</td>\n",
              "      <td>247</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9052570015192032</td>\n",
              "      <td>0</td>\n",
              "      <td>0.15586480498313904</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9052570015192032</td>\n",
              "      <td>1.6813295632600784</td>\n",
              "      <td>0.6202077269554138</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>11807</td>\n",
              "      <td>Ian Maatsen</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>11810</td>\n",
              "      <td>Mason Burstow</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson √Ålvarez</td>\n",
              "      <td>2</td>\n",
              "      <td>89</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>11984</td>\n",
              "      <td>Youssef Chermiti</td>\n",
              "      <td>1</td>\n",
              "      <td>22</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06607918441295624</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Everton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.06607918441295624</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>1</td>\n",
              "      <td>90</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07460393756628036</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0830167606472969</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07460393756628036</td>\n",
              "      <td>0.11859950423240662</td>\n",
              "      <td>0.03558274731040001</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>367 rows √ó 50 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cde2711b-f76a-4e73-8e4e-52573caf8415')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-cde2711b-f76a-4e73-8e4e-52573caf8415 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-cde2711b-f76a-4e73-8e4e-52573caf8415');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c880e845-a201-4aed-aa14-20bbee303827\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c880e845-a201-4aed-aa14-20bbee303827')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c880e845-a201-4aed-aa14-20bbee303827 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 181
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['goals'] = EPL_player_df['goals_1wks_x'].astype(int)\n",
        "top25goals = EPL_player_df.nlargest(20, 'goals')\n",
        "top25goals"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 986
        },
        "id": "3H-vTRXF8VDs",
        "outputId": "4e0e7d87-324f-4b54-91e1-de2936d3d422"
      },
      "execution_count": 182,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id        player_name games_x time_x goals_1wks_x            xG_1wks_x  \\\n",
              "0    6049        Solly March       3    241            3   2.1514047384262085   \n",
              "1    6552       Bryan Mbeumo       3    270            3    3.051823675632477   \n",
              "2    7814      Taiwo Awoniyi       3    183            3    1.666745364665985   \n",
              "3    8260     Erling Haaland       3    265            3   3.3890090584754944   \n",
              "4     531    Michail Antonio       3    247            2   0.9052570015192032   \n",
              "5     618    Raheem Sterling       3    268            2   1.3015881404280663   \n",
              "6    1776       Jarrod Bowen       3    270            2   1.3066161274909973   \n",
              "7    2496              Rodri       3    270            2    1.057547777891159   \n",
              "8    5232     Alexander Isak       3    224            2    1.313307374715805   \n",
              "9    5786        Yoane Wissa       3    254            2   1.5698162466287613   \n",
              "10   6482      Eddie Nketiah       3    202            2   1.6614932417869568   \n",
              "11   6556       Moussa Diaby       3    239            2   0.7691009938716888   \n",
              "12   7322        Bukayo Saka       3    270            2   1.8227379024028778   \n",
              "13   8864       Matthew Cash       3    270            2   2.0693803429603577   \n",
              "14  10408          Luis D√≠az       3    206            2   1.2460210025310516   \n",
              "15  10720       Darwin N√∫√±ez       3     27            2  0.39028404653072357   \n",
              "16    239        Pascal Gro√ü       3    263            1    0.520846351981163   \n",
              "17    468      Callum Wilson       3     46            1   1.3336846008896828   \n",
              "18    646  Christian Eriksen       3    131            1  0.16082441806793213   \n",
              "19    843  James Ward-Prowse       2    180            1    1.061242589727044   \n",
              "\n",
              "   assists_1wks_x             xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0               0    0.1520106978714466           10                 5  ...   \n",
              "1               0     0.264384388923645            7                 3  ...   \n",
              "2               0   0.07604995369911194            5                 2  ...   \n",
              "3               0    0.4058229774236679           16                 4  ...   \n",
              "4               0   0.15586480498313904            5                 1  ...   \n",
              "5               0    0.6864727661013603            6                 4  ...   \n",
              "6               1    0.8080089539289474           11                 4  ...   \n",
              "7               1    0.5278989188373089            9                 2  ...   \n",
              "8               0   0.04466302692890167            4                 1  ...   \n",
              "9               0   0.07477104663848877           12                 2  ...   \n",
              "10              0   0.16011278331279755           10                 2  ...   \n",
              "11              1    1.8064229488372803            8                 6  ...   \n",
              "12              0    0.7345314770936966            9                 9  ...   \n",
              "13              0   0.09815222769975662            8                 1  ...   \n",
              "14              0    0.3413136154413223            8                 3  ...   \n",
              "15              0                     0            4                 0  ...   \n",
              "16              0    1.1683019399642944            8                14  ...   \n",
              "17              0  0.015900330618023872            6                 1  ...   \n",
              "18              0   0.07433079183101654            1                 2  ...   \n",
              "19              2   0.44829946756362915            4                 2  ...   \n",
              "\n",
              "   yellow_cards red_cards position_y       team_title_y npg_1wks_y  \\\n",
              "0             0         0          M           Brighton          3   \n",
              "1             0         0          F          Brentford          1   \n",
              "2             0         0        F S  Nottingham Forest          3   \n",
              "3             0         0          F    Manchester City          3   \n",
              "4             1         0          F           West Ham          2   \n",
              "5             0         0          M            Chelsea          2   \n",
              "6             1         0          M           West Ham          2   \n",
              "7             0         0          M    Manchester City          2   \n",
              "8             0         0          F   Newcastle United          2   \n",
              "9             0         0          F          Brentford          2   \n",
              "10            0         0        F S            Arsenal          2   \n",
              "11            0         0          M        Aston Villa          2   \n",
              "12            0         0          F            Arsenal          1   \n",
              "13            1         0          D        Aston Villa          2   \n",
              "14            0         0          F          Liverpool          2   \n",
              "15            1         0          S          Liverpool          2   \n",
              "16            1         0          M           Brighton          1   \n",
              "17            0         0          S   Newcastle United          1   \n",
              "18            0         0        M S  Manchester United          1   \n",
              "19            1         0          M           West Ham          1   \n",
              "\n",
              "            npxG_1wks_y             xGChain             xGBuildup goals  \\\n",
              "0    2.1514047384262085    2.92387917637825     0.847283273935318     3   \n",
              "1    1.5294859409332275  1.5952002853155136   0.06571434438228607     3   \n",
              "2     1.666745364665985  1.7157853245735168  0.015222105197608471     3   \n",
              "3     2.627840220928192  2.9821196794509888    0.5024585798382759     3   \n",
              "4    0.9052570015192032  1.6813295632600784    0.6202077269554138     2   \n",
              "5    1.3015881404280663   2.863941490650177    1.1650180742144585     2   \n",
              "6    1.3066161274909973  1.5868245959281921   0.35537485778331757     2   \n",
              "7     1.057547777891159  3.7696669697761536      3.46992427110672     2   \n",
              "8     1.313307374715805  1.3656214773654938    0.5321443229913712     2   \n",
              "9    1.5698162466287613  0.8684456050395966   0.08360356092453003     2   \n",
              "10   1.6614932417869568  1.9812424182891846     0.346959687769413     2   \n",
              "11   0.7691009938716888  3.3147943019866943    1.8412092700600624     2   \n",
              "12   1.0615691244602203  2.5287054777145386    1.1694485247135162     2   \n",
              "13   2.0693803429603577   2.510700896382332    0.9015320464968681     2   \n",
              "14   1.2460210025310516  1.4500691294670105    0.4201557785272598     2   \n",
              "15  0.39028404653072357  0.4442247599363327   0.05394074320793152     2   \n",
              "16    0.520846351981163  3.6678450107574463    2.8425965905189514     1   \n",
              "17   1.3336846008896828  1.3495849315077066                     0     1   \n",
              "18  0.16082441806793213  1.2582217063754797    1.0230665039271116     1   \n",
              "19    1.061242589727044  1.8744915947318077    0.8132488876581192     1   \n",
              "\n",
              "   assists  \n",
              "0        0  \n",
              "1        0  \n",
              "2        0  \n",
              "3        0  \n",
              "4        0  \n",
              "5        0  \n",
              "6        1  \n",
              "7        1  \n",
              "8        0  \n",
              "9        0  \n",
              "10       0  \n",
              "11       1  \n",
              "12       0  \n",
              "13       0  \n",
              "14       0  \n",
              "15       0  \n",
              "16       0  \n",
              "17       0  \n",
              "18       0  \n",
              "19       2  \n",
              "\n",
              "[20 rows x 50 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8b34aa28-a038-45a3-882b-05986d80e7dc\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6049</td>\n",
              "      <td>Solly March</td>\n",
              "      <td>3</td>\n",
              "      <td>241</td>\n",
              "      <td>3</td>\n",
              "      <td>2.1514047384262085</td>\n",
              "      <td>0</td>\n",
              "      <td>0.1520106978714466</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>2.1514047384262085</td>\n",
              "      <td>2.92387917637825</td>\n",
              "      <td>0.847283273935318</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>3</td>\n",
              "      <td>270</td>\n",
              "      <td>3</td>\n",
              "      <td>3.051823675632477</td>\n",
              "      <td>0</td>\n",
              "      <td>0.264384388923645</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>1</td>\n",
              "      <td>1.5294859409332275</td>\n",
              "      <td>1.5952002853155136</td>\n",
              "      <td>0.06571434438228607</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>3</td>\n",
              "      <td>183</td>\n",
              "      <td>3</td>\n",
              "      <td>1.666745364665985</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07604995369911194</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>3</td>\n",
              "      <td>1.666745364665985</td>\n",
              "      <td>1.7157853245735168</td>\n",
              "      <td>0.015222105197608471</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>3</td>\n",
              "      <td>265</td>\n",
              "      <td>3</td>\n",
              "      <td>3.3890090584754944</td>\n",
              "      <td>0</td>\n",
              "      <td>0.4058229774236679</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>3</td>\n",
              "      <td>2.627840220928192</td>\n",
              "      <td>2.9821196794509888</td>\n",
              "      <td>0.5024585798382759</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>531</td>\n",
              "      <td>Michail Antonio</td>\n",
              "      <td>3</td>\n",
              "      <td>247</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9052570015192032</td>\n",
              "      <td>0</td>\n",
              "      <td>0.15586480498313904</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9052570015192032</td>\n",
              "      <td>1.6813295632600784</td>\n",
              "      <td>0.6202077269554138</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>618</td>\n",
              "      <td>Raheem Sterling</td>\n",
              "      <td>3</td>\n",
              "      <td>268</td>\n",
              "      <td>2</td>\n",
              "      <td>1.3015881404280663</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6864727661013603</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>2</td>\n",
              "      <td>1.3015881404280663</td>\n",
              "      <td>2.863941490650177</td>\n",
              "      <td>1.1650180742144585</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>3</td>\n",
              "      <td>270</td>\n",
              "      <td>2</td>\n",
              "      <td>1.3066161274909973</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8080089539289474</td>\n",
              "      <td>11</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>1.3066161274909973</td>\n",
              "      <td>1.5868245959281921</td>\n",
              "      <td>0.35537485778331757</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>2496</td>\n",
              "      <td>Rodri</td>\n",
              "      <td>3</td>\n",
              "      <td>270</td>\n",
              "      <td>2</td>\n",
              "      <td>1.057547777891159</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5278989188373089</td>\n",
              "      <td>9</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2</td>\n",
              "      <td>1.057547777891159</td>\n",
              "      <td>3.7696669697761536</td>\n",
              "      <td>3.46992427110672</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>3</td>\n",
              "      <td>224</td>\n",
              "      <td>2</td>\n",
              "      <td>1.313307374715805</td>\n",
              "      <td>0</td>\n",
              "      <td>0.04466302692890167</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>2</td>\n",
              "      <td>1.313307374715805</td>\n",
              "      <td>1.3656214773654938</td>\n",
              "      <td>0.5321443229913712</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>5786</td>\n",
              "      <td>Yoane Wissa</td>\n",
              "      <td>3</td>\n",
              "      <td>254</td>\n",
              "      <td>2</td>\n",
              "      <td>1.5698162466287613</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07477104663848877</td>\n",
              "      <td>12</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>2</td>\n",
              "      <td>1.5698162466287613</td>\n",
              "      <td>0.8684456050395966</td>\n",
              "      <td>0.08360356092453003</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>6482</td>\n",
              "      <td>Eddie Nketiah</td>\n",
              "      <td>3</td>\n",
              "      <td>202</td>\n",
              "      <td>2</td>\n",
              "      <td>1.6614932417869568</td>\n",
              "      <td>0</td>\n",
              "      <td>0.16011278331279755</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>2</td>\n",
              "      <td>1.6614932417869568</td>\n",
              "      <td>1.9812424182891846</td>\n",
              "      <td>0.346959687769413</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>6556</td>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>3</td>\n",
              "      <td>239</td>\n",
              "      <td>2</td>\n",
              "      <td>0.7691009938716888</td>\n",
              "      <td>1</td>\n",
              "      <td>1.8064229488372803</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>0.7691009938716888</td>\n",
              "      <td>3.3147943019866943</td>\n",
              "      <td>1.8412092700600624</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>7322</td>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>3</td>\n",
              "      <td>270</td>\n",
              "      <td>2</td>\n",
              "      <td>1.8227379024028778</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7345314770936966</td>\n",
              "      <td>9</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0615691244602203</td>\n",
              "      <td>2.5287054777145386</td>\n",
              "      <td>1.1694485247135162</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>8864</td>\n",
              "      <td>Matthew Cash</td>\n",
              "      <td>3</td>\n",
              "      <td>270</td>\n",
              "      <td>2</td>\n",
              "      <td>2.0693803429603577</td>\n",
              "      <td>0</td>\n",
              "      <td>0.09815222769975662</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>2.0693803429603577</td>\n",
              "      <td>2.510700896382332</td>\n",
              "      <td>0.9015320464968681</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>10408</td>\n",
              "      <td>Luis D√≠az</td>\n",
              "      <td>3</td>\n",
              "      <td>206</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2460210025310516</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3413136154413223</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2460210025310516</td>\n",
              "      <td>1.4500691294670105</td>\n",
              "      <td>0.4201557785272598</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>10720</td>\n",
              "      <td>Darwin N√∫√±ez</td>\n",
              "      <td>3</td>\n",
              "      <td>27</td>\n",
              "      <td>2</td>\n",
              "      <td>0.39028404653072357</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>2</td>\n",
              "      <td>0.39028404653072357</td>\n",
              "      <td>0.4442247599363327</td>\n",
              "      <td>0.05394074320793152</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>239</td>\n",
              "      <td>Pascal Gro√ü</td>\n",
              "      <td>3</td>\n",
              "      <td>263</td>\n",
              "      <td>1</td>\n",
              "      <td>0.520846351981163</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1683019399642944</td>\n",
              "      <td>8</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>1</td>\n",
              "      <td>0.520846351981163</td>\n",
              "      <td>3.6678450107574463</td>\n",
              "      <td>2.8425965905189514</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>3</td>\n",
              "      <td>46</td>\n",
              "      <td>1</td>\n",
              "      <td>1.3336846008896828</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900330618023872</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1</td>\n",
              "      <td>1.3336846008896828</td>\n",
              "      <td>1.3495849315077066</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>646</td>\n",
              "      <td>Christian Eriksen</td>\n",
              "      <td>3</td>\n",
              "      <td>131</td>\n",
              "      <td>1</td>\n",
              "      <td>0.16082441806793213</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07433079183101654</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1</td>\n",
              "      <td>0.16082441806793213</td>\n",
              "      <td>1.2582217063754797</td>\n",
              "      <td>1.0230665039271116</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>843</td>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>1</td>\n",
              "      <td>1.061242589727044</td>\n",
              "      <td>2</td>\n",
              "      <td>0.44829946756362915</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>1</td>\n",
              "      <td>1.061242589727044</td>\n",
              "      <td>1.8744915947318077</td>\n",
              "      <td>0.8132488876581192</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows √ó 50 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b34aa28-a038-45a3-882b-05986d80e7dc')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8b34aa28-a038-45a3-882b-05986d80e7dc button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8b34aa28-a038-45a3-882b-05986d80e7dc');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-dba34936-eedc-43c4-8365-85bcf1b273c4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dba34936-eedc-43c4-8365-85bcf1b273c4')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-dba34936-eedc-43c4-8365-85bcf1b273c4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 182
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['assists'] = EPL_player_df['assists_1wks_x'].astype(int)\n",
        "top25assists = EPL_player_df.nlargest(20, 'assists')\n",
        "top25assists"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 952
        },
        "id": "QhNKarUM-fT7",
        "outputId": "f952ae55-1383-4eb0-a228-aaae93cdbf65"
      },
      "execution_count": 183,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id        player_name games_x time_x goals_1wks_x  \\\n",
              "19     843  James Ward-Prowse       2    180            1   \n",
              "22    1250      Mohamed Salah       3    264            1   \n",
              "29    5136          Estupi√±√°n       3    270            1   \n",
              "35    6818     James Maddison       3    258            1   \n",
              "58   10806       Kaoru Mitoma       3    263            1   \n",
              "93     672        Jordan Ayew       3    270            0   \n",
              "145   3600       Serge Aurier       3    270            0   \n",
              "176   6055         Phil Foden       3    181            0   \n",
              "257   8865      Ollie Watkins       3    262            0   \n",
              "263   9017         Malo Gusto       3    187            0   \n",
              "328  11058       Julio Enciso       2     70            0   \n",
              "6     1776       Jarrod Bowen       3    270            2   \n",
              "7     2496              Rodri       3    270            2   \n",
              "11    6556       Moussa Diaby       3    239            2   \n",
              "21    1228    Bruno Fernandes       3    270            1   \n",
              "23    1679    Dominic Solanke       3    270            1   \n",
              "30    5221        Leon Bailey       2    129            1   \n",
              "33    6681      Harvey Barnes       3     56            1   \n",
              "47    8150     Anthony Gordon       3    214            1   \n",
              "51    9021          Pape Sarr       3    147            1   \n",
              "\n",
              "                xG_1wks_x assists_1wks_x            xA_1wks_x shots_1wks_x  \\\n",
              "19      1.061242589727044              2  0.44829946756362915            4   \n",
              "22     2.2647229731082916              2   0.8167300522327423           10   \n",
              "29     0.6160032898187637              2   1.9120967164635658            5   \n",
              "35     1.3121316730976105              2    1.162118248641491            8   \n",
              "58     0.5480961315333843              2   1.6884272396564484            4   \n",
              "93     0.8302964419126511              2   0.9643377289175987           10   \n",
              "145  0.022981125861406326              2    0.566937267780304            1   \n",
              "176    0.5751295909285545              2    1.081766627728939            7   \n",
              "257    1.9173007905483246              2   1.1345418691635132            8   \n",
              "263    0.0372829083353281              2   0.6125726103782654            2   \n",
              "328    0.4382677674293518              2     1.22417414188385            4   \n",
              "6      1.3066161274909973              1   0.8080089539289474           11   \n",
              "7       1.057547777891159              1   0.5278989188373089            9   \n",
              "11     0.7691009938716888              1   1.8064229488372803            8   \n",
              "21      2.213971149176359              1    2.161566287279129           13   \n",
              "23     1.4379337057471275              1  0.19071850180625916            7   \n",
              "30     0.5992322564125061              1   0.6844462156295776            2   \n",
              "33     0.6232665050774813              1   1.1135693788528442            3   \n",
              "47     0.6771273016929626              1   1.0090163052082062            7   \n",
              "51     1.2308105379343033              1    0.547268558293581            7   \n",
              "\n",
              "    key_passes_1wks_x  ... yellow_cards red_cards position_y  \\\n",
              "19                  2  ...            1         0          M   \n",
              "22                  5  ...            0         0          F   \n",
              "29                 10  ...            2         0          D   \n",
              "35                  9  ...            1         0          M   \n",
              "58                 11  ...            2         0          M   \n",
              "93                  6  ...            1         0          M   \n",
              "145                 2  ...            2         0          D   \n",
              "176                11  ...            0         0        M S   \n",
              "257                 7  ...            0         0          F   \n",
              "263                 2  ...            0         0        D S   \n",
              "328                 2  ...            1         0        M S   \n",
              "6                   4  ...            1         0          M   \n",
              "7                   2  ...            0         0          M   \n",
              "11                  6  ...            0         0          M   \n",
              "21                 10  ...            2         0          M   \n",
              "23                  5  ...            0         0          F   \n",
              "30                  1  ...            0         0          M   \n",
              "33                  2  ...            1         0          S   \n",
              "47                  4  ...            2         0          F   \n",
              "51                  3  ...            0         0        M S   \n",
              "\n",
              "          team_title_y npg_1wks_y           npxG_1wks_y             xGChain  \\\n",
              "19            West Ham          1     1.061242589727044  1.8744915947318077   \n",
              "22           Liverpool          1    1.5035541355609894  1.7267902493476868   \n",
              "29            Brighton          1    0.6160032898187637    4.07448548078537   \n",
              "35           Tottenham          1    1.3121316730976105  3.4889546632766724   \n",
              "58            Brighton          1    0.5480961315333843  3.9357797503471375   \n",
              "93      Crystal Palace          0    0.8302964419126511  1.6072052419185638   \n",
              "145  Nottingham Forest          0  0.022981125861406326   1.259076088666916   \n",
              "176    Manchester City          0    0.5751295909285545   1.947220653295517   \n",
              "257        Aston Villa          0    1.9173007905483246   3.724563181400299   \n",
              "263            Chelsea          0    0.0372829083353281  1.4631098881363869   \n",
              "328           Brighton          0    0.4382677674293518   1.779298186302185   \n",
              "6             West Ham          2    1.3066161274909973  1.5868245959281921   \n",
              "7      Manchester City          2     1.057547777891159  3.7696669697761536   \n",
              "11         Aston Villa          2    0.7691009938716888  3.3147943019866943   \n",
              "21   Manchester United          0    1.4528022520244122   3.385380804538727   \n",
              "23         Bournemouth          1    1.4379337057471275  1.5579342544078827   \n",
              "30         Aston Villa          1    0.5992322564125061   1.595856636762619   \n",
              "33    Newcastle United          1    0.6232665050774813   1.830643281340599   \n",
              "47    Newcastle United          1    0.6771273016929626    2.18741537630558   \n",
              "51           Tottenham          1    1.2308105379343033  2.2228033393621445   \n",
              "\n",
              "               xGBuildup goals assists  \n",
              "19    0.8132488876581192     1       2  \n",
              "22   0.09460654854774475     1       2  \n",
              "29    3.2079558670520782     1       2  \n",
              "35    2.0459251701831818     1       2  \n",
              "58    2.3521739207208157     1       2  \n",
              "93    0.9391545951366425     0       2  \n",
              "145    0.692138809710741     0       2  \n",
              "176   1.0832310318946838     0       2  \n",
              "257   0.8166293278336525     0       2  \n",
              "263   1.3188425675034523     0       2  \n",
              "328  0.17649975419044495     0       2  \n",
              "6    0.35537485778331757     2       1  \n",
              "7       3.46992427110672     2       1  \n",
              "11    1.8412092700600624     2       1  \n",
              "21    1.7316634058952332     1       1  \n",
              "23                     0     1       1  \n",
              "30    0.4103304147720337     1       1  \n",
              "33    0.6867452822625637     1       1  \n",
              "47    1.3861766252666712     1       1  \n",
              "51    1.1914374977350235     1       1  \n",
              "\n",
              "[20 rows x 50 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d5424240-d9c9-4f3b-ad97-1884b89d78f0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>843</td>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>1</td>\n",
              "      <td>1.061242589727044</td>\n",
              "      <td>2</td>\n",
              "      <td>0.44829946756362915</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>1</td>\n",
              "      <td>1.061242589727044</td>\n",
              "      <td>1.8744915947318077</td>\n",
              "      <td>0.8132488876581192</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>3</td>\n",
              "      <td>264</td>\n",
              "      <td>1</td>\n",
              "      <td>2.2647229731082916</td>\n",
              "      <td>2</td>\n",
              "      <td>0.8167300522327423</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1</td>\n",
              "      <td>1.5035541355609894</td>\n",
              "      <td>1.7267902493476868</td>\n",
              "      <td>0.09460654854774475</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>5136</td>\n",
              "      <td>Estupi√±√°n</td>\n",
              "      <td>3</td>\n",
              "      <td>270</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6160032898187637</td>\n",
              "      <td>2</td>\n",
              "      <td>1.9120967164635658</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6160032898187637</td>\n",
              "      <td>4.07448548078537</td>\n",
              "      <td>3.2079558670520782</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>6818</td>\n",
              "      <td>James Maddison</td>\n",
              "      <td>3</td>\n",
              "      <td>258</td>\n",
              "      <td>1</td>\n",
              "      <td>1.3121316730976105</td>\n",
              "      <td>2</td>\n",
              "      <td>1.162118248641491</td>\n",
              "      <td>8</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1</td>\n",
              "      <td>1.3121316730976105</td>\n",
              "      <td>3.4889546632766724</td>\n",
              "      <td>2.0459251701831818</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>58</th>\n",
              "      <td>10806</td>\n",
              "      <td>Kaoru Mitoma</td>\n",
              "      <td>3</td>\n",
              "      <td>263</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5480961315333843</td>\n",
              "      <td>2</td>\n",
              "      <td>1.6884272396564484</td>\n",
              "      <td>4</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5480961315333843</td>\n",
              "      <td>3.9357797503471375</td>\n",
              "      <td>2.3521739207208157</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>672</td>\n",
              "      <td>Jordan Ayew</td>\n",
              "      <td>3</td>\n",
              "      <td>270</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8302964419126511</td>\n",
              "      <td>2</td>\n",
              "      <td>0.9643377289175987</td>\n",
              "      <td>10</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8302964419126511</td>\n",
              "      <td>1.6072052419185638</td>\n",
              "      <td>0.9391545951366425</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>145</th>\n",
              "      <td>3600</td>\n",
              "      <td>Serge Aurier</td>\n",
              "      <td>3</td>\n",
              "      <td>270</td>\n",
              "      <td>0</td>\n",
              "      <td>0.022981125861406326</td>\n",
              "      <td>2</td>\n",
              "      <td>0.566937267780304</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.022981125861406326</td>\n",
              "      <td>1.259076088666916</td>\n",
              "      <td>0.692138809710741</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>176</th>\n",
              "      <td>6055</td>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>3</td>\n",
              "      <td>181</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5751295909285545</td>\n",
              "      <td>2</td>\n",
              "      <td>1.081766627728939</td>\n",
              "      <td>7</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5751295909285545</td>\n",
              "      <td>1.947220653295517</td>\n",
              "      <td>1.0832310318946838</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>257</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>3</td>\n",
              "      <td>262</td>\n",
              "      <td>0</td>\n",
              "      <td>1.9173007905483246</td>\n",
              "      <td>2</td>\n",
              "      <td>1.1345418691635132</td>\n",
              "      <td>8</td>\n",
              "      <td>7</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0</td>\n",
              "      <td>1.9173007905483246</td>\n",
              "      <td>3.724563181400299</td>\n",
              "      <td>0.8166293278336525</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>263</th>\n",
              "      <td>9017</td>\n",
              "      <td>Malo Gusto</td>\n",
              "      <td>3</td>\n",
              "      <td>187</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0372829083353281</td>\n",
              "      <td>2</td>\n",
              "      <td>0.6125726103782654</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0372829083353281</td>\n",
              "      <td>1.4631098881363869</td>\n",
              "      <td>1.3188425675034523</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>328</th>\n",
              "      <td>11058</td>\n",
              "      <td>Julio Enciso</td>\n",
              "      <td>2</td>\n",
              "      <td>70</td>\n",
              "      <td>0</td>\n",
              "      <td>0.4382677674293518</td>\n",
              "      <td>2</td>\n",
              "      <td>1.22417414188385</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>0</td>\n",
              "      <td>0.4382677674293518</td>\n",
              "      <td>1.779298186302185</td>\n",
              "      <td>0.17649975419044495</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>3</td>\n",
              "      <td>270</td>\n",
              "      <td>2</td>\n",
              "      <td>1.3066161274909973</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8080089539289474</td>\n",
              "      <td>11</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>1.3066161274909973</td>\n",
              "      <td>1.5868245959281921</td>\n",
              "      <td>0.35537485778331757</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>2496</td>\n",
              "      <td>Rodri</td>\n",
              "      <td>3</td>\n",
              "      <td>270</td>\n",
              "      <td>2</td>\n",
              "      <td>1.057547777891159</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5278989188373089</td>\n",
              "      <td>9</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2</td>\n",
              "      <td>1.057547777891159</td>\n",
              "      <td>3.7696669697761536</td>\n",
              "      <td>3.46992427110672</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>6556</td>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>3</td>\n",
              "      <td>239</td>\n",
              "      <td>2</td>\n",
              "      <td>0.7691009938716888</td>\n",
              "      <td>1</td>\n",
              "      <td>1.8064229488372803</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>0.7691009938716888</td>\n",
              "      <td>3.3147943019866943</td>\n",
              "      <td>1.8412092700600624</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>1228</td>\n",
              "      <td>Bruno Fernandes</td>\n",
              "      <td>3</td>\n",
              "      <td>270</td>\n",
              "      <td>1</td>\n",
              "      <td>2.213971149176359</td>\n",
              "      <td>1</td>\n",
              "      <td>2.161566287279129</td>\n",
              "      <td>13</td>\n",
              "      <td>10</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0</td>\n",
              "      <td>1.4528022520244122</td>\n",
              "      <td>3.385380804538727</td>\n",
              "      <td>1.7316634058952332</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>3</td>\n",
              "      <td>270</td>\n",
              "      <td>1</td>\n",
              "      <td>1.4379337057471275</td>\n",
              "      <td>1</td>\n",
              "      <td>0.19071850180625916</td>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1</td>\n",
              "      <td>1.4379337057471275</td>\n",
              "      <td>1.5579342544078827</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>5221</td>\n",
              "      <td>Leon Bailey</td>\n",
              "      <td>2</td>\n",
              "      <td>129</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5992322564125061</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6844462156295776</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5992322564125061</td>\n",
              "      <td>1.595856636762619</td>\n",
              "      <td>0.4103304147720337</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>6681</td>\n",
              "      <td>Harvey Barnes</td>\n",
              "      <td>3</td>\n",
              "      <td>56</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6232665050774813</td>\n",
              "      <td>1</td>\n",
              "      <td>1.1135693788528442</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6232665050774813</td>\n",
              "      <td>1.830643281340599</td>\n",
              "      <td>0.6867452822625637</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>8150</td>\n",
              "      <td>Anthony Gordon</td>\n",
              "      <td>3</td>\n",
              "      <td>214</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6771273016929626</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0090163052082062</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6771273016929626</td>\n",
              "      <td>2.18741537630558</td>\n",
              "      <td>1.3861766252666712</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>9021</td>\n",
              "      <td>Pape Sarr</td>\n",
              "      <td>3</td>\n",
              "      <td>147</td>\n",
              "      <td>1</td>\n",
              "      <td>1.2308105379343033</td>\n",
              "      <td>1</td>\n",
              "      <td>0.547268558293581</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1</td>\n",
              "      <td>1.2308105379343033</td>\n",
              "      <td>2.2228033393621445</td>\n",
              "      <td>1.1914374977350235</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows √ó 50 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d5424240-d9c9-4f3b-ad97-1884b89d78f0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d5424240-d9c9-4f3b-ad97-1884b89d78f0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d5424240-d9c9-4f3b-ad97-1884b89d78f0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e2dc9b65-3582-4014-9611-ad7787642ed5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e2dc9b65-3582-4014-9611-ad7787642ed5')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e2dc9b65-3582-4014-9611-ad7787642ed5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 183
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import plotly.graph_objects as go"
      ],
      "metadata": {
        "id": "t81EQEbg_2jQ"
      },
      "execution_count": 184,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig3= go.Figure()\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"goals\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'goals'))\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"xG_1wks_x\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xG'))\n",
        "for i in range(0, len(top25goals)):\n",
        "               fig3.add_shape(type='line',\n",
        "                              x0 = top25goals[\"goals\"][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top25goals[\"xG_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig3.update_layout(title_text =\n",
        "                    \"Goals vs xG\",\n",
        "                    title_font_size = 30)\n",
        "fig3.update_xaxes(range=[0, 30])\n",
        "fig3.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "pCjmRmyw-6sd",
        "outputId": "70958161-9eb3-4d2e-f39f-0d448b54587a"
      },
      "execution_count": 185,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"ad341cc5-f35b-4862-8a2b-fb0c67e6e904\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"ad341cc5-f35b-4862-8a2b-fb0c67e6e904\")) {                    Plotly.newPlot(                        \"ad341cc5-f35b-4862-8a2b-fb0c67e6e904\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"goals\",\"x\":[3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1],\"y\":[\"Solly March\",\"Bryan Mbeumo\",\"Taiwo Awoniyi\",\"Erling Haaland\",\"Michail Antonio\",\"Raheem Sterling\",\"Jarrod Bowen\",\"Rodri\",\"Alexander Isak\",\"Yoane Wissa\",\"Eddie Nketiah\",\"Moussa Diaby\",\"Bukayo Saka\",\"Matthew Cash\",\"Luis D\\u00edaz\",\"Darwin N\\u00fa\\u00f1ez\",\"Pascal Gro\\u00df\",\"Callum Wilson\",\"Christian Eriksen\",\"James Ward-Prowse\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xG\",\"x\":[\"2.1514047384262085\",\"3.051823675632477\",\"1.666745364665985\",\"3.3890090584754944\",\"0.9052570015192032\",\"1.3015881404280663\",\"1.3066161274909973\",\"1.057547777891159\",\"1.313307374715805\",\"1.5698162466287613\",\"1.6614932417869568\",\"0.7691009938716888\",\"1.8227379024028778\",\"2.0693803429603577\",\"1.2460210025310516\",\"0.39028404653072357\",\"0.520846351981163\",\"1.3336846008896828\",\"0.16082441806793213\",\"1.061242589727044\"],\"y\":[\"Solly March\",\"Bryan Mbeumo\",\"Taiwo Awoniyi\",\"Erling Haaland\",\"Michail Antonio\",\"Raheem Sterling\",\"Jarrod Bowen\",\"Rodri\",\"Alexander Isak\",\"Yoane Wissa\",\"Eddie Nketiah\",\"Moussa Diaby\",\"Bukayo Saka\",\"Matthew Cash\",\"Luis D\\u00edaz\",\"Darwin N\\u00fa\\u00f1ez\",\"Pascal Gro\\u00df\",\"Callum Wilson\",\"Christian Eriksen\",\"James Ward-Prowse\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.1514047384262085\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"3.051823675632477\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"1.666745364665985\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"3.3890090584754944\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.9052570015192032\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.3015881404280663\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.3066161274909973\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.057547777891159\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.313307374715805\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.5698162466287613\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.6614932417869568\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.7691009938716888\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.8227379024028778\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"2.0693803429603577\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.2460210025310516\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.39028404653072357\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"0.520846351981163\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"1.3336846008896828\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"0.16082441806793213\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"1.061242589727044\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":30},\"text\":\"Goals vs xG\"},\"xaxis\":{\"range\":[0,30]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('ad341cc5-f35b-4862-8a2b-fb0c67e6e904');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])"
      ],
      "metadata": {
        "id": "zxhwefRPFQDN"
      },
      "execution_count": 186,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "top25assists.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wSmCXk6YFSz5",
        "outputId": "7a1a893f-14ab-4572-8338-7100c666b245"
      },
      "execution_count": 187,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['id', 'player_name', 'games_x', 'time_x', 'goals_1wks_x', 'xG_1wks_x',\n",
              "       'assists_1wks_x', 'xA_1wks_x', 'shots_1wks_x', 'key_passes_1wks_x',\n",
              "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
              "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
              "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
              "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
              "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
              "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
              "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
              "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
              "       'xGBuildup', 'goals', 'assists'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 187
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "top20assists = top25assists.drop(columns=[ 'shots_1wks_x', 'key_passes_1wks_x',\n",
        "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
        "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
        "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
        "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
        "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
        "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
        "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
        "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
        "       'xGBuildup', 'assists_1wks_x', 'games_x', 'time_x', 'goals_1wks_x', 'id' ])\n",
        "\n",
        "top20assists.reset_index(inplace = True,drop = True)\n",
        "top20assists"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "_Xn659fiFXvb",
        "outputId": "2180356b-e1dd-4587-8090-31f15ff30c10"
      },
      "execution_count": 188,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          player_name             xG_1wks_x            xA_1wks_x  goals  \\\n",
              "0   James Ward-Prowse     1.061242589727044  0.44829946756362915      1   \n",
              "1       Mohamed Salah    2.2647229731082916   0.8167300522327423      1   \n",
              "2           Estupi√±√°n    0.6160032898187637   1.9120967164635658      1   \n",
              "3      James Maddison    1.3121316730976105    1.162118248641491      1   \n",
              "4        Kaoru Mitoma    0.5480961315333843   1.6884272396564484      1   \n",
              "5         Jordan Ayew    0.8302964419126511   0.9643377289175987      0   \n",
              "6        Serge Aurier  0.022981125861406326    0.566937267780304      0   \n",
              "7          Phil Foden    0.5751295909285545    1.081766627728939      0   \n",
              "8       Ollie Watkins    1.9173007905483246   1.1345418691635132      0   \n",
              "9          Malo Gusto    0.0372829083353281   0.6125726103782654      0   \n",
              "10       Julio Enciso    0.4382677674293518     1.22417414188385      0   \n",
              "11       Jarrod Bowen    1.3066161274909973   0.8080089539289474      2   \n",
              "12              Rodri     1.057547777891159   0.5278989188373089      2   \n",
              "13       Moussa Diaby    0.7691009938716888   1.8064229488372803      2   \n",
              "14    Bruno Fernandes     2.213971149176359    2.161566287279129      1   \n",
              "15    Dominic Solanke    1.4379337057471275  0.19071850180625916      1   \n",
              "16        Leon Bailey    0.5992322564125061   0.6844462156295776      1   \n",
              "17      Harvey Barnes    0.6232665050774813   1.1135693788528442      1   \n",
              "18     Anthony Gordon    0.6771273016929626   1.0090163052082062      1   \n",
              "19          Pape Sarr    1.2308105379343033    0.547268558293581      1   \n",
              "\n",
              "    assists  \n",
              "0         2  \n",
              "1         2  \n",
              "2         2  \n",
              "3         2  \n",
              "4         2  \n",
              "5         2  \n",
              "6         2  \n",
              "7         2  \n",
              "8         2  \n",
              "9         2  \n",
              "10        2  \n",
              "11        1  \n",
              "12        1  \n",
              "13        1  \n",
              "14        1  \n",
              "15        1  \n",
              "16        1  \n",
              "17        1  \n",
              "18        1  \n",
              "19        1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bafdfb23-7c1d-4a6b-98e1-70a0de512329\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>player_name</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>1.061242589727044</td>\n",
              "      <td>0.44829946756362915</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>2.2647229731082916</td>\n",
              "      <td>0.8167300522327423</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Estupi√±√°n</td>\n",
              "      <td>0.6160032898187637</td>\n",
              "      <td>1.9120967164635658</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>James Maddison</td>\n",
              "      <td>1.3121316730976105</td>\n",
              "      <td>1.162118248641491</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Kaoru Mitoma</td>\n",
              "      <td>0.5480961315333843</td>\n",
              "      <td>1.6884272396564484</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Jordan Ayew</td>\n",
              "      <td>0.8302964419126511</td>\n",
              "      <td>0.9643377289175987</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Serge Aurier</td>\n",
              "      <td>0.022981125861406326</td>\n",
              "      <td>0.566937267780304</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>0.5751295909285545</td>\n",
              "      <td>1.081766627728939</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>1.9173007905483246</td>\n",
              "      <td>1.1345418691635132</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Malo Gusto</td>\n",
              "      <td>0.0372829083353281</td>\n",
              "      <td>0.6125726103782654</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Julio Enciso</td>\n",
              "      <td>0.4382677674293518</td>\n",
              "      <td>1.22417414188385</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>1.3066161274909973</td>\n",
              "      <td>0.8080089539289474</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Rodri</td>\n",
              "      <td>1.057547777891159</td>\n",
              "      <td>0.5278989188373089</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>0.7691009938716888</td>\n",
              "      <td>1.8064229488372803</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Bruno Fernandes</td>\n",
              "      <td>2.213971149176359</td>\n",
              "      <td>2.161566287279129</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>1.4379337057471275</td>\n",
              "      <td>0.19071850180625916</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Leon Bailey</td>\n",
              "      <td>0.5992322564125061</td>\n",
              "      <td>0.6844462156295776</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Harvey Barnes</td>\n",
              "      <td>0.6232665050774813</td>\n",
              "      <td>1.1135693788528442</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Anthony Gordon</td>\n",
              "      <td>0.6771273016929626</td>\n",
              "      <td>1.0090163052082062</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Pape Sarr</td>\n",
              "      <td>1.2308105379343033</td>\n",
              "      <td>0.547268558293581</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bafdfb23-7c1d-4a6b-98e1-70a0de512329')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bafdfb23-7c1d-4a6b-98e1-70a0de512329 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bafdfb23-7c1d-4a6b-98e1-70a0de512329');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8c98006b-0599-4a63-8d26-df8e42ddcaa2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8c98006b-0599-4a63-8d26-df8e42ddcaa2')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8c98006b-0599-4a63-8d26-df8e42ddcaa2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 188
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig4= go.Figure()\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"assists\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'assists'))\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"xA_1wks_x\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xA'))\n",
        "for i in range(0, len(top20assists)):\n",
        "               fig4.add_shape(type='line',\n",
        "                              x0 = top20assists['assists'][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top20assists[\"xA_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig4.update_layout(title_text =\n",
        "                    \"assists vs xG\",\n",
        "                    title_font_size = 15)\n",
        "fig4.update_xaxes(range=[0, 15])\n",
        "fig4.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "P6oVjqCSF4Pw",
        "outputId": "95115147-1931-4cfb-8065-187ba99edd66"
      },
      "execution_count": 189,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"8420b9a7-694c-48be-b581-50cf342407f8\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"8420b9a7-694c-48be-b581-50cf342407f8\")) {                    Plotly.newPlot(                        \"8420b9a7-694c-48be-b581-50cf342407f8\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"assists\",\"x\":[2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1],\"y\":[\"James Ward-Prowse\",\"Mohamed Salah\",\"Estupi\\u00f1\\u00e1n\",\"James Maddison\",\"Kaoru Mitoma\",\"Jordan Ayew\",\"Serge Aurier\",\"Phil Foden\",\"Ollie Watkins\",\"Malo Gusto\",\"Julio Enciso\",\"Jarrod Bowen\",\"Rodri\",\"Moussa Diaby\",\"Bruno Fernandes\",\"Dominic Solanke\",\"Leon Bailey\",\"Harvey Barnes\",\"Anthony Gordon\",\"Pape Sarr\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xA\",\"x\":[\"0.44829946756362915\",\"0.8167300522327423\",\"1.9120967164635658\",\"1.162118248641491\",\"1.6884272396564484\",\"0.9643377289175987\",\"0.566937267780304\",\"1.081766627728939\",\"1.1345418691635132\",\"0.6125726103782654\",\"1.22417414188385\",\"0.8080089539289474\",\"0.5278989188373089\",\"1.8064229488372803\",\"2.161566287279129\",\"0.19071850180625916\",\"0.6844462156295776\",\"1.1135693788528442\",\"1.0090163052082062\",\"0.547268558293581\"],\"y\":[\"James Ward-Prowse\",\"Mohamed Salah\",\"Estupi\\u00f1\\u00e1n\",\"James Maddison\",\"Kaoru Mitoma\",\"Jordan Ayew\",\"Serge Aurier\",\"Phil Foden\",\"Ollie Watkins\",\"Malo Gusto\",\"Julio Enciso\",\"Jarrod Bowen\",\"Rodri\",\"Moussa Diaby\",\"Bruno Fernandes\",\"Dominic Solanke\",\"Leon Bailey\",\"Harvey Barnes\",\"Anthony Gordon\",\"Pape Sarr\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.44829946756362915\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.8167300522327423\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.9120967164635658\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.162118248641491\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.6884272396564484\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.9643377289175987\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.566937267780304\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.081766627728939\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.1345418691635132\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"0.6125726103782654\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.22417414188385\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"0.8080089539289474\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"0.5278989188373089\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"1.8064229488372803\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"2.161566287279129\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"0.19071850180625916\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"0.6844462156295776\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"1.1135693788528442\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"1.0090163052082062\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"0.547268558293581\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":15},\"text\":\"assists vs xG\"},\"xaxis\":{\"range\":[0,15]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('8420b9a7-694c-48be-b581-50cf342407f8');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Plotting the bar charts\n",
        "plt.figure(figsize=(12, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.subplot(131)\n",
        "plt.bar(midfielders['name'][:10], midfielders['5GW Total'][:10])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Forwards chart\n",
        "plt.subplot(132)\n",
        "plt.bar(forwards['name'][:10], forwards['5GW Total'][:10])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Defenders chart\n",
        "plt.subplot(133)\n",
        "plt.bar(defenders['name'][:10], defenders['5GW Total'][:10])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "FN06IYwSKGLw",
        "outputId": "70a5f28c-34c7-4614-cca7-05043244a967",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 601
        }
      },
      "execution_count": 190,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Create a list of colors for each chart\n",
        "colors = ['blue', 'green', 'red']\n",
        "\n",
        "# Plotting the horizontal bar charts with different colors\n",
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.barh(midfielders['name'][:10], midfielders['5GW Total'][:10], color=colors[0])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Forwards chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(forwards['name'][:10], forwards['5GW Total'][:10], color=colors[1])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Defenders chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(defenders['name'][:10], defenders['5GW Total'][:10], color=colors[2])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "VSYcUse-SrV-",
        "outputId": "7625aea3-eeb8-4bc9-d8e6-89d5fdbf691b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "execution_count": 191,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA4YAAAIsCAYAAACug7cxAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABu6klEQVR4nO3de3zP9f//8ft7B2x4Y445i8wwdnCa05wip3Ty4ROjKMQ+lajPREoqSkJzCCVySkdhoqIolWSTQhKVz5xz2Mxstvf7/fvDb+9vbxtm28t7e79u18vF5eL9ej1fr/fj9fA277vX8/V6WRwOh0MAAAAAANPycncBAAAAAAD3IhgCAAAAgMkRDAEAAADA5AiGAAAAAGByBEMAAAAAMDmCIQAAAACYHMEQAAAAAEyOYAgAAAAAJkcwBAAAAACTIxgCAEzpo48+UmBgoBITE687tlOnToqJiXFZ9ueff2rIkCEKDw9XYGCgvvjiixva55ViY2MVGBiYq7GBgYGKjY294fcwQtYx//zzz+4uBVeRn88lAPPwcXcBAICCk9tg8c4776hly5aG1rJixQp9//332r17t44dO6a7775bU6dOzXFscnKypk2bps8//1xpaWkKDg5WTEyMGjVqdN33iYqK0g8//KBatWrps88+y7Z+27ZtGjJkiCRp1qxZuuOOO/J3YP9fTEyMEhMTNXr0aJUuXVqNGzfWt99+WyD7RnaxsbGaPXt2tuXFihXLMZSmpKRo6dKl+vzzz/XXX38pPT1dFStWVNOmTXXXXXepQ4cOkqTdu3erb9++GjdunB544AGXfTzyyCPavHmzXnrpJd17770u6wYMGKDDhw/r66+/zvbeiYmJ6ty5c66Oa9OmTapevfpV11+8eFFvvvmmWrRoYfjfWQDmRjAEAA/yyiuvuLz+5JNPtG3btmzL69ata3gtb775pi5cuKDg4GCdOnXqquPsdruGDRum/fv3a+jQoSpXrpxWrFihqKgoffTRR6pdu/Z136t48eL666+/tHv3bjVp0sRl3dq1a1W8eHGlp6e7LO/Tp4969uypYsWK3fCxpaWlKSEhQSNGjNDAgQMLZJ/Ineeee07+/v7O197e3tnG/PXXXxo6dKiOHj2qLl266K677pK/v7+OHz+uLVu2aPjw4Xr55Zd11113qWHDhvLz89POnTuzBcOEhAT5+PgoPj7eJRheunRJP//8szp27JhjjQEBAdn+zr399ts6fvy4xo0bl23stVy8eFGzZ89WdHQ0wRCAoQiGAOBB+vTp4/L6p59+0rZt27ItvxmWLl2qqlWrymKxKDQ09KrjNmzYoISEBJezed27d1e3bt0UGxur6dOnX/e9atasqczMTK1bt84lGKanp+vzzz9Xhw4dtHHjRpdtvL29cwwVuXHmzBlJktVqLbB9ukt6erp8fX3l5VU0ri7p1q3bNcNUZmamoqOjdfr0aS1dulTh4eEu66Ojo/XNN9/IZrNJknx8fNSkSRPFx8e7jDt06JDOnj2rXr16aefOnS7r9uzZo/T09Gz7zuLv75/t79z69euVnJzslr+LAJAbReNfAQBAgUlNTdXUqVMVGRmpxo0bq1u3bnrrrbfkcDhcxgUGBur555/XmjVr1K1bNwUHB+uee+7Rjh07cvU+1apVk8Viue64jRs3qkKFCuratatzWUBAgLp3765Nmzbp0qVLuXq/Xr16af369bLb7c5lmzdvVlpaWo7TR3O67srhcGju3Llq3769mjZtqqioKB04cMBlu9jYWOeZoldeeUWBgYHq1KnTVfcpSVu2bNH999+vkJAQhYaGatiwYdn2m5NLly7ppZdeUqtWrRQaGqoRI0bo+PHjOY49ceKExo0bp9atW6tx48bq2bOnPvjgA5cx27dvV2BgoOLi4jRjxgy1a9dOTZs2VUpKijIyMjR79mx17dpVwcHBatmypf79739r27Zt161TunwWdeLEiWrZsqXCwsL01FNPKSkpybn+v//9r1q2bKmMjIxs2w4ZMkTdunXL1ftIl6eJXvl5zbJhwwb99ttveuSRR64a3Nq2bavIyEjn6/DwcP3999/666+/nMvi4+NVqlQp9evXT3/88YfzPwOy1mVtlx+nT5/W008/rdatWys4OFh33nmnPv74Y+f6xMRERURESJJmz56twMBAl+tLf/31V8XExKhz584KDg5WmzZtNG7cOJ09ezZfdQEwJ84YAoCJOBwOPfLII9q+fbvuu+8+BQUF6euvv9Yrr7yiEydO6Omnn3YZv2PHDq1fv15RUVEqVqyYVq5cqYceekjvv/++6tevXyA17du3Tw0bNsx2xio4OFirVq3SH3/8katrJ3v16qXY2Fht377d+WV63bp1atWqlcqXL5+rWmbNmqV58+YpMjJSkZGR2rNnj4YMGeISZm6//XaVLl1aU6ZMUa9evdS+fXuVLFnyqvtcvXq1YmJi1LZtW40dO1YXL17UypUrdf/99+vjjz++5vVl48eP15o1a9SrVy+FhYXp+++/17Bhw7KN+/vvv/Wvf/1LFotFAwYMUEBAgLZu3arx48crJSUl2xTJuXPnytfXV0OHDtWlS5fk6+ur2bNna/78+erbt6+aNGmilJQU/fLLL9qzZ4/atGlz3d49//zzslqtio6O1h9//KGVK1fq6NGjWrp0qSwWi/r06aPVq1frm2++cZmCeerUKX3//fcaNWrUdd9Dkjp37qzU1FT5+/urc+fOiomJUYUKFZzrv/zyS0nZz55fS1bA27lzp2rVqiXpcvgLCQlR06ZN5evrq4SEBOd1g/Hx8SpZsqQaNGiQ6/e4UlpamqKionT48GENGDBA1atX14YNGxQTE6Pk5GQNHjxYAQEBeu655/Tcc8/p9ttv1+233y7p/64l/vbbb/W///1P99xzjypWrKgDBw7ovffe0++//6733nsvV/8xAwBZCIYAYCKbNm3S999/r8cff1yPPPKIpMs30Xj00Uf1zjvvaODAgapZs6Zz/G+//aYPP/xQjRs3liT17NlTd9xxh15//fUcbwSSF6dOnVKzZs2yLa9UqZIk6eTJk7kKhrVr11bjxo21bt06RUREKDk5WVu2bNELL7yQqzrOnDmjN998Ux06dNAbb7zh/FI9Y8YMvfHGG85xDRo0UKlSpTRlyhQ1bNjwmgHkwoULevHFF9W3b19NnjzZufzuu+/WHXfcofnz57ss/6dff/1Va9as0f33369nn31W0uU/qzFjxmj//v0uY2fMmCGbzaa1a9eqXLlykqR///vfeuKJJzR79mz1799fJUqUcI5PT0/Xhx9+6LLsq6++UmRk5FXruR5fX18tXrxYvr6+kqSqVatq2rRp2rx5szp37qxWrVqpSpUqWrNmjUswjIuLk91u15133nnN/VutVg0cOFAhISEqVqyYfvzxR61YsUI///yzPvzwQ5UqVUrS5SmgVqtVlStXdtk+NTVVaWlpztfFihVzbhMSEiJvb2/t3LlT99xzj6TL4a9Xr14qXry4goKCtHPnTpdgmLVNXq1atUoHDx7UtGnTnMfev39/RUVFaebMmbr33ntVqlQpdevWTc8995wCAwOzfdbuv/9+542VsoSEhOiJJ57Qzp07c/x7BQBXw1RSADCRrVu3ytvbW1FRUS7LhwwZIofDoa1bt7osDw0NdYZC6fKX/c6dO7tco5VfaWlpOd6sJWvZlTeNuZbevXvr888/16VLl7Rx40Z5e3urS5cuudr222+/VUZGhgYOHOhypmXw4MG5fv+c9pmcnKyePXvqzJkzzl9eXl5q2rSptm/fftVtt2zZIknZ/qyurMfhcOizzz5Tp06d5HA4XN6nbdu2On/+vPbs2eOyzV133eUSCqXLwevAgQP6888/83Ss/fr1c4ZC6XIw9fHxcR6Hl5eXevfurc2bNyslJcU5bs2aNQoNDVWNGjWuuf/BgwfrmWeeUe/evdWtWzeNHz9eU6dO1Z9//qkVK1Y4x6WkpLjcnCbLjBkzFBER4fw1ZswY57pSpUopMDDQeS3hmTNn9McffygsLEySFBYW5pw+mjWtNGtdXm3dulUVK1ZUr169nMt8fX0VFRWl1NTUXE3ZvjLsnzlzRk2bNpWkbH/mAHA9nDEEABM5cuSIKlWq5DxTkiXrLqVHjhxxWZ41re6fateurYsXL+rMmTOqWLFivmsqUaJEjtcRZi0rXrx4rvfVo0cPvfzyy9q6davWrFmjDh06ZDvWqzl69KgkZbsLakBAgMqUKZPrGv4pK2RdLVxeq7YjR47Iy8vL5QyuJN16660ur8+cOaPk5GStWrVKq1atynFf/7w+TlKO01cfffRRjRw5Ut26dVP9+vXVtm1b9enTJ9fTJa/8rJQsWVIVK1Z0+UzdddddWrhwob744gvdddddOnTokPbs2aNJkybl6j2u1Lt3b7388sv69ttvnVNsS5YsqXPnzmUbe//99zvPVD755JPZ1oeHh2vp0qU6c+aMEhIS5O3t7QxZoaGhWrFihS5dulRg1xceOXJEtWrVyjaFOuvvYtbn8VrOnTun2bNna/369Tp9+rTLuvPnz+erPgDmQzAEALhVxYoVc3ycxcmTJyX935TS3KhUqZJatGiht99+W/Hx8W5/CHzWDVJeeeWVHEN0QdzBNOtmO3feeafuvvvuHMdcORX3yrOFktS8eXN9/vnn2rRpk7Zt26YPPvhAS5Ys0aRJk9S3b9981ylJ9erVU6NGjbRmzRrdddddWrNmjXx9fdW9e/c877NKlSouN7m59dZbtW/fPp04ccJlOmmdOnVUp04dSTn/Z0NYWJiWLl2q+Ph4JSQkqH79+s5rR0NDQ3Xp0iXt3r1bO3fulI+Pj0JCQvJcc0F5/PHHlZCQoKFDhyooKEj+/v6y2+166KGHrnpzHgC4GoIhAJhItWrV9N133yklJcXlbNWhQ4ec6//pn3dpzPLnn3/Kz8/vus9fy60GDRpo586dstvtLmdPdu/eLT8/P+eX+dzq1auXJkyYIKvVqvbt2+d6u6pVq0q6fHz/nNZ45swZl+BxI7L2U758ebVu3fqGtq1WrZrsdrsOHz7scpYw688qS0BAgEqWLCm73X7D73GlsmXL6t5779W9996rCxcuaODAgYqNjc1VMPzrr7/UqlUr5+sLFy7o1KlT2f4M7rrrLk2dOlUnT57UunXr1KFDhzyfkXU4HDpy5IgaNmzoXNahQwfFxcVpzZo1evjhh3O9r3/egGbXrl0uU0UrV66satWqKT4+XvHx8QoKCpKfn1+eas5SrVo17d+/P9vnPuvPN+vzeLUbyCQlJem7777Tf/7zH0VHRzuX53UqMABwjSEAmEj79u1ls9m0fPlyl+WLFy+WxWLJ9iU+ISHB5VqlY8eOadOmTWrTpk2BPa/vjjvu0N9//63PPvvMuezMmTPasGGDOnbseMMPi7/jjjsUHR2tZ5999oa2bd26tXx9fbVs2TKXsy1Lliy5off/p3bt2qlUqVKaP39+jo9puHKK5z9l/VksXbrUZfmV9Xh7e6tbt27auHGjfvvttxt6j3+68hEHJUuWVM2aNXP9uJBVq1a5HOPKlSuVmZmZ7TPVq1cvWSwWvfjii/rf//533ZvOZMnpOFasWKEzZ86oXbt2zmXdu3dXvXr1NHfuXO3atSvHfeV0Nq1y5cqqXr26vv/+e/3yyy/Znr0ZGhqqTZs26Y8//sj3NFLp8p/vqVOntH79eueyzMxMLV26VP7+/mrevLkkOQNocnKyy/ZX+/uXn88rAHPjjCEAmEinTp3UsmVLzZgxQ0eOHFFgYKC2bdumTZs2afDgwdmuZ6tfv76GDh3q8rgKSfrPf/5z3ffavHmzfv31V0lSRkaG9u/fr7lz5zrryLp2rVu3bgoJCdG4ceP0+++/q1y5clq5cqVsNluu3udKpUuXztN2AQEBGjJkiObPn6/hw4crMjJSe/fu1datW513+rxRpUqV0nPPPaennnpK99xzj3r06KGAgAAdPXpUW7ZsUVhYmCZOnJjjtkFBQerVq5dWrFih8+fPKzQ0VN9//32OZ3HHjBmj7du361//+pf69u2revXqKSkpSXv27NF3332nH3744bq19uzZUy1atFCjRo1UtmxZ/fzzz9q4caMGDhyYq2PNyMjQAw88oO7du+uPP/7QihUrFB4e7ryTZ5aAgAC1a9dOGzZskNVqVYcOHXK1/44dO6pHjx6qX7++ihUrpvj4eMXFxSkoKEj9+vVzjst69MbQoUN1//336/bbb1ezZs3k5+enEydOaPPmzTp69KjLcwyzhIeH65NPPpGkbDeXCQ0N1bp165zj8qtfv35atWqVYmJitGfPHlWrVk0bN25UfHy8nn76aecZ/RIlSqhevXr69NNPVbt2bZUtW1a33Xab6tevr+bNm+vNN99URkaGKleurG3btmV7hiYA5BbBEABMxMvLS/PmzdPrr7+u9evX66OPPlK1atX01FNPZbvtvXT5urOQkBDNmTNHR48eVb169TRlypRc3ZDks88+c3lY9969e7V3715Jl68Ly9qHt7e3FixYoFdeeUVLly5Venq6goODNWXKlGw3WjHa448/rmLFiundd9/V9u3b1aRJEy1atEjDhw/P8z579+6tSpUqacGCBXrrrbd06dIlVa5cWc2aNXM+GuFqXnrpJZUrV05r167Vpk2b1LJlSy1YsCBbqKlQoYLef/99zZkzR59//rlWrlypsmXLql69eho7dmyu6oyKitLmzZu1bds2Xbp0SVWrVtXjjz+uoUOH5mr7iRMnau3atXr99deVkZGhnj17asKECTlOhezTp4++/PJLde/ePddndXv37q2EhARt3LjRWd9DDz2kESNGZJvWWadOHX3yySd655139MUXX2jr1q3KyMhQhQoV1KRJE0VHR7s8MiNLVjDMmjr6T/8MigURDEuUKKGlS5fq1Vdf1ccff6yUlBTVqVNHU6ZMyfa5eOGFFzR58mRNmTJFGRkZio6OVv369TV9+nRNnjxZK1askMPhUJs2bbRw4UKXM6gAkFsWB1cnAwByEBgYqAEDBlz1jBaQV1988YVGjRql5cuX86w9ACgkuMYQAADcVO+//75q1KhRIGfeAAAFg6mkAADgpoiLi9P+/fv11Vdfafz48Ve94yYA4OYjGAIAgJviiSeekL+/v+677z7df//97i4HAPAPXGMIAAAAACbHNYYAAAAAYHIEQwAAAAAwOYIhAAAAAJgcN5/xUA6HQ3Y7l48awcvLQm8NQm+NQ2+NQV+NQ2+NQ2+NQ2+NQ2/zzsvLkqu7QBMMPZTFYlFycqoyM+3uLsWj+Ph4qVy5kvTWAPTWOPTWGPTVOPTWOPTWOPTWOPQ2fwICSsrb+/rBkKmkAAAAAGByBEMAAAAAMDmCIQAAAACYHMEQAAAAAEyOYAgAAAAAJkcwBAAAAACTIxgCAAAAgMkRDAEAAADA5AiGAAAAAGByBEMAAAAAMDmCIQAAAACYHMEQAAAAAEyOYAgAAAAAJkcwBAAAAACTIxgCAAAAgMkRDAEAAADA5AiGAAAAAGByBEMAAAAAMDkfdxcA43h7k/sLWlZP6W3Bo7fGobfGoK/GobfGobfGobfGKWq9tdsdstsd7i7jhlkcDkfRqxrX5XBIFou7qwAAAADMJTPToaSkC4UmHAYElMxVqOaMoYeyWKQBA6R9+9xdCQAAAGAOQUHS8uUWeXlZCk0wzC2CoQfbt09KSHB3FQAAAAAKu6IxURcAAAAAYBiCIQAAAACYHMEQAAAAAEyOYAgAAAAAJkcwBAAAAACTIxgCAAAAgMkRDAEAAADA5AiGAAAAAGByhT4YxsbGKjAwUO3atZPdbs+2vn///goMDFRMTIxzfGho6M0uEwAAAACKrEIfDCXJ19dXZ8+e1Y4dO1yWHzlyRLt27ZK/v7+bKgMAAACAoq/IBMP27dsrLi7OZXlcXJxuu+021axZ002VAQAAAEDRVySCoST16tVLGzduVEZGhnPZunXr1KtXrxzH7969W/fdd5+Cg4PVvXt3ffnll9nGfPXVV+rbt6+aNGmiVq1a6dlnn1Vqaqpz/UcffaTAwECdOXPGZbs+ffo4p65KUkxMjHr16qVvv/1WvXv3VpMmTTRw4EAlJibq3LlzeuyxxxQWFqYuXbpo/fr12ep499131a1bNzVu3FidOnXS3Llzc5w2CwAAAABGKDLBsGPHjrp06ZK2bdsmSfr999+1f/9+9ejRI9vYjIwMjR49Wnfffbdmz56tWrVqKTo6Wvv373eO2bBhgx555BHVr19fs2fP1pNPPqnPP/9c48ePz1N9p06d0tSpU/XII4/o1Vdf1eHDhzV27FiNHj1a9evXV2xsrBo1aqQnn3xSR44ccW63dOlSPfvss2rXrp3eeOMNZ83Tpk3LUx0AAAAAcKN83F1Abvn5+alTp06Ki4tThw4dtG7dOoWGhqpGjRrZxmZkZOiRRx7RfffdJ0lq27atunbtqvnz5+u1116Tw+HQK6+8oh49eujFF190blexYkUNGzZMI0eO1G233XZD9SUlJWnZsmXO7U6ePKnJkyfr4Ycf1qhRoyRJwcHB+vzzz/XFF19o8ODBstlsmjNnjnr27KkJEyY4a83IyNCiRYs0bNgwlStXLk/9AgAAAOAe3t5F5vybU5EJhtLl6aRjxoxRWlqa1q9fr6ioqKuOvf32252/9/b2VpcuXfTFF19Ikv744w8dOXJETz/9tDIzM53jWrRoIS8vL/3yyy83HAwrVarksk3t2rUlSa1bt3Yus1qtCggI0PHjxyVJhw4d0tmzZ3XHHXe47KtHjx6aP3++du/ercjIyBuqAwAAAIB7Wa1+7i7hhhWpYNi2bVv5+vpq1qxZSkxMVPfu3XMc5+vrqzJlyrgsK1++vE6dOiVJOnv2rCQ5z+Rd6dixYzdcm9VqzVaDJJUuXdplebFixZSeni7p8lnGrNqurPWf6wEAAAAUHcnJF2WzFY57hlitfrk6g1mkgqGvr6+6du2qxYsXKyIiQhUqVMhxXEZGhpKSklzC4enTp1WxYkVJUtmyZSVJEydOVJMmTbJtX6lSJUlS8eLFnfv7p+Tk5Hwfyz/ruPLmNqdPn5akbOEWAAAAQOFns9mVmVk4gmFuFalgKEl9+/bV6dOn9a9//eua4z7//HPnNYY2m01ffPGFmjZtKkm69dZbVaVKFf3vf//TgAEDrrqPypUrS7o85TPr9wcPHszTGcWc1KlTRwEBAdqwYYPL1NdPP/1Uvr6+OYZWAAAAAChoRS4YNmnSRHPnzr3mGF9fX82bN0/p6emqXr26Vq5cqePHj2vOnDmSJIvFopiYGI0dO1apqanq0KGD/Pz8dPToUW3ZskWjR49WnTp11LRpU91yyy166aWXNGbMGKWkpGjBggXOM3355e3trZEjR+qFF15QQECAIiMjtWvXLi1cuFCDBw/mxjMAAAAAbooiFwxzw9fXV6+99pomTZqk3377TdWrV9frr7+uBg0aOMd0795dVqtVb7zxhtauXStJqlatmtq1a+ecourr66vZs2frueee02OPPaaaNWvq6aef1tSpUwus1qioKPn4+Gjx4sVauXKlKlasqOjoaI0YMaLA3gMAAAAArsXicDgc7i4CxggLkxIS3F0FAAAAYA6hoVJ8vHT27IVCc41hQEDJXN18pug9YAMAAAAAUKAIhgAAAABgcgRDAAAAADA5giEAAAAAmBzBEAAAAABMjmAIAAAAACZHMAQAAAAAkyMYAgAAAIDJEQwBAAAAwOQIhgAAAABgcj7uLgDGCQpydwUAAACAeRTl798Wh8PhcHcRKHgOh2SxuLsKAAAAwFwyMx1KSrogu71wxKyAgJLy9r7+RFHOGHooi0VKTr4om83u7lI8ire3l6xWP3prAHprHHprDPpqHHprHHprHHprnKLWW7vdUWhC4Y0gGHowm82uzMzC/5enKKK3xqG3xqG3xqCvxqG3xqG3xqG3xqG3xuLmMwAAAABgcgRDAAAAADA5giEAAAAAmBzBEAAAAABMjpvPeLDc3JYWNyarp/S24NFb49BbY9BX49Bb49Bb45i1t0X1DpzIjucYeiieYwgAAACj3Yxn9vn4eKlcuZI6e/YCdyXNA55jaHIWizRggLRvn7srAQAAgCcKCpKWL7fIy8vCWUMPQDD0YPv2SQkJ7q4CAAAAQGFnrknQAAAAAIBsCIYAAAAAYHIEQwAAAAAwOYIhAAAAAJgcwRAAAAAATI5gCAAAAAAmRzAEAAAAAJMjGAIAAACAyd3wA+5jY2M1e/Zs5+tixYqpevXquueeezR06FB5eeWcNRMTE9W5c+cc133wwQcKDg6+0VIKpRdffFGbNm3S5s2b3V0KAAAAAOTKDQdDSSpRooSWLFkiSUpLS9P27ds1ffp0ORwODRs27JrbPvHEE2rZsqXLsrp16+alDAAAAABAAchTMPTy8lJISIjzdatWrfTbb7/ps88+u24wrFWrlsu2+XXp0iX5+Phc9UwlAAAAAODa8hQMc1KyZEllZmbmax/Hjx/Xq6++qq+//loXL15UcHCwxo0bp8aNGzvHdOrUSR06dNAtt9yiFStW6NixY/r222/12GOPyd/fX3fffbdmzJihkydPKjg4WC+88IJq1qzp3P7VV1/Vli1blJiYqFKlSql58+aKiYlRpUqVnGOioqJyta8TJ07o2Wef1XfffSer1apBgwbl+bg2bdqkOXPm6I8//pC3t7dq1qypxx57TJGRkfnqKQAAAABcT56DYVYIzJpK+tlnn2n48OHX3c5ut7sESC8vL3l5eSkpKUn333+//P399cwzz6h06dJaunSpBg8erM8++0zly5d3bvPZZ5+pVq1aGj9+vLy8vOTv7y9J2rdvn86cOaOxY8fKZrNp6tSpevLJJ7Vq1SrntqdPn9bw4cNVqVIlnTlzRm+//baioqIUFxcnH5//a0du9jVy5EidOHFCzz33nEqXLq2FCxfq2LFjLvvJzXEdPnxYjz32mHr27KkxY8bIbrfr119/VVJSUh7+ZAAAAADgxuQpGKampqpRo0Yuy3r06HHdaaSSNHr0aJfXERERWrx4sZYsWaLk5GS9//77zhAYERGhbt266a233tJTTz3l3CYjI0MLFy50BsIs58+f1+rVqxUQEOCsc9y4cTp+/LiqVKkiSZoyZYpzvM1mU2hoqNq3b6/vv/9ebdu2zfW+tm7dql9++UWLFy9WRESEJKlly5aKjIxU2bJlnfvJzXHt3btXGRkZeuaZZ1SqVClJUrt27a7bSwAAAMDdvL2NvaQra/9Gv4/Z5fnmM8uWLZN0+Rq/PXv26PXXX9eECRNcgldOxo4dq1atWjlfZwWhbdu2qWXLlipTpozzjKKXl5eaN2+un3/+2WUfLVu2zBYKJalBgwbOICdJ9erVkySXYLhlyxbNmzdPBw4cUEpKinPsn3/+6RIMr7ev3bt3q3Tp0s5QKEmlS5dW69attXfvXuey3BxXYGCgvL29NXbsWP3rX/9S8+bNVbp06Wv2EQAAACgMrFY/j3ofs8rzzWf++XiJ8PBw53TLBx98UPXr17/qtjVq1Mjx0RRnz57Vrl27sp2JlORyXZ8kl2ml/2S1Wl1e+/r6SpLS09MlSbt379bIkSPVuXNnPfzwwypfvrwsFov+9a9/Ocfkdl8nT550CY5Xqy03x1WnTh298cYbmj9/vqKjo+Xl5aW2bdtq4sSJqlq1ao7HCgAAABQGyckXZbPZDdu/t7eXrFY/w9/HU1mtfrk621pgN5+59dZbJUm///77NYPh1ZQpU0bt2rXTY489lm1dsWLFXF5bLJY81fjFF1+oVKlSmjlzpvMupkeOHMnTvrKuUbzS6dOnXV7n9rjat2+v9u3bKyUlRVu3btWUKVM0btw452NBAAAAgMLIZrMrM9P4wHaz3sesCiwYHjhwQJJUrly5PG3funVrrVmzRnXr1s1xmmhBSEtLk6+vr0uwXLt2bZ72FRwcrPPnz+u7775zTic9f/68vv32W5drDG/0uEqVKqUePXpo9+7dWrduXZ5qAwAAAIAbkadgaLfbtWvXLkmXbwSzZ88ezZs3T/Xq1VOzZs0kSbfffruqVq2a6zNeDzzwgNauXauBAwdq0KBBqlq1qs6cOaOffvpJlStX1gMPPJCXUl20adNGS5Ys0eTJk3X77bcrISFBn3zySZ721b59ezVq1EhPPvmkxo4dq9KlS2vBggXOayZv5Ljeffdd7dq1S+3atVPFihWVmJioNWvWqE2bNvk+ZgAAAAC4njwFw7S0NPXr1+/yDnx8VKVKFd15552Kjo52Xotns9lkt+f+VG+5cuW0atUqzZw5U6+++qrOnTun8uXLq2nTprr99tvzUmY2kZGRGjt2rJYtW6aPPvpIYWFhmj9/vrp163bD+7JYLJo7d66effZZTZw4UVarVVFRUfr777+1adOmGzquwMBAffnll5oyZYrOnTunihUrqmfPnjlOPwUAAACAgmZxOBwOdxcBY4SFSQkJ7q4CAAAAnig0VIqPl86evWDotX8+Pl4qV66k4e/jqQICSubq5jM8DAQAAAAATI5gCAAAAAAmRzAEAAAAAJMjGAIAAACAyREMAQAAAMDkCIYAAAAAYHIEQwAAAAAwOYIhAAAAAJgcwRAAAAAATM7H3QXAOEFB7q4AAAAAnorvmp6FYOihHA5p+XJ3VwEAAABPlpnpkN3ucHcZKAAEQw9lsUjJyRdls9ndXYpH8fb2ktXqR28NQG+NQ2+NQV+NQ2+NQ2+NY9be2u0EQ09BMPRgNptdmZnm+cF0M9Fb49Bb49BbY9BX49Bb49Bb49BbFFXcfAYAAAAATI5gCAAAAAAmRzAEAAAAAJMjGAIAAACAyREMAQAAAMDkuCupB/P2JvcXtKye0tuCR2+NQ2+NQV+NQ2+NQ2+Nc6O95TEPKGwsDoeDT6QHcjguP8sQAAAAhU9mpkNJSRcIh7ng4+OlcuVK6uzZCzwKJA8CAkrm6j8sOGPooSwWacAAad8+d1cCAACAfwoKkpYvt8jLy0IwRKFBMPRg+/ZJCQnurgIAAABAYccEcwAAAAAwOYIhAAAAAJgcwRAAAAAATI5gCAAAAAAmRzAEAAAAAJMjGAIAAACAyREMAQAAAMDkCIYAAAAAYHIEw6tYs2aN7rvvPoWHhyssLEzdu3fX+PHjdfr06RvaT2xsrEJDQw2qEgAAAADyz8fdBRRGCxcu1PTp0/XAAw/o0UcflcPh0IEDB7R27VqdPHlS5cuXd3eJAAAAAFBgCIY5WLp0qe6++27FxMQ4l0VGRuqhhx6S3W53Y2UAAAAAUPCYSpqD5ORkVapUKcd1Xl7/17LVq1fr3//+t1q0aKHmzZsrKipKu3fvvu7+Z8+eraZNm2rLli352g8AAAAAFATOGOagUaNGevfdd1W9enV16NBBFStWzHFcYmKi7rrrLtWsWVOXLl1SXFycBgwYoDVr1qhOnTo5bvPyyy/r3Xff1YIFC9SyZcs87wcAAAAACorF4XA43F1EYfPbb78pOjpaf/31lySpevXq6tixox544AFVr149x23sdrvsdrt69eqlrl276oknnpB0+eYzixYtUnx8vJ577jl9+umnWrhwoZo2bXpD+8mLsDApISHPmwMAAMAAoaFSfLyUnHxRNhuXKV2Pt7eXrFY/+pVHVqufvL2vP1GUM4Y5qF+/vtatW6fvvvtO33zzjXbs2KGlS5fqo48+0vLlyxUUFCRJOnjwoF577TUlJCS43K30zz//dNmfw+HQU089pW3btumdd95RgwYNXNbndj8AAADwHFarn7tLKFLol7EIhldRrFgxRUZGKjIyUpL09ddfa/jw4ZozZ45mz56tlJQUDRkyRAEBAYqJiVHVqlVVvHhxTZgwQenp6S77ysjI0ObNm9W6dWvVr1/fZd2N7AcAAACegzNgucMZw/zhjGEBa9eunRo0aKCDBw9Kknbt2qXjx49r/vz5LmcAz58/rypVqrhsW6xYMc2fP18PP/ywnnvuOT3//PPOdTeyHwAAAHgOm82uzEyCTm7RL2NxV9Ic/P3339mWpaWl6dixY6pQoYLztST5+vo6x8THx+vIkSM57rNZs2aaO3euVq9erRdffNFlvzeyHwAAAAAoaJwxzEHv3r3VsWNHtW3bVpUqVdKJEye0bNkynT17VoMHD5YkhYSEyN/fX5MmTdKwYcN04sQJxcbGqnLlylfdb0REhGJjYzVq1Cj5+fnpiSeeyNN+AAAAAKAgccYwB9HR0Tp58qSmTp2qBx54QFOnTlXJkiW1ePFidenSRZJUoUIFzZo1S2fOnNHIkSO1ZMkSTZo0SbVq1brmviMjIzVz5ky99dZbmjNnTp73AwAAAAAFhcdVeDAeVwEAAFD4ZD2u4uzZC1wzlws+Pl4qV64k/cqjgICSubr5DGcMAQAAAMDkCIYAAAAAYHIEQwAAAAAwOYIhAAAAAJgcwRAAAAAATI5gCAAAAAAmRzAEAAAAAJMjGAIAAACAyREMAQAAAMDkfNxdAIwTFOTuCgAAAHAlvqOhMCIYeiiHQ1q+3N1VAAAAICeZmQ7Z7Q53lwE4EQw9lMUiJSdflM1md3cpHsXb20tWqx+9NQC9NQ69NQZ9NQ69NQ69Nc6N9tZuJxiicCEYejCbza7MTH7oG4HeGofeGofeGoO+GofeGofeGofeoqji5jMAAAAAYHIEQwAAAAAwOYIhAAAAAJgcwRAAAAAATI5gCAAAAAAmx11JPZi3N7m/oGX1lN4WPHprHHprDPpqHHprnLz2lkcrAJ6PYOihHA7JavVzdxkei94ah94ah94ag74ah94a50Z7m5npUFLSBcIh4MEIhh7KYpEGDJD27XN3JQAAoCgLCpKWL7fIy8tCMAQ8GMHQg+3bJyUkuLsKAAAAAIUdk/cBAAAAwOQIhgAAAABgcgRDAAAAADA5giEAAAAAmBzBEAAAAABMjmAIAAAAACZHMAQAAAAAkyMYAgAAAIDJmT4YrlmzRvfdd5/Cw8MVFham7t27a/z48Tp9+vQN7Sc2NlahoaE3/P6dOnXS888/f8PbAQAAAEBB8XF3Ae60cOFCTZ8+XQ888IAeffRRORwOHThwQGvXrtXJkydVvnx5d5cIAAAAAIYzdTBcunSp7r77bsXExDiXRUZG6qGHHpLdbndjZQAAAABw85h6KmlycrIqVaqU4zovr/9rzerVq/Xvf/9bLVq0UPPmzRUVFaXdu3dfc9+pqal6/vnn1a1bNzVt2lSdOnXSxIkTdf78+RzHL1++XB07dlR4eLhGjhypM2fO5P3AAAAAAOAGmPqMYaNGjfTuu++qevXq6tChgypWrJjjuMTERN11112qWbOmLl26pLi4OA0YMEBr1qxRnTp1ctwmLS1NNptNo0ePVkBAgI4dO6Y33nhDI0eO1NKlS13Gbt68WX/99ZcmTpyos2fPasqUKZo8ebJmzJhR4McMAAAAAFcydTB89tlnFR0drQkTJkiSqlevro4dO+qBBx5Q9erVneOio6Odv7fb7WrTpo12796tjz/+WE888USO+w4ICNCkSZOcrzMzM1W9enXdf//9+uOPP1wCpcPh0Lx581SsWDFJ0pEjRzR//nzZ7XaXM5cAAADu4u3Nd5JryeoPfSp49PbmMHUwrF+/vtatW6fvvvtO33zzjXbs2KGlS5fqo48+0vLlyxUUFCRJOnjwoF577TUlJCS43K30zz//vOb+V69ercWLF+uvv/5Samqqy3b/DIbNmzd3hkJJqlu3rjIyMnT69OmrnsUEAAC4maxWP3eXUCTQJ+PQW2OZOhhKUrFixRQZGanIyEhJ0tdff63hw4drzpw5mj17tlJSUjRkyBAFBAQoJiZGVatWVfHixTVhwgSlp6dfdb+ff/65/vvf/6pfv34aPXq0ypYtq1OnTmnUqFHZtrNardlqknTN/QMAANxMyckXZbNxc76r8fb2ktXqR58MQG/zx2r1y9XZVtMHwyu1a9dODRo00MGDByVJu3bt0vHjxzV//nw1aNDAOe78+fOqUqXKVfezYcMGBQUFuTyj8IcffjCucAAAAAPZbHZlZvKl/Hrok3HorbFMPVH377//zrYsLS1Nx44dU4UKFZyvJcnX19c5Jj4+XkeOHLnmvtPS0ly2kaS1a9fmt2QAAAAAKHCmPmPYu3dvdezYUW3btlWlSpV04sQJLVu2TGfPntXgwYMlSSEhIfL399ekSZM0bNgwnThxQrGxsapcufI19926dWs9//zzmjNnjkJDQ7VlyxZ99913N+OwAAAAAOCGmPqMYXR0tE6ePKmpU6fqgQce0NSpU1WyZEktXrxYXbp0kSRVqFBBs2bN0pkzZzRy5EgtWbJEkyZNUq1ata657/79+2vIkCFatmyZoqOjdezYMU2fPv1mHBYAAAAA3BCLw+FwuLsIGCMsTEpIcHcVAACgKAsNleLjpbNnL3B91zX4+HipXLmS9MkA9DZ/AgJK5urmM6Y+YwgAAAAAIBgCAAAAgOkRDAEAAADA5AiGAAAAAGByBEMAAAAAMDmCIQAAAACYHMEQAAAAAEyOYAgAAAAAJkcwBAAAAACT83F3ATBOUJC7KwAAAEUd3ycAcyAYeiiHQ1q+3N1VAAAAT5CZ6ZDd7nB3GQAMRDD0UBaLlJx8UTab3d2leBRvby9ZrX701gD01jj01hj01Tj01jh57a3dTjAEPB3B0IPZbHZlZvIPqhHorXHorXHorTHoq3HorXHoLYArcfMZAAAAADA5giEAAAAAmBzBEAAAAABMjmAIAAAAACZHMAQAAAAAk+OupB7M25vcX9CyekpvCx69NQ69NQZ9NU5R6i2PcQDgKQiGHsrhkKxWP3eX4bHorXHorXHorTHoq3GKQm8zMx1KSrpAOARQ5BEMPZTFIg0YIO3b5+5KAADwTEFB0vLlFnl5WQiGAIo8gqEH27dPSkhwdxUAAAAACrvCP3kfAAAAAGAogiEAAAAAmBzBEAAAAABMjmAIAAAAACZHMAQAAAAAkyMYAgAAAIDJEQwBAAAAwOQIhgAAAABgcqYLhrGxsQoMDFS7du1kt9uzre/fv78CAwMVExNzU+qJiYlRr169bsp7AQAAAEBOTBcMJcnX11dnz57Vjh07XJYfOXJEu3btkr+/v5sqAwAAAICbz7TBsH379oqLi3NZHhcXp9tuu001a9bM93ukpaXlex8AAAAAcDOYMhhKUq9evbRx40ZlZGQ4l61bty7btM6DBw9q9OjRioyMVNOmTdWjRw8tWrTIZRpqYmKiAgMD9dFHH2nChAlq2bKl+vbtK0m6dOmSZsyYoc6dO6tx48Zq3759jtNUt2/frrvuukshISG677779Msvvxh05AAAAADgyrTBsGPHjrp06ZK2bdsmSfr999+1f/9+9ejRw2XcyZMnVadOHT377LNasGCB/vWvf2nOnDmaO3dutn2+9tprcjgcmj59up588klJ0n/+8x8tXrxY9957rxYsWKCnnnpKqampLtudOnVKL7zwgoYOHaqZM2cqPT1d0dHRLqEVAAAAAIzi4+4C3MXPz0+dOnVSXFycOnTooHXr1ik0NFQ1atRwGRcREaGIiAhJksPhUHh4uNLS0rRs2TJFR0e7jG3QoIFefPFF5+tt27bpq6++0vTp013ORF55VjIpKUnLli3Tbbfd5qxt0KBB+umnn9SsWbMCPW4AAFCwvL2Lzv+zZ9ValGouKuitcejtzWHaYChdDmhjxoxRWlqa1q9fr6ioqGxj0tPTNX/+fK1du1bHjh1zOYt34cIFlSxZ0vm6Q4cOLtt+99138vPzU8+ePa9ZR6VKlZyhUJLq1asnSTpx4kReDgsAANxEVqufu0u4YUWx5qKC3hqH3hrL1MGwbdu28vX11axZs5SYmKju3btnGzNt2jS9//77GjVqlBo3bqzSpUtr06ZNmjdvntLT012CYfny5V22PXfunCpWrCiLxXLNOqxWq8trX19fSZdDKQAAKNySky/KZsv+CKzCyNvbS1arX5Gquaigt8aht/ljtfrl6myrqYOhr6+vunbtqsWLFysiIkIVKlTINmbDhg3q16+fhg0b5ly2ZcuWHPd3ZQAsW7asTp06JYfDcd1wCAAAiiabza7MzKL1ZbUo1lxU0Fvj0FtjmX6ibt++fdWxY0cNGjQox/Xp6enOM3iSZLPZsj3m4mpat26tixcv6tNPPy2QWgEAAADACKY+YyhJTZo0yfEOo1lat26t999/X/Xq1VO5cuW0YsUKXbp0KVf7bt26tSIjI/X000/r8OHDatq0qc6dO6eNGzdq5syZBXQEAAAAAJA/pj9jeD3PPPOMmjdvrsmTJ2v8+PGqX7++RowYkevtY2NjFRUVpVWrVunhhx/W1KlT5e/vb2DFAAAAAHBjLA6Hw+HuImCMsDApIcHdVQAA4JlCQ6X4eOns2QtF5ronHx8vlStXskjVXFTQW+PQ2/wJCCiZq5vPcMYQAAAAAEyOYAgAAAAAJkcwBAAAAACTIxgCAAAAgMkRDAEAAADA5AiGAAAAAGByBEMAAAAAMDmCIQAAAACYHMEQAAAAAEzOx90FwDhBQe6uAAAAz8W/swA8CcHQQzkc0vLl7q4CAADPlpnpkN3ucHcZAJBvBEMPZbFIyckXZbPZ3V2KR/H29pLV6kdvDUBvjUNvjUFfjVOUemu3EwwBeAaCoQez2ezKzCzc/6AWVfTWOPTWOPTWGPTVOPQWAG4ebj4DAAAAACZHMAQAAAAAkyMYAgAAAIDJEQwBAAAAwOQIhgAAAABgctyV1IN5e5P7C1pWT+ltwaO3xqG3xqCvxilsveWRFADMgGDooRwOyWr1c3cZHoveGofeGofeGoO+Gqew9DYz06GkpAuEQwAejWDooSwWacAAad8+d1cCAEDRFRQkLV9ukZeXhWAIwKMRDD3Yvn1SQoK7qwAAAABQ2BWOyfsAAAAAALchGAIAAACAyREMAQAAAMDkCIYAAAAAYHIEQwAAAAAwOYIhAAAAAJgcwRAAAAAATI5gCAAAAAAmVyiCYWxsrAIDA9WuXTvZ7fZs6/v376/AwEDFxMTk+71efPFFderU6brj+vTp4/J+MTEx6tWrV77fHwAAAAAKGx93F5DF19dXZ8+e1Y4dO9SyZUvn8iNHjmjXrl3y9/d3Y3XSyJEjlZqa6tYaAAAAAMAIhSoYRkREKC4uziUYxsXF6bbbbpOXl3tPbtasWdOt7w8AAAAARikUU0mz9OrVSxs3blRGRoZz2bp167JN4Tx48KBGjx6tyMhINW3aVD169NCiRYuyTUM9ceKERowYoaZNm6pdu3ZauHBhju8bHx+ve+65R8HBwerVq5e2bNmSbcyVU0mTk5M1YcIEtWvXTsHBwYqMjNTo0aNdttm/f7+GDh2qkJAQhYeH69FHH9XRo0ddxgQGBmrhwoWKjY1V69at1bJlS40bN46zkwAAAABumkJzxlCSOnbsqPHjx2vbtm3q0KGDfv/9d+3fv19z5szR+vXrneNOnjypOnXqqHfv3ipZsqT27dun2NhYpaamKjo62jlu5MiROnHihJ577jmVLl1aCxcu1LFjx+Tj83+HferUKQ0dOlSBgYGaOXOmkpOTNWnSJKWmpiooKOiqtU6ZMkVff/21xowZo2rVqunUqVPaunWrc/2xY8c0cOBA1ahRQ9OmTVN6erpmzJihgQMHas2aNSpVqpRz7PLlyxUeHq6pU6fqzz//1CuvvKLy5ctr7NixBdVaAAAAALiqQhUM/fz81KlTJ8XFxalDhw5at26dQkNDVaNGDZdxERERioiIkCQ5HA6Fh4crLS1Ny5YtcwbDrVu36pdfftHixYudY1u2bKnIyEiVLVvWua8lS5bIYrFo4cKFKl26tCSpSpUqeuCBB65Z688//6xevXrp7rvvdi7r2bOn8/eLFy9WZmamFi1a5Hy/oKAg9ezZUx9//LGioqKcYytWrKjp06dLktq3b6+9e/dq48aNBEMAAAoJb+9CNckqz7KOw1OOpzCht8ahtzdHoQqG0uXppGPGjFFaWprWr1/vEqCypKena/78+Vq7dq2OHTvmMvX0woULKlmypHbv3q3SpUs7Q6EklS5dWq1bt9bevXudy3766Se1bNnSGQqly8Hzn+ExJw0bNtTHH3+sihUrql27dqpfv77L+h9//FEtW7Z02U/dunXVoEED7dy50+W4Wrdu7bJt3bp1FRcXd833BwAAN4/V6ufuEgqUpx1PYUJvjUNvjVXogmHbtm3l6+urWbNmKTExUd27d882Ztq0aXr//fc1atQoNW7cWKVLl9amTZs0b948paenq2TJkjp58qQCAgKybVu+fHmX16dOnVKtWrWyjctp23965plnVKZMGb399tt65ZVXdMstt2jYsGG6//77JV2+BjGnqajly5dXUlKSyzKr1ery2tfXV5cuXbrm+wMAgJsnOfmibLbsj9Qqary9vWS1+nnM8RQm9NY49DZ/rFa/XJ1tLXTB0NfXV127dnVOAa1QoUK2MRs2bFC/fv00bNgw57IrbxhTqVIlnTlzJtu2p0+fdnldsWLFbMsk5bjtP5UuXVrjx4/X+PHjtX//fr3zzjuaNGmS6tevr2bNmqlMmTI57vf06dOqXbv2NfcNAAAKF5vNrsxMz/lC6mnHU5jQW+PQW2MVyom6ffv2VceOHTVo0KAc16enp8vX19f52mazZZt6GRwcrPPnz+u7775zLjt//ry+/fZbl3FNmjTR9u3bdf78eeey7777TufOnct1vYGBgRo3bpyky3dMlaTw8HB9//33LmcHDx06pP379ys8PDzX+wYAAAAAoxW6M4bS5bA2d+7cq65v3bq13n//fdWrV0/lypXTihUrsk29bN++vRo1aqQnn3xSY8eOVenSpbVgwQKXu4FK0uDBg7VixQo9/PDDevjhh5WcnKzY2NjrXmPYv39/3X777brtttvk7e2t1atXy9fXV82aNZMkPfDAA/roo480ZMgQPfLII0pPT9fMmTN1yy23uNywBgAAAADcrVCeMbyeZ555Rs2bN9fkyZM1fvx41a9fXyNGjHAZY7FYNHfuXDVq1EgTJ07Us88+q06dOqlbt24u4ypVqqSFCxcqLS1Njz32mBYuXKiJEyeqSpUq16whLCxMq1ev1mOPPaZHH31UiYmJeuONN1S3bl1J0i233KKlS5eqTJkyGjt2rJ555hk1aNBAS5cuzRZOAQAAAMCdLA6Hw+HuImCMsDApIcHdVQAAUHSFhkrx8dLZsxc84tomHx8vlStX0mOOpzCht8aht/kTEFAyVzefKZJnDAEAAAAABYdgCAAAAAAmRzAEAAAAAJMjGAIAAACAyREMAQAAAMDkCIYAAAAAYHIEQwAAAAAwOYIhAAAAAJgcwRAAAAAATM7H3QXAOEFB7q4AAICijX9LAZgFwdBDORzS8uXurgIAgKIvM9Mhu93h7jIAwFAEQw9lsUjJyRdls9ndXYpH8fb2ktXqR28NQG+NQ2+NQV+NU9h6a7cTDAF4PoKhB7PZ7MrMdP8/qJ6I3hqH3hqH3hqDvhqH3gLAzcPNZwAAAADA5AiGAAAAAGByBEMAAAAAMDmCIQAAAACYHDef8WDe3uT+gpbVU3pb8OitceitMeircYzqLXcXBYCrIxh6KIdDslr93F2Gx6K3xqG3xqG3xqCvxino3mZmOpSUdIFwCAA5IBh6KItFGjBA2rfP3ZUAAOB+QUHS8uUWeXlZCIYAkAOCoQfbt09KSHB3FQAAAAAKOy6MAAAAAACTIxgCAAAAgMkRDAEAAADA5AiGAAAAAGByBEMAAAAAMDmCIQAAAACYHMEQAAAAAEyOYAgAAAAAJkcwBAAAAACT84hgGBsbq8DAQLVr1052uz3b+v79+yswMFAxMTHO8aGhoc71iYmJio2N1YkTJ25azQAAAABQWHhEMJQkX19fnT17Vjt27HBZfuTIEe3atUv+/v7OZX379tWSJUtcxsyePVsnT568afUCAAAAQGHhUcGwffv2iouLc1keFxen2267TTVr1nQuq1Klipo0aXKzSwQAAACAQsljgqEk9erVSxs3blRGRoZz2bp169SrVy+Xcf+cSrp9+3YNGjRIknTfffcpMDBQgYGBzrFHjhzRo48+qvDwcIWEhGjo0KHav3+/y/46deqk559/XosXL1ZkZKRCQ0MVExOjS5cuad++ferfv79CQkJ03333Zdt20aJFuvfeexUeHq6IiAgNHz5cf/zxR4H2BQAAAACuxaOCYceOHXXp0iVt27ZNkvT7779r//796tGjx1W3adSokSZOnChJmjJlilatWqVVq1ZJklJSUhQVFaW9e/dq0qRJmjZtms6ePauBAwfq2LFjLvvZtGmTvvnmGz3//PMaM2aM1q1bp8mTJ+upp55S3759NWvWLKWnp+uxxx5zuQ7y+PHjGjhwoObOnasXXnhBdrtd/fv317lz5wq4OwAAAACQMx93F1CQ/Pz81KlTJ8XFxalDhw5at26dQkNDVaNGjatuU6pUKdWrV0+SdNtttyk4ONi57qOPPtLRo0cVFxenunXrSpKaN2+ujh07asmSJc6b2WSZO3euihUrJkn64Ycf9N5772nhwoVq3769JMlut2vEiBH67bff1KBBA0nS008/7dzeZrOpTZs2ioiI0MaNG9WvX78C6AoAAMji7e1R/yd+w7KO3+x9MAK9NQ69vTk8KhhKl6eTjhkzRmlpaVq/fr2ioqLyvK8ff/xRt912mzMUSlLZsmXVunVr7dy502Vs8+bNnaFQkmrXri0vLy+1atXKZZkkHTt2zBkMd+3apVmzZmnv3r0uZwn//PPPPNcNAAByZrX6ubuEQoE+GIfeGofeGsvjgmHbtm3l6+urWbNmKTExUd27d8/zvpKTk1WhQoVsy8uXL68DBw64LLNarS6vfX19VaJECZew6OvrK0lKT0+XJB09elRDhgxR48aNNWnSJFWqVEm+vr4aPny4cwwAACg4yckXZbNlf7SVWXh7e8lq9TN9H4xAb41Db/PHavXL1dlWjwuGvr6+6tq1qxYvXqyIiIgcg11ulSlTJscbwZw+fVplypTJT5mSpK+//lqpqamaPXu2M1hmZmYqKSkp3/sGAADZ2Wx2ZWbyxZI+GIfeGofeGssjJ+r27dtXHTt2dN5t9HquPJOXJTw8XL/99psOHTrkXJaUlKRvv/1W4eHh+a4zLS1NFotFPj7/l88//fRTZWZm5nvfAAAAAJBbHnfGUJKaNGmiuXPn5np87dq15e3trQ8//FA+Pj7y9vZWcHCw7rnnHi1evFjDhw/X448/ruLFi2vevHny8fHR4MGD811n1vWH48aNU//+/XXgwAG9/fbb2aalAgAAAICRPPKM4Y0KCAjQxIkTtWPHDg0YMED33XefpMt3LF26dKkaNGigZ555RmPHjlWZMmW0bNky3XLLLfl+38DAQE2ZMkV79uzR8OHDFRcXp1mzZql06dL53jcAAAAA5JbF4XA43F0EjBEWJiUkuLsKAADcLzRUio+Xzp69YOprlHx8vFSuXEnT98EI9NY49DZ/AgJK5urmM5wxBAAAAACTIxgCAAAAgMkRDAEAAADA5AiGAAAAAGByBEMAAAAAMDmCIQAAAACYHMEQAAAAAEyOYAgAAAAAJkcwBAAAAACT83F3ATBOUJC7KwAAoHDg30QAuDaCoYdyOKTly91dBQAAhUdmpkN2u8PdZQBAoUQw9FAWi5ScfFE2m93dpXgUb28vWa1+9NYA9NY49NYY9NU4RvXWbicYAsDVEAw9mM1mV2YmX1aMQG+NQ2+NQ2+NQV+NQ28B4Obh5jMAAAAAYHIEQwAAAAAwOYIhAAAAAJgcwRAAAAAATI6bz3gwb29yf0HL6im9LXj01jj01hj01ThX6y13FQUA4xAMPZTDIVmtfu4uw2PRW+PQW+PQW2PQV+Nc2dvMTIeSki4QDgHAAARDD2WxSAMGSPv2ubsSAADyLyhIWr7cIi8vC8EQAAxAMPRg+/ZJCQnurgIAAABAYceFEQAAAABgcgRDAAAAADA5giEAAAAAmBzBEAAAAABMjmAIAAAAACZHMAQAAAAAkyMYAgAAAIDJEQwNsHjxYrVr104nT550dykAAAAAcF2FMhjGxsYqNDQ03/uJiorS8OHD811LYGCgAgMD1aBBA4WHh6t37956/vnndfDgwWzjf/31V82ZM0dz585VpUqV8vXeAAAAAHAz+Li7ACM9++yz8vLKf/YtUaKElixZIkm6cOGCfvvtN61atUrvvfeeXnzxRfXp00eSlJaWpjFjxujZZ59VcHBwvt8XAAAAAG4Gjw6G9erVK5D9eHl5KSQkxPm6TZs2uv/++zVs2DCNHz9eYWFhqlGjhkqUKKG4uLgCeU8AAAAAuFkK5VTS67naVNNmzZopNjbW+frKqaTHjx/XY489ptatWys4OFidOnXSSy+9lKcaihcvrmeeeUYZGRl6//33ncs7deqk559/3vk6ISFBI0aMUNu2bRUSEqI+ffpo9erVLvuKiopyTlf956+oqKg81QYAAAAAN8Kjzxhe6amnntLJkyc1YcIElS9fXseOHdMvv/yS5/3Vq1dPlStXVkJCwlXHHD16VGFhYfr3v/+tYsWKKT4+XhMmTJDD4dDdd98t6fKU15SUFOc2J06c0NixY1WnTp081wYAAAAAuWWqYPjzzz/riSeeUI8ePZzL7rrrrnzt85ZbbtHff/991fU9e/Z0/t7hcKh58+Y6ceKEVq1a5QyG/5zymp6ersmTJ+vWW2/VuHHj8lUbAACextu7SE52KjSy+kcfCx69NQ69vTlMFQwbNmyoRYsWydvbW23atFGtWrXyvU+HwyGLxXLV9UlJSYqNjdWmTZt04sQJ2Ww2SVLZsmVzHD9+/HglJibqww8/lJ+fX77rAwDAk1it/NtYEOijceitceitsUwVDGfMmKEZM2Zo5syZmjRpkurUqaMnnnhCXbt2zfM+jx8/rtq1a191fUxMjBISEjRq1CjVq1dPpUqV0sqVK/Xpp59mG7tw4UKtX79eb731lqpXr57nmgAA8FTJyRdls9ndXUaR5e3tJavVjz4agN4ah97mj9Xql6uzrUUyGBYvXlwZGRkuyzIyMpSamnrN7SpVqqQpU6bIbrfrl19+0bx58zR69Ght2LBBNWrUuOE6Dhw4oBMnTjinhF4pPT1dX331lWJiYlxuJLNixYpsY7ds2aLXXntN//3vfxUREXHDtQAAYAY2m12ZmXwxzC/6aBx6axx6a6wiOVG3cuXKysjI0OHDh53Lvv/+e+c0zevx8vJSkyZN9PjjjyszM1N//fXXDdeQdS1gsWLF1Ldv3xzHXLp0SXa7Xb6+vs5lKSkp2rx5s8u4Q4cOacyYMerdu7ceeOCBG64FAAAAAPKj0J4xtNls2rBhQ7blTZo0Ufv27eXv768JEybo4Ycf1vHjx/XOO++oePHiV93f+fPnNXToUPXp00d16tRRRkaGli5dKqvVqoYNG16zFrvdrl27dkmSUlNTnQ+4/9///qepU6deddpn6dKlFRwcrIULFyogIEA+Pj5asGCBSpUqpTNnzjjHPfLIIypRooTuvfde5/tIUqlSpQrsWYwAAAAAcDWFNhimp6frsccey7b8lVdeUZ8+ffT666/r5Zdf1qhRoxQUFKRXXnnlms/9K168uOrXr6+lS5fq2LFjKlGihBo3bqy33npLAQEB16wlLS1N/fr1kyT5+/urevXqioiI0OzZs1W3bt1rbjt9+nRNnDhRMTExKlu2rKKiopSamqpFixY5x/z555+SpEGDBrls26JFCy1duvSa+wcAAACA/LI4HA6Hu4uAMcLCpGs8YhEAgCIjNFSKj5fOnr3ANUb54OPjpXLlStJHA9Bb49Db/AkIKJmrm88UyWsMAQAAAAAFh2AIAAAAACZHMAQAAAAAkyMYAgAAAIDJEQwBAAAAwOQIhgAAAABgcgRDAAAAADA5giEAAAAAmBzBEAAAAABMjmAIAAAAACbn4+4CYJygIHdXAABAweDfNAAwFsHQQzkc0vLl7q4CAICCk5npkN3ucHcZAOCRCIYeymKRkpMvymazu7sUj+Lt7SWr1Y/eGoDeGofeGoO+GudqvbXbCYYAYBSCoQez2ezKzOTLihHorXHorXHorTHoq3HoLQDcPNx8BgAAAABMjmAIAAAAACZHMAQAAAAAkyMYAgAAAIDJcfMZD+btTe4vaFk9pbcFj94ah94ag74WPO46CgDuQzD0UA6HZLX6ubsMj0VvjUNvjUNvjUFfC05mpkNJSRfcXQYAmBLB0ENZLNKAAdK+fe6uBACA6wsKkpYvt8jLy+LuUgDAlAiGHmzfPikhwd1VAAAAACjsuDACAAAAAEyOYAgAAAAAJkcwBAAAAACTIxgCAAAAgMkRDAEAAADA5AiGAAAAAGByBEMAAAAAMDmCIQAAAACYXKEMhps2bdKQIUPUokULNW7cWJ06ddLEiRP1xx9/uLu0XNu+fbsCAwP1888/u7sUAAAAALimQhcMX331VY0cOVKlSpXS5MmT9fbbb2vUqFH6/fffNXr0aHeXl2uNGjXSqlWrVLduXXeXAgAAAADX5OPuAv5py5YtWrhwoUaOHKnHHnvMubx58+a699579eWXX7qxuhtTqlQphYSEXHNMWlqaSpQocXMKAgAAAICrKFRnDBctWqQKFSpo5MiROa7v2LGjc9y9996r8PBwRUREaPjw4dmmmR44cEAPP/ywWrZsqaZNm6pbt25auHChy5iEhAQNGjRIISEhCg8P15gxY3T69Gnn+sTERAUGBmr16tWaOHGimjVrpoiICL399tuSpLi4OHXr1k1hYWGKjo5WcnKyc9ucppIGBgZqwYIFmjZtmtq0aaOIiAhJUnp6uqZMmaK2bdsqODhYffr00eeff56PTgIAAABA7hWaM4aZmZmKj49X165d5evre82xx48f18CBA1W1alWlpKTo3XffVf/+/bVx40aVLVtWkjRixAhVqFBBL774okqVKqXDhw/r+PHjzn0kJCQoKipKkZGRmjFjhi5evKiZM2dq5MiRWrVqlcv7zZw5U127dtWsWbP0xRdfaOrUqTpz5ox++OEHPfnkk0pJSdELL7ygadOmafLkydes/Z133lHTpk314osvKjMzU5I0duxYff3113r88cd166236pNPPtF//vMfzZkzR507d85DNwEAAAAg9wpNMDx37pwuXbqkqlWrXnfs008/7fy9zWZznn3buHGj+vXrpzNnzigxMVHjx49Xp06dJEmtWrVy2cf06dPVuHFjzZ49WxaLRZJUv3599erVS1u2bFFkZKRzbEhIiPM9W7Vqpc8++0zLli3T5s2bVa5cOUnS/v379cEHH1w3GJYpU8blPX/99Vd99tlnmjRpkvr37y9Jat++vY4cOUIwBACYjre3V46/R8HI6im9LXj01jj09uYoNMEwS1ZgupZdu3Zp1qxZ2rt3r86dO+dc/ueff0qSypUrp2rVqum1115TUlKSIiIiVKVKFee4ixcvKj4+Xk899ZRsNptzee3atXXLLbfo559/dgmGbdq0cf7e29tbNWrUkMVicYbCrG2Tk5N14cIFlSxZ8qq1t2/f3uUYd+7cKUm64447XMZ1795dU6ZMUWpqqvz9/a/bEwAAPIHV6pfj71Gw6K1x6K1x6K2xCk0wLFu2rIoXL66jR49ec9zRo0c1ZMgQNW7cWJMmTVKlSpXk6+ur4cOHKz09XdLlcPnWW29pxowZev7555WamqpGjRpp3Lhxat68uZKTk2Wz2TRlyhRNmTIl23scO3bM5XXp0qVdXvv6+mYLa1nTX9PT068ZDMuXL+/yOikpSb6+vs4psFkqVKggh8Oh8+fPEwwBAKaRnHxR0uUvgMnJF2Wz2d1ckWfx9vaitwaht8aht/ljtfrl6mxroQmGPj4+CgsL0/fff6/MzEz5+ORc2tdff63U1FTNnj1bVqtV0uXrE5OSklzG1alTR6+//royMjKUkJCg1157TSNGjNDWrVtVunRpWSwWDR8+XF26dMn2Hv88E1jQrjwjWqZMGWVkZCgpKUllypRxLv/7779lsViyhVIAADzZP7/02Wx2ZWbyJdAI9NY49NY49NZYhWqi7oMPPqhTp07pjTfeyHH9li1blJaWJovF4hIcP/30U+eNXK7k6+urFi1aaNiwYUpJSdHJkyfl7++vkJAQHTp0SMHBwdl+Va9e3ZDjy0l4eLgkacOGDS7LN2zYoIYNG3K2EAAAAIDhCs0ZQ0mKjIzUQw89pNjYWP3+++/q2bOnypUrp8TERH344Yc6f/68Xn75ZUnSuHHj1L9/fx04cEBvv/228+yhdPmGLi+//LJ69OihGjVqKCUlRfPnz1e1atVUs2ZNSdJTTz2lwYMH6/HHH1fPnj1ltVp1/Phxffvtt7rnnnvUsmXLm3LMDRo0UNeuXTV16lSlpaWpTp06WrNmjRISEjR37tybUgMAAAAAcytUwVCSnnzySYWGhmr58uV6+umndfHiRVWqVElt27bV0KFDVatWLU2ZMkWzZ8/W8OHDFRQUpFmzZunxxx937qNixYqqUKGC5s+frxMnTqh06dJq1qyZpk2bJm9vb0lSWFiYVqxYodjYWI0bN04ZGRmqUqWKWrVqpVq1at3UY542bZpee+01LVy4UOfOndOtt96q119/3XlHVQAAAAAwksXhcDjcXQSMERYmJSS4uwoAAK4vNFSKj5fOnr0gSSpXrqTOnr3A9UQFzMfHi94ahN4ah97mT0BAyVzdfKZQXWMIAAAAALj5CIYAAAAAYHIEQwAAAAAwOYIhAAAAAJgcwRAAAAAATI5gCAAAAAAmRzAEAAAAAJMjGAIAAACAyREMAQAAAMDkfNxdAIwTFOTuCgAAyB3+zQIA9yIYeiiHQ1q+3N1VAACQe5mZDtntDnl5WdxdCgCYDsHQQ1ksUnLyRdlsdneX4lG8vb1ktfrRWwPQW+PQW2PQ14JntxMMAcBdCIYezGazKzOTLytGoLfGobfGobfGoK8AAE/AzWcAAAAAwOQIhgAAAABgcgRDAAAAADA5giEAAAAAmBzBEAAAAABMjruSejBvb3J/QcvqKb0tePTWOPTWGPT1xmU9jgIAUPgQDD2UwyFZrX7uLsNj0Vvj0Fvj0Ftj0Nfcy8x0KCnpAuEQAAohgqGHslikAQOkffvcXQkAAFJQkLR8uUVeXhaCIQAUQgRDD7Zvn5SQ4O4qAAAAABR2XBgBAAAAACZHMAQAAAAAkyMYAgAAAIDJEQwBAAAAwOQIhgAAAABgcgRDAAAAADA5giEAAAAAmBzBEAAAAABMzqMfcB8bG6vZs2c7XxcrVkzVq1fXPffco6FDh8rLi1wMAAAAAB4dDCWpRIkSWrJkiSQpLS1N27dv1/Tp0+VwODRs2DA3VwcAAAAA7ufxwdDLy0shISHO161atdJvv/2mzz77jGAIAAAAADLpNYYlS5ZUZmam8/W5c+c0btw4tWzZUk2aNFH//v21Y8cO5/rVq1ercePGSktLcy7r3bu3GjZsqJSUFOeyfv36adKkSc7XycnJeu6559S2bVs1btxY99xzj7755huXWqKiojR8+HBt2LBB3bp1U2hoqAYNGqTDhw8bcegAAAAAkI0pgmFmZqYyMzOVkpKiTZs26bPPPlO3bt0kSTabTQ8//LC+/PJLjR07VrNmzZK/v78efPBB/fLLL5Kk5s2bKyMjQ7t27ZIknT17VgcOHJCPj4927twpSbp48aL27Nmj5s2bS5IuXbqkBx98UF999ZUef/xxzZs3T3Xr1tXw4cO1f/9+l/r27dunt956S2PHjtWUKVN0+PBhPfnkkzepOwAAAADMzuOnkqampqpRo0Yuy3r06OGcRvrVV19p9+7devPNN9WuXTtJUtu2bdW1a1fNnz9fsbGxqlatmqpWraoff/xRrVq10s6dO1WpUiU1adJEO3bsUGRkpBISEpSRkaFmzZpJktauXatff/1Vn3zyierVqydJateunf766y/NnTtXs2bNctZz/vx5rV69WgEBAc6ax40bp+PHj6tKlSqG9wgAgJvF2/v6/yedNSY3Y3Fj6K1x6K1x6O3N4fHBsESJElq2bJmky2fx9uzZo9dff10TJkzQlClT9OOPP6pUqVLOUChJvr6+uv3227Vu3TrnsmbNmjmnl+7YsUPNmzdXkyZNtH79eueyWrVqqVKlSpKkbdu2qX79+qpdu7bLtNXWrVtrzZo1LjU2aNDAGQolOYMkwRAA4GmsVj9DxuLG0Fvj0Fvj0FtjeXww9PLyUnBwsPN1eHi4bDabpk6dqgcffFDJyckqX758tu0qVKigpKQk5+sWLVroxRdfVEZGhnbs2KG+ffuqadOmmjZtmi5evKgff/zRebZQujzddO/evdnOVkqSt7e3y2ur1ery2tfXV5KUnp6et4MGAKCQSk6+KJvNfs0x3t5eslr9cjUWN4beGofeGofe5o/V6pers60eHwxzcuutt0qSfv/9d5UpU0anT5/ONubvv/9WmTJlnK+bNWumixcvavv27fr111/VvHlz3XrrrSpRooS2b9+un376SXfffbdzfJkyZRQYGKgXX3zR+AMCAKCIsNnsyszM3Re7GxmLG0NvjUNvjUNvjWXKYHjgwAFJUrly5RQeHq633npL33zzjdq2bSvp8s1qvvjiC4WHhzu3qVOnjipWrKj58+erTJkyzumeWdunp6c7bzwjXZ4yumXLFlWqVEmVK1e+iUcHAAAAADfG44Oh3W533k00IyNDe/bs0bx581SvXj01a9ZMXl5eatKkiZ588kmNGTNGFSpU0NKlS3Xy5Em9/vrrLvsKDw/Xhg0b1LVrV+eyZs2a6dVXX1WVKlVUo0YN5/K77rpL7777rgYNGqQhQ4aodu3aOn/+vPbu3auMjAyNGTPmphw/AAAAAFyPxwfDtLQ09evXT5Lk4+OjKlWq6M4771R0dLTzWr4FCxbolVde0bRp05x3MV20aJEaN27ssq8WLVpow4YNLtcStmjRQpJclklSsWLF9M477yg2NlZvvPGGTp06pbJly6phw4a6//77jTxkAAAAALghFofD4XB3ETBGWJiUkODuKgAAkEJDpfh46ezZC9e9RsjHx0vlypXM1VjcGHprHHprHHqbPwEBJXN18xkeBgIAAAAAJkcwBAAAAACTIxgCAAAAgMkRDAEAAADA5AiGAAAAAGByBEMAAAAAMDmCIQAAAACYHMEQAAAAAEyOYAgAAAAAJufj7gJgnKAgd1cAAMBl/JsEAIUbwdBDORzS8uXurgIAgP+TmemQ3e5wdxkAgBwQDD2UxSIlJ1+UzWZ3dykexdvbS1arH701AL01Dr01Bn29cXY7wRAACiuCoQez2ezKzOTLihHorXHorXHorTHoKwDAE3DzGQAAAAAwOYIhAAAAAJgcwRAAAAAATI5gCAAAAAAmRzAEAAAAAJMjGAIAAACAyREMAQAAAMDkCIYAAAAAYHIEQwAAAAAwOYIhAAAAAJgcwRAAAAAATI5gCAAAAAAmRzAEAAAAAJMjGAIAAACAyREMAQAAAMDkCIYAAAAAYHIEQwAAAAAwOYvD4XC4uwgYw2azu7sEj+Tt7UVvDUJvjUNvjUFfjUNvjUNvjUNvjUNv887LyyKLxXLdcQRDAAAAADA5ppICAAAAgMkRDAEAAADA5AiGAAAAAGByBEMAAAAAMDmCIQAAAACYHMEQAAAAAEyOYAgAAAAAJkcwBAAAAACTIxgCAAAAgMkRDAEAAADA5AiGAAAAAGByBEMAAAAAMDmCIQAAAACYHMHQgxw8eFAPPvigQkJC1KZNG73yyiu6dOmSu8sq8j766CMFBgZm+/Xqq6+6u7Qi56+//tLEiRPVp08fNWzYUL169cpx3Pvvv69u3bopODhYd955p7788subXGnRk5veRkVF5fhZPnjwoBsqLho+/fRTPfLII2rfvr1CQkLUp08fffDBB3I4HC7j+MzeuNz0ls9s3mzZskUDBw5Uq1at1LhxY3Xu3FlTpkzR+fPnXcZt3rxZd955p4KDg9WtWzd9+OGHbqq46MhNb2NiYnL83G7dutWNlRctFy5cUPv27RUYGKiff/7ZZR0/b43j4+4CUDCSkpI0ePBg1a5dW7GxsTpx4oSmTp2qtLQ0TZw40d3leYQ333xTpUuXdr6uXLmyG6spmg4cOKAtW7aoadOmstvt2b5cS1JcXJyeeeYZjRgxQq1atdL69esVHR2t5cuXKyQk5OYXXUTkpreSFBYWpv/+978uy6pXr34zSiySFi9erGrVqikmJkblypXTt99+q2eeeUbHjx9XdHS0JD6zeZWb3kp8ZvPi3LlzatKkiaKiolS2bFkdOHBAsbGxOnDggBYtWiRJ+vHHHxUdHa377rtPTz/9tL7//nuNHz9eJUuW1B133OHmIyi8ctNbSapRo0a2/0CuW7fuzS63yJo7d65sNlu25fy8NZgDHuGNN95whISEOM6ePetc9u677zqCgoIcx48fd19hHuDDDz901K9f33H69Gl3l1Lk2Ww25+//+9//Onr27JltTNeuXR1PPPGEy7J+/fo5HnroIcPrK8py09uBAwc6hg0bdjPLKvJy+ns/YcIER1hYmLPnfGbzJje95TNbcFatWuWoX7++8zvBkCFDHP369XMZ88QTTzi6d+/ujvKKtCt7e7Wfwcid33//3RESEuJYuXKlo379+o7du3c71/Hz1lhMJfUQW7duVUREhMqWLetc1r17d9ntdm3bts19hQH/4OV17R85//vf//Tnn3+qe/fuLst79Oih7777jqnR13C93iJvAgICsi0LCgpSSkqKUlNT+czmw/V6i4KV9f0gIyNDly5d0vbt27OdGezRo4cOHjyoxMREN1RYdP2zt8i/F154Qf3791edOnVclvPz1nh8k/AQhw4d0q233uqyzGq1qmLFijp06JCbqvIsvXr1UlBQkDp37qz58+fnOMUB+ZP1Wb3yH4O6desqIyND//vf/9xRlkf54YcfFBISouDgYA0cOFA7duxwd0lFzs6dO1W5cmWVKlWKz2wB+2dvs/CZzTubzab09HTt2bNHc+bMUadOnVS9enUdPnxYGRkZ2b43ZE115HvD9V2tt1n++usvhYeHq3Hjxrrnnnv0xRdfuLHaomPDhg367bffNGrUqGzr+HlrPK4x9BDJycmyWq3ZlpcpU0ZJSUluqMhzVKxYUf/5z3/UtGlTWSwWbd68WTNnztSJEye4frOAZX1Wr/wsZ73ms5w/zZs3V58+fVS7dm2dPHlSb731lh588EEtXbpUoaGh7i6vSPjxxx+1fv165zVvfGYLzpW9lfjM5lfHjh114sQJSVK7du00ffp0SXxuC8LVeitdPvMdHBysevXq6fz581q5cqVGjRqlWbNmcf3mNVy8eFFTp07V6NGjXf5zKAufW+MRDIHraNeundq1a+d83bZtWxUvXlxLlizRiBEjVKlSJTdWB+Teo48+6vK6Q4cO6tWrl+bOnauFCxe6qaqi4/jx4xo9erRatmypQYMGubscj3K13vKZzZ8FCxbo4sWL+v333zVv3jyNGDFCb7/9trvL8ghX6623t7cGDx7sMrZTp07q37+/Xn/9dYLhNcybN0/ly5fXvffe6+5STIuppB7CarVmuw21dPl/T8qUKeOGijxb9+7dZbPZtG/fPneX4lGyPqtXfpaTk5Nd1qNg+Pv7KzIyUnv27HF3KYVecnKyHn74YZUtW1axsbHOazr5zObf1XqbEz6zN6ZBgwYKDQ1V3759NXfuXG3fvl2ff/45n9sCcLXe5sTLy0tdu3bVwYMHlZaWdpMrLRqOHDmiRYsW6dFHH9X58+eVnJzsvNY4NTVVFy5c4HN7E3DG0EPceuut2a4JOH/+vE6dOpXtGgKgsMr6rF55zeyhQ4fk6+urGjVquKs0mFhaWpqGDx+u8+fPa9WqVS6PreEzmz/X6i0KVmBgoHx9fXX48GF16tRJvr6+OnTokMuMmKzvEXxvuDH/7C3yJjExURkZGRo2bFi2dYMGDVLTpk2d03X5eWsczhh6iPbt2+vbb791/q+JdPkCXi8vL7Vp08aNlXmm9evXy9vbWw0bNnR3KR6lRo0aql27tjZs2OCyfP369YqIiFCxYsXcVJlnSk1N1VdffaXg4GB3l1JoZWZm6vHHH9ehQ4f05ptvZnt+KZ/ZvLteb3PCZzbvfvrpJ2VkZKh69eoqVqyYWrZsqY0bN7qMWb9+verWrctzIm/QP3ubE7vdrg0bNui2225TiRIlbnJ1RUNQUJDeeecdl1/jxo2TJE2aNEnPPvssP29vAs4Yeoj+/ftr6dKlGjVqlIYPH64TJ07olVdeUf/+/XkQez4NHTpULVu2VGBgoCRp06ZNeu+99zRo0CBVrFjRzdUVLRcvXtSWLVskXZ42kpKS4vwB36JFCwUEBOg///mPxo4dq5o1a6ply5Zav369du/erWXLlrmz9ELver3N+vJ9++23q1q1ajp58qTefvttnTp1SrNmzXJn6YXapEmT9OWXXyomJkYpKSnatWuXc13Dhg1VrFgxPrN5dL3e7t69m89sHkVHR6tx48YKDAxUiRIl9Ouvv+qtt95SYGCgunTpIkl65JFHNGjQID333HPq3r27tm/frnXr1mnGjBlurr5wu15vjxw5opiYGPXs2VO1atVSUlKSVq5cqV9++UWxsbHuLr/QslqtatmyZY7rGjVqpEaNGkkSP28NZnE4HA53F4GCcfDgQU2ePFkJCQkqWbKk+vTpo9GjR/M/KPn0wgsv6Ouvv9bx48dlt9tVu3Zt9e3bV1FRUbJYLO4ur0hJTExU586dc1z3zjvvOP9ReP/997Vw4UIdPXpUderU0RNPPKGOHTvezFKLnOv1tkqVKnr++ee1f/9+nTt3Tn5+fgoNDVV0dLSaNGlyk6stOjp16qQjR47kuG7Tpk3OMwR8Zm/c9Xprs9n4zObRggULtH79eh0+fFgOh0PVqlXT7bffrqFDh7rc7XHTpk2aOXOm/vjjD1WtWlXDhg3Tfffd58bKC7/r9fbcuXMaN26c9u7dq9OnT8vX11eNGzfWsGHDXKbt4vq2b9+uQYMG6YMPPnCZJcDPW+MQDAEAAADA5LjGEAAAAABMjmAIAAAAACZHMAQAAAAAkyMYAgAAAIDJEQwBAAAAwOQIhgAAAABgcgRDAAAAADA5giEAALjpEhMTFRgYqI8++sjdpQAARDAEACDPtm/frsDAwBx/7dq1K9t4u92u1atX68EHH1TLli3VqFEjRUREaMiQIVq1apUuXbokSbLZbAoLC9MjjzySbR+LFy9WYGCg/vvf/2ZbN2vWLAUGBuqPP/7Isd5OnTpdtd5//spNWFu+fDmhDgA8iI+7CwAAoKiLiopScHCwy7KaNWu6vE5LS9OoUaP0zTffKDQ0VEOHDlX58uWVlJSkH374QZMmTdJPP/2kl156Sd7e3goJCVFCQkK294qPj5ePj4/i4+NzXFe+fHnVqVMnxzqffvppXbhwwfl669atWrduncaNG6dy5co5l4eFhV33mFeuXKly5crpnnvuue5YAEDhRzAEACCfmjVrpjvuuOOaY1566SV98803evrppzV48GCXdUOGDNGff/6pbdu2OZeFhYVp27ZtOnjwoOrWretcHh8frzvuuEPr1q3TqVOnVLFiRUlSZmamdu/erTZt2ly1hi5duri8/vvvv7Vu3Tp16dJF1atXz/XxAgA8D1NJAQAoACkpKcrMzMxx3bFjx/TBBx+oXbt22UJhltq1a2vAgAHO1+Hh4ZLkcmbwf//7n06dOqWBAweqePHiLuv27dun1NRU53Z5lZmZqTlz5qhLly5q3LixOnXqpNdee805zVW6PCX1wIED+uGHH5zTT6OioiRJ586d08svv6zevXsrNDRUYWFheuihh/Trr7/mqy4AgLE4YwgAQD6NGzdOqamp8vb2Vnh4uJ566imXqaVbt26VzWbTnXfemet9hoSEyMfHRzt37lTfvn0lSTt37pS/v7+Cg4PVuHFjxcfHq1u3bpL+L0DmNxhOmDBBH3/8sbp166YHH3xQu3fv1vz583Xw4EHNmTNH0uUpqZMnT5a/v79GjBghSapQoYKky+H1iy++0B133KHq1avr77//1qpVqzRw4EDFxcWpcuXK+aoPAGAMgiEAAHnk6+urbt26qX379ipXrpwOHjyot956SwMGDNC7776rhg0bSpIOHTokSapfv77L9pcuXVJKSorztcVicV7r5+fnp6CgIO3cudO5Pj4+XsHBwfLx8VFoaKi2b9/uXLdz5075+fk53zMvfv31V3388cfq27evXnjhBUnSgAEDFBAQoEWLFun7779Xq1at1KVLF82cOVPlypVTnz59XPYRGBiojRs3ysvr/yYl9enTR927d9cHH3ygUaNG5bk+AIBxmEoKAEAehYWF6fXXX9d9992nzp07a9iwYXrvvfdksVg0ffp057is8Ofv7++y/datWxUREeH81alTJ5f14eHhOnz4sE6dOiVJSkhIUGhoqPO99+3bp4sXL0q6HBqbNGkiH5+8/5/vli1bJEkPPvigy/IhQ4a4rL+WYsWKOUOhzWbT2bNn5e/vrzp16mjv3r15rg0AYCyCIQAABahWrVrq3Lmztm/fLpvNJkkqWbKkJCk1NdVlbFhYmN5++229/fbbatu2bbZ9/fM6w+TkZB04cMB5x9DQ0FDnDWeyrj3M7zTSI0eOyMvLK9sdVStWrCir1aojR45cdx92u12LFy9W165dFRwcrFatWikiIkL79+/X+fPn81UfAMA4TCUFAKCAValSRRkZGbp48aJKlSqlW2+9VZL022+/qUGDBs5xAQEBat26tSRpzZo12faTFfR27typEiVKSJLzjGFAQIBq166tnTt36tixYy7j88tiseR52zfeeEOzZs3Svffeq8cee0xlypSRl5eXXnrpJTkcjgKpDwBQ8AiGAAAUsMTERBUvXtw5dbR9+/by9vbW2rVrb+gGNOXLl3eGPz8/P9WrV09Wq9W5PjQ0VPHx8Tp+/Ljz2Yf5Ua1aNdntdv31118uj8j4+++/lZycrGrVqjmXXS08bty4US1bttRLL73ksjw5OdnlWYkAgMKFqaQAAOTRmTNnsi379ddftXnzZrVp08Z5rV3VqlV17733auvWrVq2bFmO+7ra2bSwsDD9+uuv2rZtm/NsYZbQ0FDt2rVLO3fuVGBgoEqVKpWv44mMjJQkLVmyxGX522+/7bJeunxznOTk5Gz78Pb2znYsn376qU6cOJGv2gAAxuKMIQAAefT444+rRIkSCg0NVfny5fX777/rvffeU4kSJTR27FiXsU8//bQSExM1efJkxcXFqWPHjipfvrzOnj2r+Ph4ffnll6pTp0629wgPD9dHH32kn3/+2eU5h9LlYHj+/HmdP3/e+RzB/GjQoIHuvvturVq1SsnJyWrevLl+/vlnffzxx+rSpYtatWrlHNuoUSOtXLlSc+fOVa1atRQQEKCIiAh16NBBc+bM0bhx4xQaGqrffvtNa9euVY0aNfJdHwDAOARDAADyqEuXLlq7dq0WL16slJQUlStXTrfffruio6NVq1Ytl7F+fn5688039cknn+iTTz7RW2+9pZSUFJUuXVoNGjTQs88+q7vvvjvbe/zzusErzxjedtttslqtSk5Odt6UJr9eeOEFVa9eXR9//LG++OILVahQQcOHD1d0dLTLuFGjRuno0aN68803deHCBbVo0UIREREaMWKELl68qLVr12r9+vVq2LCh5s+f73KXVgBA4WNxcCU4AAAAAJga1xgCAAAAgMkRDAEAAADA5AiGAAAAAGByBEMAAAAAMDmCIQAAAACYHMEQAAAAAEyOYAgAAAAAJkcwBAAAAACTIxgCAAAAgMkRDAEAAADA5AiGAAAAAGByBEMAAAAAMDmCIQAAAACY3P8D3HroMp6cKtQAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gwadjustments26.set_index('team', inplace=True)\n",
        "\n",
        "# Create a color map\n",
        "cmap = sns.diverging_palette(240, 10, as_cmap=True)\n",
        "\n",
        "# Plot the heatmap\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(gwadjustments26, annot=True, cmap=cmap, center=0)\n",
        "plt.title('Color-Coded Table of GW Adjustments')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "X2DQdb15YZfr",
        "outputId": "83691247-54e0-4883-cffa-40ec579b8f84",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 390
        }
      },
      "execution_count": 192,
      "outputs": [
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-192-41580282a9ec>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# Set the index column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'team'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# Create a color map\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    329\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfind_stack_level\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    330\u001b[0m                 )\n\u001b[0;32m--> 331\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m         \u001b[0;31m# error: \"Callable[[VarArg(Any), KwArg(Any)], Any]\" has no\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mset_index\u001b[0;34m(self, keys, drop, append, inplace, verify_integrity)\u001b[0m\n\u001b[1;32m   6010\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6011\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mmissing\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6012\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"None of {missing} are in the columns\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6013\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6014\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: \"None of ['team'] are in the columns\""
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "z7T7SgQSYyL8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "XxE_pa9xZB8N"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gwadjustments26.set_index('team', inplace=True)\n",
        "\n",
        "# Create a custom color map\n",
        "cmap = sns.diverging_palette(240, 10, n=21, as_cmap=True)\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "# Define color thresholds\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "\n",
        "# Normalize values for coloring\n",
        "normalized_values = (gwadjustments26 - 0.9) / (2.0 - 0.9)\n",
        "\n",
        "# Apply color map and thresholds\n",
        "colored_values = pd.cut(normalized_values, bins=color_thresholds, labels=colors)\n",
        "\n",
        "# Plot the heatmap with customized color coding\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(normalized_values, annot=True, cmap=cmap, center=1, cbar=False, fmt=\".2f\", linewidths=0.5, linecolor='white')\n",
        "plt.title('Custom Color-Coded Table of GW Adjustments')\n",
        "plt.xticks(rotation=45)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "_YnxO1yMZekH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 8))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "# Define color thresholds and corresponding colors\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    adjusted_values = gwadjustments26[score_col]\n",
        "\n",
        "    # Create a color list based on thresholds\n",
        "    colors_for_col = [colors[-1] if val is None else\n",
        "                      colors[0] if val < color_thresholds[0] else\n",
        "                      colors[1] if val <= color_thresholds[1] else\n",
        "                      colors[2]\n",
        "                      for val in adjusted_values]\n",
        "\n",
        "    for i, (val, color) in enumerate(zip(adjusted_values, colors_for_col)):\n",
        "        plt.barh(gwadjustments26.index[i], val, color=color, edgecolor='white')\n",
        "\n",
        "    bottom += adjusted_values\n",
        "\n",
        "plt.xlabel('Score Adjustments')\n",
        "plt.ylabel('Teams')\n",
        "plt.title('Horizontally Stacked GW Adjustments for Different Teams')\n",
        "plt.legend(labels=scores_columns)\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "5agSlfUragM2"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}