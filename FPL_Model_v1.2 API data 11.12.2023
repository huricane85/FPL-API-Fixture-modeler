{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMqWGvDu7wkE4mtlgalVeKx",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/huricane85/FPL-API-Fixture-modeler/blob/main/FPL_Model_v1.2%20API%20data%2011.12.2023\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b6S0KMo-gSGQ",
        "outputId": "52e51b1b-c489-4680-b375-0164acbc95cc"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "fatal: destination path 'UnderstatScraper' already exists and is not an empty directory.\n"
          ]
        }
      ],
      "source": [
        "!git clone https://github.com/doughagey/UnderstatScraper"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#!/usr/bin/env python3\n",
        "# -*- coding: utf-8 -*-\n",
        "\"\"\"\n",
        "Created on Mar 1 17:50:36 2020\n",
        "@author: doug hagey\n",
        "\"\"\"\n",
        "\n",
        "import pandas as pd\n",
        "import requests\n",
        "\n",
        "def scrape_understat(payload):\n",
        "    #Build request using url, headers (mimicking what Firefox does normally)\n",
        "    #Works best with verify=True as you won't get the ssl errors. Payload is\n",
        "    #taylored for each request\n",
        "    url = 'https://understat.com/main/getPlayersStats/'\n",
        "    headers = {'content-type':'application/json; charset=utf-8',\n",
        "    'Host': 'understat.com',\n",
        "    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:73.0) Gecko/20100101 Firefox/73.0',\n",
        "    'Accept': 'application/json, text/javascript, */*; q=0.01',\n",
        "    'Accept-Encoding': 'gzip, deflate, br',\n",
        "    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n",
        "    'X-Requested-With': 'XMLHttpRequest',\n",
        "    'Content-Length': '310',\n",
        "    'Origin': 'https: // understat.com',\n",
        "    'Connection': 'keep - alive',\n",
        "    'Referer': 'https: // understat.com / league / EPL'\n",
        "    }\n",
        "    response = requests.post(url, data=payload, headers = headers, verify=True)\n",
        "    response_json = response.json()\n",
        "    inner_wrapper = response_json['response']\n",
        "    json_player_data = inner_wrapper['players']\n",
        "    return json_player_data\n",
        "\n",
        "def clean_df(player_df, weeks):\n",
        "    # Get rid of the columns that we don't care about\n",
        "    #player_df.drop(['yellow_cards','red_cards', 'xGChain','xGBuildup','games','time'], axis=1, inplace=True)\n",
        "    player_df  = player_df.rename(columns={'goals':'goals_'+weeks,'xG':'xG_'+weeks,'assists':'assists_'+weeks, 'xA':'xA_'+weeks, 'shots':'shots_'+weeks, 'key_passes':\n",
        "        'key_passes_'+weeks,'npg':'npg_'+weeks,'npxG':'npxG_'+weeks})\n",
        "    if weeks != '1wks':\n",
        "        player_df.drop(['position','team_title'], axis=1, inplace=True)\n",
        "    return(player_df)\n",
        "\n",
        "#Creprint('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '16'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table,'6wks')\n",
        "\n",
        "\n",
        "print('Getting data for the whole season')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023'})\n",
        "season_table = pd.DataFrame(json_player_data)\n",
        "season_df = clean_df(season_table, 'season')\n",
        "\n",
        "print('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '16'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table, '1wks')\n",
        "\n",
        "print('Merging Tables')\n",
        "EPL_player_df = pd.merge(one_game_df, season_df, on=['id','player_name'])\n",
        "EPL_player_df = pd.merge(EPL_player_df, one_game_df, on=['id','player_name'])\n",
        "\n",
        "\n",
        "print('Writing CSV File')\n",
        "EPL_player_df.to_csv('Understat_EPL_Player_Data_Combined 2021.csv', encoding='utf-8', index=False)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D7aK55NHgZOt",
        "outputId": "e16e4ab2-fded-4c27-cbe0-86a05436d84a"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Getting data for the whole season\n",
            "Getting data for last 1 matches\n",
            "Merging Tables\n",
            "Writing CSV File\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df = EPL_player_df.round(2)\n",
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 635
        },
        "id": "n__CYp9pmkGz",
        "outputId": "668cc554-6a84-45fd-ec94-ff640ced04a4"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id            player_name games_x time_x goals_1wks_x  \\\n",
              "0     8260         Erling Haaland      15   1305           14   \n",
              "1     1250          Mohamed Salah      16   1408           11   \n",
              "2      453          Son Heung-Min      16   1379           10   \n",
              "3     1776           Jarrod Bowen      15   1350            9   \n",
              "4     1679        Dominic Solanke      16   1438            8   \n",
              "..     ...                    ...     ...    ...          ...   \n",
              "488  12199            Alex Murphy       1      1            0   \n",
              "489  12200          Amadou Diallo       1      1            0   \n",
              "490  12204  Benicio Baker-Boaitey       2      2            0   \n",
              "491  12215        Michael Ndiweni       1      1            0   \n",
              "492  12251             Sydie Peck       1      6            0   \n",
              "\n",
              "              xG_1wks_x assists_1wks_x           xA_1wks_x shots_1wks_x  \\\n",
              "0    16.727499932050705              4  3.2472310978919268           58   \n",
              "1    10.425881922245026              7   7.183804210275412           47   \n",
              "2     6.462784752249718              4  5.8401824198663235           39   \n",
              "3     6.948418594896793              1  2.2795576956123114           40   \n",
              "4     9.721119590103626              1  0.9574757218360901           48   \n",
              "..                  ...            ...                 ...          ...   \n",
              "488                   0              0                   0            0   \n",
              "489                   0              0                   0            0   \n",
              "490                   0              0                   0            0   \n",
              "491                   0              0                   0            0   \n",
              "492                   0              0                   0            0   \n",
              "\n",
              "    key_passes_1wks_x  ... shots_1wks_y key_passes_1wks_y yellow_cards  \\\n",
              "0                  16  ...           58                16            1   \n",
              "1                  36  ...           47                36            1   \n",
              "2                  31  ...           39                31            0   \n",
              "3                  11  ...           40                11            1   \n",
              "4                  13  ...           48                13            1   \n",
              "..                ...  ...          ...               ...          ...   \n",
              "488                 0  ...            0                 0            0   \n",
              "489                 0  ...            0                 0            0   \n",
              "490                 0  ...            0                 0            0   \n",
              "491                 0  ...            0                 0            0   \n",
              "492                 0  ...            0                 0            0   \n",
              "\n",
              "    red_cards position_y      team_title_y npg_1wks_y         npxG_1wks_y  \\\n",
              "0           0          F   Manchester City         11   13.68282476067543   \n",
              "1           0          F         Liverpool          8   7.381280824542046   \n",
              "2           0        F M         Tottenham          9  5.7016159147024155   \n",
              "3           0        F M          West Ham          9   6.948418594896793   \n",
              "4           0          F       Bournemouth          8   9.721119590103626   \n",
              "..        ...        ...               ...        ...                 ...   \n",
              "488         0          S  Newcastle United          0                   0   \n",
              "489         0          S  Newcastle United          0                   0   \n",
              "490         0          S          Brighton          0                   0   \n",
              "491         0          S  Newcastle United          0                   0   \n",
              "492         0          S  Sheffield United          0                   0   \n",
              "\n",
              "                xGChain           xGBuildup  \n",
              "0    16.214465029537678  1.3705047406256199  \n",
              "1    14.105848833918571  3.6903739869594574  \n",
              "2     13.83394755423069   4.277155740186572  \n",
              "3     7.912498477846384  1.4770999029278755  \n",
              "4    10.837209552526474  1.8425600491464138  \n",
              "..                  ...                 ...  \n",
              "488                   0                   0  \n",
              "489                   0                   0  \n",
              "490  0.1531512588262558  0.1531512588262558  \n",
              "491                   0                   0  \n",
              "492                   0                   0  \n",
              "\n",
              "[493 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6760d45d-9607-4670-9a47-14e545376635\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727499932050705</td>\n",
              "      <td>4</td>\n",
              "      <td>3.2472310978919268</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>16</td>\n",
              "      <td>1408</td>\n",
              "      <td>11</td>\n",
              "      <td>10.425881922245026</td>\n",
              "      <td>7</td>\n",
              "      <td>7.183804210275412</td>\n",
              "      <td>47</td>\n",
              "      <td>36</td>\n",
              "      <td>...</td>\n",
              "      <td>47</td>\n",
              "      <td>36</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>8</td>\n",
              "      <td>7.381280824542046</td>\n",
              "      <td>14.105848833918571</td>\n",
              "      <td>3.6903739869594574</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>16</td>\n",
              "      <td>1379</td>\n",
              "      <td>10</td>\n",
              "      <td>6.462784752249718</td>\n",
              "      <td>4</td>\n",
              "      <td>5.8401824198663235</td>\n",
              "      <td>39</td>\n",
              "      <td>31</td>\n",
              "      <td>...</td>\n",
              "      <td>39</td>\n",
              "      <td>31</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>9</td>\n",
              "      <td>5.7016159147024155</td>\n",
              "      <td>13.83394755423069</td>\n",
              "      <td>4.277155740186572</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>15</td>\n",
              "      <td>1350</td>\n",
              "      <td>9</td>\n",
              "      <td>6.948418594896793</td>\n",
              "      <td>1</td>\n",
              "      <td>2.2795576956123114</td>\n",
              "      <td>40</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>40</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>9</td>\n",
              "      <td>6.948418594896793</td>\n",
              "      <td>7.912498477846384</td>\n",
              "      <td>1.4770999029278755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>16</td>\n",
              "      <td>1438</td>\n",
              "      <td>8</td>\n",
              "      <td>9.721119590103626</td>\n",
              "      <td>1</td>\n",
              "      <td>0.9574757218360901</td>\n",
              "      <td>48</td>\n",
              "      <td>13</td>\n",
              "      <td>...</td>\n",
              "      <td>48</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>8</td>\n",
              "      <td>9.721119590103626</td>\n",
              "      <td>10.837209552526474</td>\n",
              "      <td>1.8425600491464138</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>488</th>\n",
              "      <td>12199</td>\n",
              "      <td>Alex Murphy</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>489</th>\n",
              "      <td>12200</td>\n",
              "      <td>Amadou Diallo</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>490</th>\n",
              "      <td>12204</td>\n",
              "      <td>Benicio Baker-Boaitey</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.1531512588262558</td>\n",
              "      <td>0.1531512588262558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>491</th>\n",
              "      <td>12215</td>\n",
              "      <td>Michael Ndiweni</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492</th>\n",
              "      <td>12251</td>\n",
              "      <td>Sydie Peck</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>493 rows × 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6760d45d-9607-4670-9a47-14e545376635')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6760d45d-9607-4670-9a47-14e545376635 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6760d45d-9607-4670-9a47-14e545376635');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b58e2fec-bb4d-43eb-9b6d-e62262cb057a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b58e2fec-bb4d-43eb-9b6d-e62262cb057a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b58e2fec-bb4d-43eb-9b6d-e62262cb057a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df.to_csv('one_game_df.csv', encoding='utf-8', index=False)\n",
        "one_game_df['time'] = one_game_df['time'].astype(int)\n",
        "one_game_df = one_game_df[one_game_df['time'] > 40]\n",
        "one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
        "one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
        "one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
        "one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
        "one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
        "one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n",
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])\n",
        "sortXgDifference = seasonedit.sort_values('xgdifference')\n",
        "sortXgDifference.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "IrXPzyJNg3ui",
        "outputId": "a4d00d55-6428-455b-e51a-bb99a80984dc"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-6-30b8c2331977>:4: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
            "<ipython-input-6-30b8c2331977>:5: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
            "<ipython-input-6-30b8c2331977>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
            "<ipython-input-6-30b8c2331977>:7: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
            "<ipython-input-6-30b8c2331977>:8: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
            "<ipython-input-6-30b8c2331977>:9: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id            player_name games  goals_1wks    xG_1wks  assists_1wks  \\\n",
              "34   10720           Darwin Núñez    15           4   8.947865             5   \n",
              "13   10048        Nicolas Jackson    15           6   9.312326             1   \n",
              "433  11055         Rasmus Højlund    12           0   3.136647             0   \n",
              "66     556        Marcus Rashford    15           2   5.070473             1   \n",
              "73    3621            Neal Maupay    13           2   4.963909             2   \n",
              "102  11356         Enzo Fernández    15           2   4.734172             0   \n",
              "0     8260         Erling Haaland    15          14  16.727500             4   \n",
              "426  10809     Keane Lewis-Potter    10           0   2.533956             0   \n",
              "46    5555  Dominic Calvert-Lewin    12           3   5.450203             0   \n",
              "47    5786            Yoane Wissa    16           3   5.348948             1   \n",
              "\n",
              "      xA_1wks shots_1wks key_passes_1wks position         team_title npg_1wks  \\\n",
              "34   2.718076         45              10      F S          Liverpool        4   \n",
              "13   1.310388         38              10      F S            Chelsea        6   \n",
              "433  0.764321         16              11      F S  Manchester United        0   \n",
              "66   1.562463         37              14    F M S  Manchester United        1   \n",
              "73   1.141363         26               9      F S  Brentford,Everton        2   \n",
              "102  1.619420         30              14        M            Chelsea        1   \n",
              "0    3.247231         58              16        F    Manchester City       11   \n",
              "426  0.131059         13               2      F S          Brentford        0   \n",
              "46   0.551739         27               5      F S            Everton        3   \n",
              "47   1.535933         38              13      F S          Brentford        3   \n",
              "\n",
              "              npxG_1wks             xGChain           xGBuildup  xgdifference  \\\n",
              "34    8.947864645160735  11.674425162374973  1.7612568065524101     -4.947865   \n",
              "13     9.31232613697648  10.213443983346224   1.306454386562109     -3.312326   \n",
              "433   3.136647466570139  3.6156376264989376  0.7916751243174076     -3.136647   \n",
              "66     4.30930445343256   7.992390006780624  2.7305994369089603     -3.070473   \n",
              "73    4.963908527046442   6.983009595423937  1.4420195445418358     -2.963909   \n",
              "102   3.211833940818906   7.530242294073105   4.649496862664819     -2.734172   \n",
              "0     13.68282476067543  16.214465029537678  1.3705047406256199     -2.727500   \n",
              "426   2.533956106752157  2.0547371730208397                   0     -2.533956   \n",
              "46   5.4502031318843365   4.355302695184946  0.3567850310355425     -2.450203   \n",
              "47    5.348947536200285   7.702101569622755  2.2648330330848694     -2.348948   \n",
              "\n",
              "     xAdifference  \n",
              "34       2.281924  \n",
              "13      -0.310388  \n",
              "433     -0.764321  \n",
              "66      -0.562463  \n",
              "73       0.858637  \n",
              "102     -1.619420  \n",
              "0        0.752769  \n",
              "426     -0.131059  \n",
              "46      -0.551739  \n",
              "47      -0.535933  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-170017e5-ca16-466c-861b-d702774e097b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>10720</td>\n",
              "      <td>Darwin Núñez</td>\n",
              "      <td>15</td>\n",
              "      <td>4</td>\n",
              "      <td>8.947865</td>\n",
              "      <td>5</td>\n",
              "      <td>2.718076</td>\n",
              "      <td>45</td>\n",
              "      <td>10</td>\n",
              "      <td>F S</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>4</td>\n",
              "      <td>8.947864645160735</td>\n",
              "      <td>11.674425162374973</td>\n",
              "      <td>1.7612568065524101</td>\n",
              "      <td>-4.947865</td>\n",
              "      <td>2.281924</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>10048</td>\n",
              "      <td>Nicolas Jackson</td>\n",
              "      <td>15</td>\n",
              "      <td>6</td>\n",
              "      <td>9.312326</td>\n",
              "      <td>1</td>\n",
              "      <td>1.310388</td>\n",
              "      <td>38</td>\n",
              "      <td>10</td>\n",
              "      <td>F S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>6</td>\n",
              "      <td>9.31232613697648</td>\n",
              "      <td>10.213443983346224</td>\n",
              "      <td>1.306454386562109</td>\n",
              "      <td>-3.312326</td>\n",
              "      <td>-0.310388</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>433</th>\n",
              "      <td>11055</td>\n",
              "      <td>Rasmus Højlund</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>3.136647</td>\n",
              "      <td>0</td>\n",
              "      <td>0.764321</td>\n",
              "      <td>16</td>\n",
              "      <td>11</td>\n",
              "      <td>F S</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0</td>\n",
              "      <td>3.136647466570139</td>\n",
              "      <td>3.6156376264989376</td>\n",
              "      <td>0.7916751243174076</td>\n",
              "      <td>-3.136647</td>\n",
              "      <td>-0.764321</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>66</th>\n",
              "      <td>556</td>\n",
              "      <td>Marcus Rashford</td>\n",
              "      <td>15</td>\n",
              "      <td>2</td>\n",
              "      <td>5.070473</td>\n",
              "      <td>1</td>\n",
              "      <td>1.562463</td>\n",
              "      <td>37</td>\n",
              "      <td>14</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1</td>\n",
              "      <td>4.30930445343256</td>\n",
              "      <td>7.992390006780624</td>\n",
              "      <td>2.7305994369089603</td>\n",
              "      <td>-3.070473</td>\n",
              "      <td>-0.562463</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>73</th>\n",
              "      <td>3621</td>\n",
              "      <td>Neal Maupay</td>\n",
              "      <td>13</td>\n",
              "      <td>2</td>\n",
              "      <td>4.963909</td>\n",
              "      <td>2</td>\n",
              "      <td>1.141363</td>\n",
              "      <td>26</td>\n",
              "      <td>9</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brentford,Everton</td>\n",
              "      <td>2</td>\n",
              "      <td>4.963908527046442</td>\n",
              "      <td>6.983009595423937</td>\n",
              "      <td>1.4420195445418358</td>\n",
              "      <td>-2.963909</td>\n",
              "      <td>0.858637</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102</th>\n",
              "      <td>11356</td>\n",
              "      <td>Enzo Fernández</td>\n",
              "      <td>15</td>\n",
              "      <td>2</td>\n",
              "      <td>4.734172</td>\n",
              "      <td>0</td>\n",
              "      <td>1.619420</td>\n",
              "      <td>30</td>\n",
              "      <td>14</td>\n",
              "      <td>M</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1</td>\n",
              "      <td>3.211833940818906</td>\n",
              "      <td>7.530242294073105</td>\n",
              "      <td>4.649496862664819</td>\n",
              "      <td>-2.734172</td>\n",
              "      <td>-1.619420</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727500</td>\n",
              "      <td>4</td>\n",
              "      <td>3.247231</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "      <td>-2.727500</td>\n",
              "      <td>0.752769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>426</th>\n",
              "      <td>10809</td>\n",
              "      <td>Keane Lewis-Potter</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>2.533956</td>\n",
              "      <td>0</td>\n",
              "      <td>0.131059</td>\n",
              "      <td>13</td>\n",
              "      <td>2</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>0</td>\n",
              "      <td>2.533956106752157</td>\n",
              "      <td>2.0547371730208397</td>\n",
              "      <td>0</td>\n",
              "      <td>-2.533956</td>\n",
              "      <td>-0.131059</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>5555</td>\n",
              "      <td>Dominic Calvert-Lewin</td>\n",
              "      <td>12</td>\n",
              "      <td>3</td>\n",
              "      <td>5.450203</td>\n",
              "      <td>0</td>\n",
              "      <td>0.551739</td>\n",
              "      <td>27</td>\n",
              "      <td>5</td>\n",
              "      <td>F S</td>\n",
              "      <td>Everton</td>\n",
              "      <td>3</td>\n",
              "      <td>5.4502031318843365</td>\n",
              "      <td>4.355302695184946</td>\n",
              "      <td>0.3567850310355425</td>\n",
              "      <td>-2.450203</td>\n",
              "      <td>-0.551739</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>5786</td>\n",
              "      <td>Yoane Wissa</td>\n",
              "      <td>16</td>\n",
              "      <td>3</td>\n",
              "      <td>5.348948</td>\n",
              "      <td>1</td>\n",
              "      <td>1.535933</td>\n",
              "      <td>38</td>\n",
              "      <td>13</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>3</td>\n",
              "      <td>5.348947536200285</td>\n",
              "      <td>7.702101569622755</td>\n",
              "      <td>2.2648330330848694</td>\n",
              "      <td>-2.348948</td>\n",
              "      <td>-0.535933</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-170017e5-ca16-466c-861b-d702774e097b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-170017e5-ca16-466c-861b-d702774e097b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-170017e5-ca16-466c-861b-d702774e097b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-43ca0d00-eb00-4c3a-82e8-c0d8bf275a54\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-43ca0d00-eb00-4c3a-82e8-c0d8bf275a54')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-43ca0d00-eb00-4c3a-82e8-c0d8bf275a54 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sortXgDifference.tail(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 484
        },
        "id": "UxuLfRINhwx7",
        "outputId": "c0323015-0e16-4c8a-e3f1-43d48e289a3a"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id      player_name games  goals_1wks   xG_1wks  assists_1wks  \\\n",
              "54   7218  Cristian Romero    13           3  0.953268             0   \n",
              "3    1776     Jarrod Bowen    15           9  6.948419             1   \n",
              "45   5553      Declan Rice    16           3  0.892523             1   \n",
              "57   8323   Josh Brownhill    15           3  0.683799             0   \n",
              "37  11718   Elijah Adebayo    16           4  1.595056             0   \n",
              "53   7166   Mathias Jensen    12           3  0.475169             2   \n",
              "26   3635   Bernardo Silva    13           4  1.354386             3   \n",
              "5    8845   Hee-Chan Hwang    16           8  5.167934             2   \n",
              "14  10177    Evan Ferguson    15           6  2.804309             0   \n",
              "2     453    Son Heung-Min    16          10  6.462785             4   \n",
              "\n",
              "     xA_1wks shots_1wks key_passes_1wks position               team_title  \\\n",
              "54  0.233086         10               5        D                Tottenham   \n",
              "3   2.279558         40              11      F M                 West Ham   \n",
              "45  1.622116         21              12        M                  Arsenal   \n",
              "57  0.571221         15              12      M S                  Burnley   \n",
              "37  0.377410         11               7      F S                    Luton   \n",
              "53  2.500248          7              20        M                Brentford   \n",
              "26  4.672644         11              27      M S          Manchester City   \n",
              "5   2.097343         26              12    F M S  Wolverhampton Wanderers   \n",
              "14  0.606391         23               5      F S                 Brighton   \n",
              "2   5.840182         39              31      F M                Tottenham   \n",
              "\n",
              "   npg_1wks            npxG_1wks             xGChain           xGBuildup  \\\n",
              "54        3   0.9532680846750736   7.806925538927317   7.742553684860468   \n",
              "3         9    6.948418594896793   7.912498477846384  1.4770999029278755   \n",
              "45        3   0.8925226544961333   7.574010922573507   6.510207735002041   \n",
              "57        3   0.6837993059307337    2.35086826980114  1.7437602672725916   \n",
              "37        4   1.5950560960918665  2.3124877009540796  0.5994829423725605   \n",
              "53        3  0.47516870498657227  5.3663221672177315    4.68579095415771   \n",
              "26        4   1.3543859273195267  10.323086118325591  6.3008935656398535   \n",
              "5         7    4.406764963641763  6.8267247984185815  1.8678752081468701   \n",
              "14        6   2.8043092247098684   5.259531259536743  1.9688059650361538   \n",
              "2         9   5.7016159147024155   13.83394755423069   4.277155740186572   \n",
              "\n",
              "    xgdifference  xAdifference  \n",
              "54      2.046732     -0.233086  \n",
              "3       2.051581     -1.279558  \n",
              "45      2.107477     -0.622116  \n",
              "57      2.316201     -0.571221  \n",
              "37      2.404944     -0.377410  \n",
              "53      2.524831     -0.500248  \n",
              "26      2.645614     -1.672644  \n",
              "5       2.832066     -0.097343  \n",
              "14      3.195691     -0.606391  \n",
              "2       3.537215     -1.840182  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-209d8f7c-9e15-4f4b-8f15-1b2381d2e528\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>7218</td>\n",
              "      <td>Cristian Romero</td>\n",
              "      <td>13</td>\n",
              "      <td>3</td>\n",
              "      <td>0.953268</td>\n",
              "      <td>0</td>\n",
              "      <td>0.233086</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>D</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>0.9532680846750736</td>\n",
              "      <td>7.806925538927317</td>\n",
              "      <td>7.742553684860468</td>\n",
              "      <td>2.046732</td>\n",
              "      <td>-0.233086</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>15</td>\n",
              "      <td>9</td>\n",
              "      <td>6.948419</td>\n",
              "      <td>1</td>\n",
              "      <td>2.279558</td>\n",
              "      <td>40</td>\n",
              "      <td>11</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>9</td>\n",
              "      <td>6.948418594896793</td>\n",
              "      <td>7.912498477846384</td>\n",
              "      <td>1.4770999029278755</td>\n",
              "      <td>2.051581</td>\n",
              "      <td>-1.279558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>5553</td>\n",
              "      <td>Declan Rice</td>\n",
              "      <td>16</td>\n",
              "      <td>3</td>\n",
              "      <td>0.892523</td>\n",
              "      <td>1</td>\n",
              "      <td>1.622116</td>\n",
              "      <td>21</td>\n",
              "      <td>12</td>\n",
              "      <td>M</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>3</td>\n",
              "      <td>0.8925226544961333</td>\n",
              "      <td>7.574010922573507</td>\n",
              "      <td>6.510207735002041</td>\n",
              "      <td>2.107477</td>\n",
              "      <td>-0.622116</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>8323</td>\n",
              "      <td>Josh Brownhill</td>\n",
              "      <td>15</td>\n",
              "      <td>3</td>\n",
              "      <td>0.683799</td>\n",
              "      <td>0</td>\n",
              "      <td>0.571221</td>\n",
              "      <td>15</td>\n",
              "      <td>12</td>\n",
              "      <td>M S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>3</td>\n",
              "      <td>0.6837993059307337</td>\n",
              "      <td>2.35086826980114</td>\n",
              "      <td>1.7437602672725916</td>\n",
              "      <td>2.316201</td>\n",
              "      <td>-0.571221</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>11718</td>\n",
              "      <td>Elijah Adebayo</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>1.595056</td>\n",
              "      <td>0</td>\n",
              "      <td>0.377410</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>F S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>4</td>\n",
              "      <td>1.5950560960918665</td>\n",
              "      <td>2.3124877009540796</td>\n",
              "      <td>0.5994829423725605</td>\n",
              "      <td>2.404944</td>\n",
              "      <td>-0.377410</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>7166</td>\n",
              "      <td>Mathias Jensen</td>\n",
              "      <td>12</td>\n",
              "      <td>3</td>\n",
              "      <td>0.475169</td>\n",
              "      <td>2</td>\n",
              "      <td>2.500248</td>\n",
              "      <td>7</td>\n",
              "      <td>20</td>\n",
              "      <td>M</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>3</td>\n",
              "      <td>0.47516870498657227</td>\n",
              "      <td>5.3663221672177315</td>\n",
              "      <td>4.68579095415771</td>\n",
              "      <td>2.524831</td>\n",
              "      <td>-0.500248</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>3635</td>\n",
              "      <td>Bernardo Silva</td>\n",
              "      <td>13</td>\n",
              "      <td>4</td>\n",
              "      <td>1.354386</td>\n",
              "      <td>3</td>\n",
              "      <td>4.672644</td>\n",
              "      <td>11</td>\n",
              "      <td>27</td>\n",
              "      <td>M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>4</td>\n",
              "      <td>1.3543859273195267</td>\n",
              "      <td>10.323086118325591</td>\n",
              "      <td>6.3008935656398535</td>\n",
              "      <td>2.645614</td>\n",
              "      <td>-1.672644</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>8845</td>\n",
              "      <td>Hee-Chan Hwang</td>\n",
              "      <td>16</td>\n",
              "      <td>8</td>\n",
              "      <td>5.167934</td>\n",
              "      <td>2</td>\n",
              "      <td>2.097343</td>\n",
              "      <td>26</td>\n",
              "      <td>12</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>7</td>\n",
              "      <td>4.406764963641763</td>\n",
              "      <td>6.8267247984185815</td>\n",
              "      <td>1.8678752081468701</td>\n",
              "      <td>2.832066</td>\n",
              "      <td>-0.097343</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>15</td>\n",
              "      <td>6</td>\n",
              "      <td>2.804309</td>\n",
              "      <td>0</td>\n",
              "      <td>0.606391</td>\n",
              "      <td>23</td>\n",
              "      <td>5</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>6</td>\n",
              "      <td>2.8043092247098684</td>\n",
              "      <td>5.259531259536743</td>\n",
              "      <td>1.9688059650361538</td>\n",
              "      <td>3.195691</td>\n",
              "      <td>-0.606391</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>16</td>\n",
              "      <td>10</td>\n",
              "      <td>6.462785</td>\n",
              "      <td>4</td>\n",
              "      <td>5.840182</td>\n",
              "      <td>39</td>\n",
              "      <td>31</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>9</td>\n",
              "      <td>5.7016159147024155</td>\n",
              "      <td>13.83394755423069</td>\n",
              "      <td>4.277155740186572</td>\n",
              "      <td>3.537215</td>\n",
              "      <td>-1.840182</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-209d8f7c-9e15-4f4b-8f15-1b2381d2e528')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-209d8f7c-9e15-4f4b-8f15-1b2381d2e528 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-209d8f7c-9e15-4f4b-8f15-1b2381d2e528');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-40fb03c0-d2b1-40f3-8864-e246ddf1f1b4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-40fb03c0-d2b1-40f3-8864-e246ddf1f1b4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-40fb03c0-d2b1-40f3-8864-e246ddf1f1b4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 565
        },
        "id": "NDPdgpJUVBBZ",
        "outputId": "bffdeb06-2d76-4b3d-f09e-375799e909d8"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id      player_name games  time  goals_1wks    xG_1wks  assists_1wks  \\\n",
              "0     8260   Erling Haaland    15  1305          14  16.727500             4   \n",
              "1     1250    Mohamed Salah    16  1408          11  10.425882             7   \n",
              "2      453    Son Heung-Min    16  1379          10   6.462785             4   \n",
              "3     1776     Jarrod Bowen    15  1350           9   6.948419             1   \n",
              "4     1679  Dominic Solanke    16  1438           8   9.721120             1   \n",
              "..     ...              ...   ...   ...         ...        ...           ...   \n",
              "475  11998  Hannes Delcroix     6   227           0   0.232794             0   \n",
              "479  12094      Mike Trésor     9   259           0   0.654791             0   \n",
              "482  12123          Murillo    10   883           0   0.655682             0   \n",
              "483  12149       Alex Scott     3   194           0   0.082303             0   \n",
              "486  12187     Jordan Clark     5    72           0   0.000000             0   \n",
              "\n",
              "      xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards position  \\\n",
              "0    3.247231         58              16            1         0        F   \n",
              "1    7.183804         47              36            1         0        F   \n",
              "2    5.840182         39              31            0         0      F M   \n",
              "3    2.279558         40              11            1         0      F M   \n",
              "4    0.957476         48              13            1         0        F   \n",
              "..        ...        ...             ...          ...       ...      ...   \n",
              "475  0.083017          4               2            1         0      D S   \n",
              "479  0.480966          4               4            0         0    F M S   \n",
              "482  0.493345          6               4            1         0        D   \n",
              "483  0.089547          2               1            1         0        M   \n",
              "486  0.028226          0               1            1         0        S   \n",
              "\n",
              "            team_title npg_1wks            npxG_1wks               xGChain  \\\n",
              "0      Manchester City       11    13.68282476067543    16.214465029537678   \n",
              "1            Liverpool        8    7.381280824542046    14.105848833918571   \n",
              "2            Tottenham        9   5.7016159147024155     13.83394755423069   \n",
              "3             West Ham        9    6.948418594896793     7.912498477846384   \n",
              "4          Bournemouth        8    9.721119590103626    10.837209552526474   \n",
              "..                 ...      ...                  ...                   ...   \n",
              "475            Burnley        0  0.23279432207345963    0.7400502115488052   \n",
              "479            Burnley        0   0.6547909751534462    0.8833713084459305   \n",
              "482  Nottingham Forest        0   0.6556824203580618     2.888271164149046   \n",
              "483        Bournemouth        0  0.08230337873101234    0.9122739285230637   \n",
              "486              Luton        0                    0  0.028225945308804512   \n",
              "\n",
              "               xGBuildup  xgdifference  xAdifference  \n",
              "0     1.3705047406256199     -2.727500      0.752769  \n",
              "1     3.6903739869594574      0.574118     -0.183804  \n",
              "2      4.277155740186572      3.537215     -1.840182  \n",
              "3     1.4770999029278755      2.051581     -1.279558  \n",
              "4     1.8425600491464138     -1.721120      0.042524  \n",
              "..                   ...           ...           ...  \n",
              "475   0.6570334546267986     -0.232794     -0.083017  \n",
              "479  0.24054411053657532     -0.654791     -0.480966  \n",
              "482    2.510409390553832     -0.655682     -0.493345  \n",
              "483   0.8663346916437149     -0.082303     -0.089547  \n",
              "486                    0      0.000000     -0.028226  \n",
              "\n",
              "[439 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c284e4fe-8852-472d-8626-1deac55522b8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727500</td>\n",
              "      <td>4</td>\n",
              "      <td>3.247231</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "      <td>-2.727500</td>\n",
              "      <td>0.752769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>16</td>\n",
              "      <td>1408</td>\n",
              "      <td>11</td>\n",
              "      <td>10.425882</td>\n",
              "      <td>7</td>\n",
              "      <td>7.183804</td>\n",
              "      <td>47</td>\n",
              "      <td>36</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>8</td>\n",
              "      <td>7.381280824542046</td>\n",
              "      <td>14.105848833918571</td>\n",
              "      <td>3.6903739869594574</td>\n",
              "      <td>0.574118</td>\n",
              "      <td>-0.183804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>16</td>\n",
              "      <td>1379</td>\n",
              "      <td>10</td>\n",
              "      <td>6.462785</td>\n",
              "      <td>4</td>\n",
              "      <td>5.840182</td>\n",
              "      <td>39</td>\n",
              "      <td>31</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>9</td>\n",
              "      <td>5.7016159147024155</td>\n",
              "      <td>13.83394755423069</td>\n",
              "      <td>4.277155740186572</td>\n",
              "      <td>3.537215</td>\n",
              "      <td>-1.840182</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>15</td>\n",
              "      <td>1350</td>\n",
              "      <td>9</td>\n",
              "      <td>6.948419</td>\n",
              "      <td>1</td>\n",
              "      <td>2.279558</td>\n",
              "      <td>40</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>9</td>\n",
              "      <td>6.948418594896793</td>\n",
              "      <td>7.912498477846384</td>\n",
              "      <td>1.4770999029278755</td>\n",
              "      <td>2.051581</td>\n",
              "      <td>-1.279558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>16</td>\n",
              "      <td>1438</td>\n",
              "      <td>8</td>\n",
              "      <td>9.721120</td>\n",
              "      <td>1</td>\n",
              "      <td>0.957476</td>\n",
              "      <td>48</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>8</td>\n",
              "      <td>9.721119590103626</td>\n",
              "      <td>10.837209552526474</td>\n",
              "      <td>1.8425600491464138</td>\n",
              "      <td>-1.721120</td>\n",
              "      <td>0.042524</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>475</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>6</td>\n",
              "      <td>227</td>\n",
              "      <td>0</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.7400502115488052</td>\n",
              "      <td>0.6570334546267986</td>\n",
              "      <td>-0.232794</td>\n",
              "      <td>-0.083017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>479</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>9</td>\n",
              "      <td>259</td>\n",
              "      <td>0</td>\n",
              "      <td>0.654791</td>\n",
              "      <td>0</td>\n",
              "      <td>0.480966</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6547909751534462</td>\n",
              "      <td>0.8833713084459305</td>\n",
              "      <td>0.24054411053657532</td>\n",
              "      <td>-0.654791</td>\n",
              "      <td>-0.480966</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>482</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>10</td>\n",
              "      <td>883</td>\n",
              "      <td>0</td>\n",
              "      <td>0.655682</td>\n",
              "      <td>0</td>\n",
              "      <td>0.493345</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6556824203580618</td>\n",
              "      <td>2.888271164149046</td>\n",
              "      <td>2.510409390553832</td>\n",
              "      <td>-0.655682</td>\n",
              "      <td>-0.493345</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>483</th>\n",
              "      <td>12149</td>\n",
              "      <td>Alex Scott</td>\n",
              "      <td>3</td>\n",
              "      <td>194</td>\n",
              "      <td>0</td>\n",
              "      <td>0.082303</td>\n",
              "      <td>0</td>\n",
              "      <td>0.089547</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0</td>\n",
              "      <td>0.08230337873101234</td>\n",
              "      <td>0.9122739285230637</td>\n",
              "      <td>0.8663346916437149</td>\n",
              "      <td>-0.082303</td>\n",
              "      <td>-0.089547</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>486</th>\n",
              "      <td>12187</td>\n",
              "      <td>Jordan Clark</td>\n",
              "      <td>5</td>\n",
              "      <td>72</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028226</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028225945308804512</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-0.028226</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>439 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c284e4fe-8852-472d-8626-1deac55522b8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c284e4fe-8852-472d-8626-1deac55522b8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c284e4fe-8852-472d-8626-1deac55522b8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5ae2118a-7147-45ec-aca0-f6df1697dfd4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5ae2118a-7147-45ec-aca0-f6df1697dfd4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5ae2118a-7147-45ec-aca0-f6df1697dfd4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "onegamedftidy = one_game_df.drop(columns=[\n",
        " 'time',\n",
        " 'goals_1wks',\n",
        " 'assists_1wks',\n",
        " 'shots_1wks',\n",
        " 'key_passes_1wks',\n",
        " 'yellow_cards',\n",
        " 'red_cards',\n",
        " 'npg_1wks',\n",
        " 'npxG_1wks',\n",
        " 'xGChain',\n",
        " 'xGBuildup',\n",
        " 'xgdifference',\n",
        " 'xAdifference'])\n",
        "onegamedftidy"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "RKf0tUGEh8FV",
        "outputId": "d85955c1-7f36-401c-8f69-e3b59229f5fe"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id      player_name games    xG_1wks   xA_1wks position  \\\n",
              "0     8260   Erling Haaland    15  16.727500  3.247231        F   \n",
              "1     1250    Mohamed Salah    16  10.425882  7.183804        F   \n",
              "2      453    Son Heung-Min    16   6.462785  5.840182      F M   \n",
              "3     1776     Jarrod Bowen    15   6.948419  2.279558      F M   \n",
              "4     1679  Dominic Solanke    16   9.721120  0.957476        F   \n",
              "..     ...              ...   ...        ...       ...      ...   \n",
              "475  11998  Hannes Delcroix     6   0.232794  0.083017      D S   \n",
              "479  12094      Mike Trésor     9   0.654791  0.480966    F M S   \n",
              "482  12123          Murillo    10   0.655682  0.493345        D   \n",
              "483  12149       Alex Scott     3   0.082303  0.089547        M   \n",
              "486  12187     Jordan Clark     5   0.000000  0.028226        S   \n",
              "\n",
              "            team_title  \n",
              "0      Manchester City  \n",
              "1            Liverpool  \n",
              "2            Tottenham  \n",
              "3             West Ham  \n",
              "4          Bournemouth  \n",
              "..                 ...  \n",
              "475            Burnley  \n",
              "479            Burnley  \n",
              "482  Nottingham Forest  \n",
              "483        Bournemouth  \n",
              "486              Luton  \n",
              "\n",
              "[439 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bbd15b5e-ffb2-4624-b0a9-9ae2a60c4c5e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>16.727500</td>\n",
              "      <td>3.247231</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>16</td>\n",
              "      <td>10.425882</td>\n",
              "      <td>7.183804</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>16</td>\n",
              "      <td>6.462785</td>\n",
              "      <td>5.840182</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>15</td>\n",
              "      <td>6.948419</td>\n",
              "      <td>2.279558</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>16</td>\n",
              "      <td>9.721120</td>\n",
              "      <td>0.957476</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>475</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>6</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>479</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>9</td>\n",
              "      <td>0.654791</td>\n",
              "      <td>0.480966</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>482</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>10</td>\n",
              "      <td>0.655682</td>\n",
              "      <td>0.493345</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>483</th>\n",
              "      <td>12149</td>\n",
              "      <td>Alex Scott</td>\n",
              "      <td>3</td>\n",
              "      <td>0.082303</td>\n",
              "      <td>0.089547</td>\n",
              "      <td>M</td>\n",
              "      <td>Bournemouth</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>486</th>\n",
              "      <td>12187</td>\n",
              "      <td>Jordan Clark</td>\n",
              "      <td>5</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.028226</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>439 rows × 7 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bbd15b5e-ffb2-4624-b0a9-9ae2a60c4c5e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bbd15b5e-ffb2-4624-b0a9-9ae2a60c4c5e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bbd15b5e-ffb2-4624-b0a9-9ae2a60c4c5e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-bcde842b-c571-4d41-a4ad-04c23090c519\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bcde842b-c571-4d41-a4ad-04c23090c519')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-bcde842b-c571-4d41-a4ad-04c23090c519 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/pratos/fpl-mappers\n",
        "!git clone https://github.com/ChrisMusson/FPL-ID-Map\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B9kCj8OeiKGn",
        "outputId": "586cc526-a8c9-4e1b-ed83-6bcbc8f55f56"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'fpl-mappers'...\n",
            "remote: Enumerating objects: 94, done.\u001b[K\n",
            "remote: Counting objects: 100% (94/94), done.\u001b[K\n",
            "remote: Compressing objects: 100% (56/56), done.\u001b[K\n",
            "remote: Total 94 (delta 32), reused 89 (delta 30), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (94/94), 217.69 KiB | 2.69 MiB/s, done.\n",
            "Resolving deltas: 100% (32/32), done.\n",
            "Cloning into 'FPL-ID-Map'...\n",
            "remote: Enumerating objects: 242, done.\u001b[K\n",
            "remote: Counting objects: 100% (242/242), done.\u001b[K\n",
            "remote: Compressing objects: 100% (120/120), done.\u001b[K\n",
            "remote: Total 242 (delta 176), reused 188 (delta 122), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (242/242), 273.05 KiB | 3.41 MiB/s, done.\n",
            "Resolving deltas: 100% (176/176), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data1 = pd.read_csv('/content/FPL-ID-Map/Understat.csv', on_bad_lines='skip')\n",
        "data2 = pd.read_csv('/content/FPL-ID-Map/FPL/22-23.csv', on_bad_lines='skip')\n",
        "understatwithfplid1 = pd.merge(data2,\n",
        "                     data1,\n",
        "                     on ='code',\n",
        "                     how ='left')\n",
        "understatid = understatwithfplid1.drop(columns=[\n",
        "'code',\n",
        " 'first_name_x',\n",
        " 'second_name_x',\n",
        " 'web_name_x',\n",
        " 'first_name_y',\n",
        " 'second_name_y',\n",
        " 'web_name_y',])\n",
        "one_game_df.rename(columns={'id': 'understat'}, inplace=True)\n",
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 565
        },
        "id": "SaX7692EiQA7",
        "outputId": "ad8e6faf-37f5-4ca4-8f67-a2db4a9d8110"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    understat      player_name games  time  goals_1wks    xG_1wks  \\\n",
              "0        8260   Erling Haaland    15  1305          14  16.727500   \n",
              "1        1250    Mohamed Salah    16  1408          11  10.425882   \n",
              "2         453    Son Heung-Min    16  1379          10   6.462785   \n",
              "3        1776     Jarrod Bowen    15  1350           9   6.948419   \n",
              "4        1679  Dominic Solanke    16  1438           8   9.721120   \n",
              "..        ...              ...   ...   ...         ...        ...   \n",
              "475     11998  Hannes Delcroix     6   227           0   0.232794   \n",
              "479     12094      Mike Trésor     9   259           0   0.654791   \n",
              "482     12123          Murillo    10   883           0   0.655682   \n",
              "483     12149       Alex Scott     3   194           0   0.082303   \n",
              "486     12187     Jordan Clark     5    72           0   0.000000   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards  \\\n",
              "0               4  3.247231         58              16            1         0   \n",
              "1               7  7.183804         47              36            1         0   \n",
              "2               4  5.840182         39              31            0         0   \n",
              "3               1  2.279558         40              11            1         0   \n",
              "4               1  0.957476         48              13            1         0   \n",
              "..            ...       ...        ...             ...          ...       ...   \n",
              "475             0  0.083017          4               2            1         0   \n",
              "479             0  0.480966          4               4            0         0   \n",
              "482             0  0.493345          6               4            1         0   \n",
              "483             0  0.089547          2               1            1         0   \n",
              "486             0  0.028226          0               1            1         0   \n",
              "\n",
              "    position         team_title npg_1wks            npxG_1wks  \\\n",
              "0          F    Manchester City       11    13.68282476067543   \n",
              "1          F          Liverpool        8    7.381280824542046   \n",
              "2        F M          Tottenham        9   5.7016159147024155   \n",
              "3        F M           West Ham        9    6.948418594896793   \n",
              "4          F        Bournemouth        8    9.721119590103626   \n",
              "..       ...                ...      ...                  ...   \n",
              "475      D S            Burnley        0  0.23279432207345963   \n",
              "479    F M S            Burnley        0   0.6547909751534462   \n",
              "482        D  Nottingham Forest        0   0.6556824203580618   \n",
              "483        M        Bournemouth        0  0.08230337873101234   \n",
              "486        S              Luton        0                    0   \n",
              "\n",
              "                  xGChain            xGBuildup  xgdifference  xAdifference  \n",
              "0      16.214465029537678   1.3705047406256199     -2.727500      0.752769  \n",
              "1      14.105848833918571   3.6903739869594574      0.574118     -0.183804  \n",
              "2       13.83394755423069    4.277155740186572      3.537215     -1.840182  \n",
              "3       7.912498477846384   1.4770999029278755      2.051581     -1.279558  \n",
              "4      10.837209552526474   1.8425600491464138     -1.721120      0.042524  \n",
              "..                    ...                  ...           ...           ...  \n",
              "475    0.7400502115488052   0.6570334546267986     -0.232794     -0.083017  \n",
              "479    0.8833713084459305  0.24054411053657532     -0.654791     -0.480966  \n",
              "482     2.888271164149046    2.510409390553832     -0.655682     -0.493345  \n",
              "483    0.9122739285230637   0.8663346916437149     -0.082303     -0.089547  \n",
              "486  0.028225945308804512                    0      0.000000     -0.028226  \n",
              "\n",
              "[439 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fdc4cb89-9ffe-44f5-8a4f-76012becffca\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727500</td>\n",
              "      <td>4</td>\n",
              "      <td>3.247231</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "      <td>-2.727500</td>\n",
              "      <td>0.752769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>16</td>\n",
              "      <td>1408</td>\n",
              "      <td>11</td>\n",
              "      <td>10.425882</td>\n",
              "      <td>7</td>\n",
              "      <td>7.183804</td>\n",
              "      <td>47</td>\n",
              "      <td>36</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>8</td>\n",
              "      <td>7.381280824542046</td>\n",
              "      <td>14.105848833918571</td>\n",
              "      <td>3.6903739869594574</td>\n",
              "      <td>0.574118</td>\n",
              "      <td>-0.183804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>16</td>\n",
              "      <td>1379</td>\n",
              "      <td>10</td>\n",
              "      <td>6.462785</td>\n",
              "      <td>4</td>\n",
              "      <td>5.840182</td>\n",
              "      <td>39</td>\n",
              "      <td>31</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>9</td>\n",
              "      <td>5.7016159147024155</td>\n",
              "      <td>13.83394755423069</td>\n",
              "      <td>4.277155740186572</td>\n",
              "      <td>3.537215</td>\n",
              "      <td>-1.840182</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>15</td>\n",
              "      <td>1350</td>\n",
              "      <td>9</td>\n",
              "      <td>6.948419</td>\n",
              "      <td>1</td>\n",
              "      <td>2.279558</td>\n",
              "      <td>40</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>9</td>\n",
              "      <td>6.948418594896793</td>\n",
              "      <td>7.912498477846384</td>\n",
              "      <td>1.4770999029278755</td>\n",
              "      <td>2.051581</td>\n",
              "      <td>-1.279558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>16</td>\n",
              "      <td>1438</td>\n",
              "      <td>8</td>\n",
              "      <td>9.721120</td>\n",
              "      <td>1</td>\n",
              "      <td>0.957476</td>\n",
              "      <td>48</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>8</td>\n",
              "      <td>9.721119590103626</td>\n",
              "      <td>10.837209552526474</td>\n",
              "      <td>1.8425600491464138</td>\n",
              "      <td>-1.721120</td>\n",
              "      <td>0.042524</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>475</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>6</td>\n",
              "      <td>227</td>\n",
              "      <td>0</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.7400502115488052</td>\n",
              "      <td>0.6570334546267986</td>\n",
              "      <td>-0.232794</td>\n",
              "      <td>-0.083017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>479</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>9</td>\n",
              "      <td>259</td>\n",
              "      <td>0</td>\n",
              "      <td>0.654791</td>\n",
              "      <td>0</td>\n",
              "      <td>0.480966</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6547909751534462</td>\n",
              "      <td>0.8833713084459305</td>\n",
              "      <td>0.24054411053657532</td>\n",
              "      <td>-0.654791</td>\n",
              "      <td>-0.480966</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>482</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>10</td>\n",
              "      <td>883</td>\n",
              "      <td>0</td>\n",
              "      <td>0.655682</td>\n",
              "      <td>0</td>\n",
              "      <td>0.493345</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6556824203580618</td>\n",
              "      <td>2.888271164149046</td>\n",
              "      <td>2.510409390553832</td>\n",
              "      <td>-0.655682</td>\n",
              "      <td>-0.493345</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>483</th>\n",
              "      <td>12149</td>\n",
              "      <td>Alex Scott</td>\n",
              "      <td>3</td>\n",
              "      <td>194</td>\n",
              "      <td>0</td>\n",
              "      <td>0.082303</td>\n",
              "      <td>0</td>\n",
              "      <td>0.089547</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0</td>\n",
              "      <td>0.08230337873101234</td>\n",
              "      <td>0.9122739285230637</td>\n",
              "      <td>0.8663346916437149</td>\n",
              "      <td>-0.082303</td>\n",
              "      <td>-0.089547</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>486</th>\n",
              "      <td>12187</td>\n",
              "      <td>Jordan Clark</td>\n",
              "      <td>5</td>\n",
              "      <td>72</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028226</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028225945308804512</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-0.028226</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>439 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fdc4cb89-9ffe-44f5-8a4f-76012becffca')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-fdc4cb89-9ffe-44f5-8a4f-76012becffca button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-fdc4cb89-9ffe-44f5-8a4f-76012becffca');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-27239580-a760-40fc-94e9-99965e1cba61\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-27239580-a760-40fc-94e9-99965e1cba61')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-27239580-a760-40fc-94e9-99965e1cba61 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/huricane85/FPL-API-Fixture-modeler"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dU1giLdZir3J",
        "outputId": "143d89a5-35a5-49a6-9300-a974be05eca9"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'FPL-API-Fixture-modeler'...\n",
            "remote: Enumerating objects: 96, done.\u001b[K\n",
            "remote: Counting objects: 100% (96/96), done.\u001b[K\n",
            "remote: Compressing objects: 100% (96/96), done.\u001b[K\n",
            "remote: Total 96 (delta 51), reused 0 (delta 0), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (96/96), 5.16 MiB | 6.54 MiB/s, done.\n",
            "Resolving deltas: 100% (51/51), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# read the CSV file from GitHub into a DataFrame\n",
        "url = \"https://raw.githubusercontent.com/ChrisMusson/FPL-ID-Map/main/Master.csv\"\n",
        "df = pd.read_csv(url)\n",
        "\n",
        "# rename the \"22-23\" column to \"id\"\n",
        "df.rename(columns={'22-23': 'id'}, inplace=True)\n",
        "\n",
        "# convert \"id\" and \"understat\" columns to int64 and float64 respectively\n",
        "df['id'] = pd.to_numeric(df['id'], errors='coerce', downcast='integer').astype('Int64')\n",
        "df['understat'] = pd.to_numeric(df['understat'], errors='coerce', downcast='integer').astype('Int64')\n",
        "\n",
        "# filter out rows where \"understat\" is null\n",
        "df = df.dropna(subset=['understat'])\n",
        "\n",
        "# change data type of \"id\" column to float64\n",
        "df['id'] = df['id'].astype('float64')\n",
        "\n",
        "# create a new DataFrame with only the \"understat\" and \"id\" columns\n",
        "new_df = df[['understat', 'id']].dropna(subset=['id']).copy()\n",
        "\n",
        "# display the new DataFrame\n",
        "\n",
        "new_df\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "WRijWphEVPuN",
        "outputId": "fc5d3d86-1a72-4ef5-f0a3-237b65760cd6"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8b223f86-3a23-418a-8073-778ac4cb9fb5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b223f86-3a23-418a-8073-778ac4cb9fb5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8b223f86-3a23-418a-8073-778ac4cb9fb5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8b223f86-3a23-418a-8073-778ac4cb9fb5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-13a88318-3e0b-4335-8b61-7e72a1fd0473\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-13a88318-3e0b-4335-8b61-7e72a1fd0473')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-13a88318-3e0b-4335-8b61-7e72a1fd0473 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "NhQ4dZKdUv36",
        "outputId": "9265a95b-1ffe-4fb0-924a-427ba68d0728"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dd64f9bf-6e96-47ed-9ef9-9d85b3314035\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd64f9bf-6e96-47ed-9ef9-9d85b3314035')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-dd64f9bf-6e96-47ed-9ef9-9d85b3314035 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-dd64f9bf-6e96-47ed-9ef9-9d85b3314035');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-79aafdb7-75fc-4583-bc70-d81cfe05f8f7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-79aafdb7-75fc-4583-bc70-d81cfe05f8f7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-79aafdb7-75fc-4583-bc70-d81cfe05f8f7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df[\"understat\"] = one_game_df[\"understat\"].astype(str).astype(int)\n",
        "understatid2 = new_df\n",
        "understatwithfplid = pd.merge(one_game_df,\n",
        "                     understatid2,\n",
        "                     on ='understat',\n",
        "                     how ='left')\n",
        "understatwithfplid"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 565
        },
        "id": "KmDbXEnfi2v1",
        "outputId": "76c5ab56-8213-479b-8a38-8735aa4da82d"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     understat      player_name games  time  goals_1wks    xG_1wks  \\\n",
              "0         8260   Erling Haaland    15  1305          14  16.727500   \n",
              "1         1250    Mohamed Salah    16  1408          11  10.425882   \n",
              "2          453    Son Heung-Min    16  1379          10   6.462785   \n",
              "3         1776     Jarrod Bowen    15  1350           9   6.948419   \n",
              "4         1679  Dominic Solanke    16  1438           8   9.721120   \n",
              "..         ...              ...   ...   ...         ...        ...   \n",
              "434      11998  Hannes Delcroix     6   227           0   0.232794   \n",
              "435      12094      Mike Trésor     9   259           0   0.654791   \n",
              "436      12123          Murillo    10   883           0   0.655682   \n",
              "437      12149       Alex Scott     3   194           0   0.082303   \n",
              "438      12187     Jordan Clark     5    72           0   0.000000   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks  ... red_cards  \\\n",
              "0               4  3.247231         58              16  ...         0   \n",
              "1               7  7.183804         47              36  ...         0   \n",
              "2               4  5.840182         39              31  ...         0   \n",
              "3               1  2.279558         40              11  ...         0   \n",
              "4               1  0.957476         48              13  ...         0   \n",
              "..            ...       ...        ...             ...  ...       ...   \n",
              "434             0  0.083017          4               2  ...         0   \n",
              "435             0  0.480966          4               4  ...         0   \n",
              "436             0  0.493345          6               4  ...         0   \n",
              "437             0  0.089547          2               1  ...         0   \n",
              "438             0  0.028226          0               1  ...         0   \n",
              "\n",
              "    position         team_title npg_1wks            npxG_1wks  \\\n",
              "0          F    Manchester City       11    13.68282476067543   \n",
              "1          F          Liverpool        8    7.381280824542046   \n",
              "2        F M          Tottenham        9   5.7016159147024155   \n",
              "3        F M           West Ham        9    6.948418594896793   \n",
              "4          F        Bournemouth        8    9.721119590103626   \n",
              "..       ...                ...      ...                  ...   \n",
              "434      D S            Burnley        0  0.23279432207345963   \n",
              "435    F M S            Burnley        0   0.6547909751534462   \n",
              "436        D  Nottingham Forest        0   0.6556824203580618   \n",
              "437        M        Bournemouth        0  0.08230337873101234   \n",
              "438        S              Luton        0                    0   \n",
              "\n",
              "                  xGChain            xGBuildup xgdifference  xAdifference  \\\n",
              "0      16.214465029537678   1.3705047406256199    -2.727500      0.752769   \n",
              "1      14.105848833918571   3.6903739869594574     0.574118     -0.183804   \n",
              "2       13.83394755423069    4.277155740186572     3.537215     -1.840182   \n",
              "3       7.912498477846384   1.4770999029278755     2.051581     -1.279558   \n",
              "4      10.837209552526474   1.8425600491464138    -1.721120      0.042524   \n",
              "..                    ...                  ...          ...           ...   \n",
              "434    0.7400502115488052   0.6570334546267986    -0.232794     -0.083017   \n",
              "435    0.8833713084459305  0.24054411053657532    -0.654791     -0.480966   \n",
              "436     2.888271164149046    2.510409390553832    -0.655682     -0.493345   \n",
              "437    0.9122739285230637   0.8663346916437149    -0.082303     -0.089547   \n",
              "438  0.028225945308804512                    0     0.000000     -0.028226   \n",
              "\n",
              "        id  \n",
              "0    318.0  \n",
              "1    283.0  \n",
              "2    428.0  \n",
              "3    465.0  \n",
              "4     66.0  \n",
              "..     ...  \n",
              "434    NaN  \n",
              "435    NaN  \n",
              "436    NaN  \n",
              "437    NaN  \n",
              "438    NaN  \n",
              "\n",
              "[439 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bc451e3c-0ce1-42da-8bd6-73979067ca5e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>...</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position</th>\n",
              "      <th>team_title</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727500</td>\n",
              "      <td>4</td>\n",
              "      <td>3.247231</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "      <td>-2.727500</td>\n",
              "      <td>0.752769</td>\n",
              "      <td>318.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>16</td>\n",
              "      <td>1408</td>\n",
              "      <td>11</td>\n",
              "      <td>10.425882</td>\n",
              "      <td>7</td>\n",
              "      <td>7.183804</td>\n",
              "      <td>47</td>\n",
              "      <td>36</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>8</td>\n",
              "      <td>7.381280824542046</td>\n",
              "      <td>14.105848833918571</td>\n",
              "      <td>3.6903739869594574</td>\n",
              "      <td>0.574118</td>\n",
              "      <td>-0.183804</td>\n",
              "      <td>283.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>16</td>\n",
              "      <td>1379</td>\n",
              "      <td>10</td>\n",
              "      <td>6.462785</td>\n",
              "      <td>4</td>\n",
              "      <td>5.840182</td>\n",
              "      <td>39</td>\n",
              "      <td>31</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>9</td>\n",
              "      <td>5.7016159147024155</td>\n",
              "      <td>13.83394755423069</td>\n",
              "      <td>4.277155740186572</td>\n",
              "      <td>3.537215</td>\n",
              "      <td>-1.840182</td>\n",
              "      <td>428.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>15</td>\n",
              "      <td>1350</td>\n",
              "      <td>9</td>\n",
              "      <td>6.948419</td>\n",
              "      <td>1</td>\n",
              "      <td>2.279558</td>\n",
              "      <td>40</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>9</td>\n",
              "      <td>6.948418594896793</td>\n",
              "      <td>7.912498477846384</td>\n",
              "      <td>1.4770999029278755</td>\n",
              "      <td>2.051581</td>\n",
              "      <td>-1.279558</td>\n",
              "      <td>465.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>16</td>\n",
              "      <td>1438</td>\n",
              "      <td>8</td>\n",
              "      <td>9.721120</td>\n",
              "      <td>1</td>\n",
              "      <td>0.957476</td>\n",
              "      <td>48</td>\n",
              "      <td>13</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>8</td>\n",
              "      <td>9.721119590103626</td>\n",
              "      <td>10.837209552526474</td>\n",
              "      <td>1.8425600491464138</td>\n",
              "      <td>-1.721120</td>\n",
              "      <td>0.042524</td>\n",
              "      <td>66.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>434</th>\n",
              "      <td>11998</td>\n",
              "      <td>Hannes Delcroix</td>\n",
              "      <td>6</td>\n",
              "      <td>227</td>\n",
              "      <td>0</td>\n",
              "      <td>0.232794</td>\n",
              "      <td>0</td>\n",
              "      <td>0.083017</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>D S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.23279432207345963</td>\n",
              "      <td>0.7400502115488052</td>\n",
              "      <td>0.6570334546267986</td>\n",
              "      <td>-0.232794</td>\n",
              "      <td>-0.083017</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>435</th>\n",
              "      <td>12094</td>\n",
              "      <td>Mike Trésor</td>\n",
              "      <td>9</td>\n",
              "      <td>259</td>\n",
              "      <td>0</td>\n",
              "      <td>0.654791</td>\n",
              "      <td>0</td>\n",
              "      <td>0.480966</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6547909751534462</td>\n",
              "      <td>0.8833713084459305</td>\n",
              "      <td>0.24054411053657532</td>\n",
              "      <td>-0.654791</td>\n",
              "      <td>-0.480966</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>436</th>\n",
              "      <td>12123</td>\n",
              "      <td>Murillo</td>\n",
              "      <td>10</td>\n",
              "      <td>883</td>\n",
              "      <td>0</td>\n",
              "      <td>0.655682</td>\n",
              "      <td>0</td>\n",
              "      <td>0.493345</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6556824203580618</td>\n",
              "      <td>2.888271164149046</td>\n",
              "      <td>2.510409390553832</td>\n",
              "      <td>-0.655682</td>\n",
              "      <td>-0.493345</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>437</th>\n",
              "      <td>12149</td>\n",
              "      <td>Alex Scott</td>\n",
              "      <td>3</td>\n",
              "      <td>194</td>\n",
              "      <td>0</td>\n",
              "      <td>0.082303</td>\n",
              "      <td>0</td>\n",
              "      <td>0.089547</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0</td>\n",
              "      <td>0.08230337873101234</td>\n",
              "      <td>0.9122739285230637</td>\n",
              "      <td>0.8663346916437149</td>\n",
              "      <td>-0.082303</td>\n",
              "      <td>-0.089547</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>438</th>\n",
              "      <td>12187</td>\n",
              "      <td>Jordan Clark</td>\n",
              "      <td>5</td>\n",
              "      <td>72</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028226</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Luton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.028225945308804512</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-0.028226</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>439 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bc451e3c-0ce1-42da-8bd6-73979067ca5e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bc451e3c-0ce1-42da-8bd6-73979067ca5e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bc451e3c-0ce1-42da-8bd6-73979067ca5e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9236a9e2-1a85-484c-8d8f-9a55ae52e9bf\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9236a9e2-1a85-484c-8d8f-9a55ae52e9bf')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9236a9e2-1a85-484c-8d8f-9a55ae52e9bf button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/fixtures/\").read())\n",
        "    fixtures = all_data\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"event\"],\n",
        "            team_converter(x[\"team_h\"]),\n",
        "            team_converter(x[\"team_a\"]),\n",
        "            x[\"kickoff_time\"],\n",
        "\n",
        "        ]\n",
        "        for x in fixtures\n",
        "    ]\n",
        "\n",
        "    with open(\"/fixtures_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"event\",\"team_h\",\"team_a\",\"kickoff_time\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "Y_cV1kyak7XX"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import scipy\n",
        "import numpy as np\n",
        "from numpy import random\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import matplotlib"
      ],
      "metadata": {
        "id": "DXejj-4jjUI-"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "    players = all_data[\"elements\"]\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"id\"],\n",
        "            team_converter(x[\"team\"]),\n",
        "            position_converter(x[\"element_type\"])[0],\n",
        "            x[\"web_name\"],\n",
        "            x[\"now_cost\"] / 10,\n",
        "            x[\"selected_by_percent\"],\n",
        "            float(x[\"expected_goals\"]),  # Convert to float\n",
        "            float(x[\"expected_assists\"]),  # Convert to float\n",
        "            x[\"goals_scored\"],\n",
        "            x[\"assists\"],\n",
        "            x[\"bps\"],\n",
        "            x[\"ict_index\"],\n",
        "            x[\"total_points\"],\n",
        "            x[\"points_per_game\"],\n",
        "            x[\"minutes\"]\n",
        "        ]\n",
        "        for x in players\n",
        "    ]\n",
        "\n",
        "    with open(\"players_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"id\",\"team\", \"pos\", \"name\", \"cost\", \"selected_by_percent\", \"expected_goals\", \"expected_assists\", \"goals_scored\", \"assists\", \"bps\", \"ict_index\",\"points\", \"points_per_game\", \"minutes\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "CKZZPD0xQGLu"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "playerdata = pd.read_csv(\"/content/players_data.csv\")\n",
        "master = playerdata\n",
        "#master = master.dropna()\n",
        "master['apppoint'] = 2\n",
        "master['assistvalue'] = 3\n",
        "#master['BPS90'] = master.bps/(master.minutes/90)\n",
        "master"
      ],
      "metadata": {
        "id": "VOx8tP0bjttO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "e071d5e7-6c35-47a3-8d2f-c7b5fd6f4083"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos          name  cost  \\\n",
              "0      1                  Arsenal   F       Balogun   4.4   \n",
              "1      2                  Arsenal   D        Cédric   3.9   \n",
              "2      3                  Arsenal   M      M.Elneny   4.4   \n",
              "3      4                  Arsenal   M  Fábio Vieira   5.4   \n",
              "4      5                  Arsenal   D       Gabriel   4.9   \n",
              "..   ...                      ...  ..           ...   ...   \n",
              "753  704  Wolverhampton Wanderers   F        Fraser   4.5   \n",
              "754  715  Wolverhampton Wanderers   M    Bellegarde   4.9   \n",
              "755  749  Wolverhampton Wanderers   M   Whittingham   4.5   \n",
              "756  750  Wolverhampton Wanderers   M       Chirewa   4.5   \n",
              "757  751  Wolverhampton Wanderers   D        Hubner   4.0   \n",
              "\n",
              "     selected_by_percent  expected_goals  expected_assists  goals_scored  \\\n",
              "0                    0.2            0.00              0.00             0   \n",
              "1                    0.4            0.00              0.00             0   \n",
              "2                    0.1            0.00              0.00             0   \n",
              "3                    0.1            1.20              0.35             1   \n",
              "4                   15.4            0.75              0.17             0   \n",
              "..                   ...             ...               ...           ...   \n",
              "753                  0.1            0.00              0.00             0   \n",
              "754                  0.0            0.21              0.28             1   \n",
              "755                  0.0            0.00              0.00             0   \n",
              "756                  0.0            0.00              0.00             0   \n",
              "757                  0.0            0.00              0.00             0   \n",
              "\n",
              "     assists  bps  ict_index  points  points_per_game  minutes  apppoint  \\\n",
              "0          0    0        0.0       0              0.0        0         2   \n",
              "1          0    0        0.0       0              0.0        0         2   \n",
              "2          1   12        0.4       4              4.0        1         2   \n",
              "3          3   62       21.9      21              2.6      236         2   \n",
              "4          0  210       32.9      40              2.9     1104         2   \n",
              "..       ...  ...        ...     ...              ...      ...       ...   \n",
              "753        0    0        0.0       0              0.0        0         2   \n",
              "754        1   64       20.4      18              2.2      370         2   \n",
              "755        0    0        0.0       0              0.0        0         2   \n",
              "756        0    0        0.0       0              0.0        0         2   \n",
              "757        0    0        0.0       0              0.0        0         2   \n",
              "\n",
              "     assistvalue  \n",
              "0              3  \n",
              "1              3  \n",
              "2              3  \n",
              "3              3  \n",
              "4              3  \n",
              "..           ...  \n",
              "753            3  \n",
              "754            3  \n",
              "755            3  \n",
              "756            3  \n",
              "757            3  \n",
              "\n",
              "[758 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c9dfd00d-ccf9-48c0-816d-5136840d0796\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Cédric</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>0.4</td>\n",
              "      <td>4</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Fábio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1.20</td>\n",
              "      <td>0.35</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>62</td>\n",
              "      <td>21.9</td>\n",
              "      <td>21</td>\n",
              "      <td>2.6</td>\n",
              "      <td>236</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>4.9</td>\n",
              "      <td>15.4</td>\n",
              "      <td>0.75</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>210</td>\n",
              "      <td>32.9</td>\n",
              "      <td>40</td>\n",
              "      <td>2.9</td>\n",
              "      <td>1104</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>753</th>\n",
              "      <td>704</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>F</td>\n",
              "      <td>Fraser</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>754</th>\n",
              "      <td>715</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Bellegarde</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.21</td>\n",
              "      <td>0.28</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>64</td>\n",
              "      <td>20.4</td>\n",
              "      <td>18</td>\n",
              "      <td>2.2</td>\n",
              "      <td>370</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>755</th>\n",
              "      <td>749</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Whittingham</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>756</th>\n",
              "      <td>750</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Chirewa</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>757</th>\n",
              "      <td>751</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>Hubner</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>758 rows × 17 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c9dfd00d-ccf9-48c0-816d-5136840d0796')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c9dfd00d-ccf9-48c0-816d-5136840d0796 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c9dfd00d-ccf9-48c0-816d-5136840d0796');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-492f6ea5-3429-4e77-8759-d21ff786a55b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-492f6ea5-3429-4e77-8759-d21ff786a55b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-492f6ea5-3429-4e77-8759-d21ff786a55b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "gwfixtures = pd.read_csv(\"/fixtures_data.csv\")\n",
        "import requests\n",
        "import pandas as pd\n",
        "url = 'https://projects.fivethirtyeight.com/soccer-api/club/spi_global_rankings.csv'\n",
        "r = requests.get(url)\n",
        "open('temp.csv', 'wb').write(r.content)\n",
        "spi = pd.read_csv('temp.csv')\n",
        "spi['team_h'] = spi['name']\n",
        "spi['team_a'] = spi['name']\n",
        "spi= spi.replace('Newcastle', 'Newcastle United')\n",
        "spi= spi.replace('Wolverhampton','Wolverhampton Wanderers')\n",
        "spi= spi.replace('Tottenham Hotspur','Tottenham')\n",
        "spi= spi.replace('Leeds United','Leeds')\n",
        "spi= spi.replace('Leicester City','Leicester')\n",
        "spi= spi.replace('West Ham United','West Ham')\n",
        "spi= spi.replace('Brighton and Hove Albion','Brighton')\n",
        "spi= spi.replace('Norwich City','Norwich')\n",
        "spi= spi.replace('AFC Bournemouth','Bournemouth')\n",
        "Left_join = pd.merge(gwfixtures,\n",
        "                     spi,\n",
        "                     on ='team_h',\n",
        "                     how ='left')\n",
        "homespi = Left_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'league',\n",
        "  'off',\n",
        " 'def',\n",
        " 'name',\n",
        " 'team_a_y',])\n",
        "homespi.rename(columns = {'team_a_x':'team_a', 'spi':'Home SPI'}, inplace = True)\n",
        "away_join = pd.merge(homespi,\n",
        "                     spi,\n",
        "                     on ='team_a',\n",
        "                     how ='left')\n",
        "homesawayspi = away_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'name',\n",
        " 'league',\n",
        " 'off',\n",
        " 'def',\n",
        " 'team_h_y'])\n",
        "homesawayspi.rename(columns = {'team_h_x':'team_h', 'spi':'Away SPI'}, inplace = True)\n",
        "homesawayspi['Event'] = homesawayspi['event'].astype(str)\n",
        "gw17 = homesawayspi.query('Event==\"17.0\"')\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw17['League_Average']  = laverage\n",
        "gw17.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw17['home_difference'] = gw17.HomeSPI - gw17.League_Average\n",
        "gw17['away_difference'] = gw17.AwaySPI - gw17.League_Average\n",
        "gw17['home_adjustment'] = (gw17.home_difference + gw17.League_Average)/gw17.League_Average\n",
        "gw17['away_adjustment'] = (gw17.away_difference + gw17.League_Average)/gw17.League_Average\n",
        "gw17adjustments = gw17[['team_h', 'home_adjustment']].append(gw17[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw17adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw17adjustments"
      ],
      "metadata": {
        "id": "0oqPsFQJjyR0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "77f2c7fe-244b-4ba7-a364-01a4b8328b7b"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-22-14fe1c95cfb8>:49: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
            "<ipython-input-22-14fe1c95cfb8>:52: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw17['League_Average']  = laverage\n",
            "<ipython-input-22-14fe1c95cfb8>:53: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw17.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
            "<ipython-input-22-14fe1c95cfb8>:54: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw17['home_difference'] = gw17.HomeSPI - gw17.League_Average\n",
            "<ipython-input-22-14fe1c95cfb8>:55: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw17['away_difference'] = gw17.AwaySPI - gw17.League_Average\n",
            "<ipython-input-22-14fe1c95cfb8>:56: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw17['home_adjustment'] = (gw17.home_difference + gw17.League_Average)/gw17.League_Average\n",
            "<ipython-input-22-14fe1c95cfb8>:57: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw17['away_adjustment'] = (gw17.away_difference + gw17.League_Average)/gw17.League_Average\n",
            "<ipython-input-22-14fe1c95cfb8>:58: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw17adjustments = gw17[['team_h', 'home_adjustment']].append(gw17[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  home_adjustment\n",
              "0         Nottingham Forest         0.780000\n",
              "1               Bournemouth         0.827943\n",
              "2                   Chelsea         1.053063\n",
              "3           Manchester City         1.278461\n",
              "4          Newcastle United         1.163122\n",
              "5                   Burnley         0.874634\n",
              "6                   Arsenal         1.166179\n",
              "7                 Brentford         1.071962\n",
              "8                  West Ham         0.988306\n",
              "9                 Liverpool         1.166318\n",
              "10                Tottenham         1.002480\n",
              "11               Luton Town         0.770968\n",
              "12         Sheffield United         0.786115\n",
              "13           Crystal Palace         1.020824\n",
              "14                   Fulham         0.948007\n",
              "15                  Everton         0.884223\n",
              "16                 Brighton         1.123934\n",
              "17              Aston Villa         1.101978\n",
              "18  Wolverhampton Wanderers         0.820717\n",
              "19        Manchester United         1.098921"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-93095c9f-dce7-48f8-9df1-05223f70920e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>home_adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.780000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.827943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.053063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.278461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.163122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.874634</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.166179</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.071962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.988306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.166318</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.002480</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.770968</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.786115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.020824</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.948007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.884223</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.123934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.101978</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.820717</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.098921</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-93095c9f-dce7-48f8-9df1-05223f70920e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-93095c9f-dce7-48f8-9df1-05223f70920e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-93095c9f-dce7-48f8-9df1-05223f70920e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a76c65a1-8427-4827-beb6-760bd81f120e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a76c65a1-8427-4827-beb6-760bd81f120e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a76c65a1-8427-4827-beb6-760bd81f120e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdf = pd.merge(master,\n",
        "                     gw17adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwd = rawdf.query('pos==\"F\"')\n",
        "rawfwd['xP'] = ((rawfwd.expected_goals * 4/16)+(rawfwd.expected_assists * 3/16) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
        "rawfwd = rawfwd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "rawmd = rawdf.query('pos==\"M\"')\n",
        "rawmd['xP'] = ((rawmd.expected_goals * 5/16)+(rawmd.expected_assists * 3/16) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
        "rawmd = rawmd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "epltabledef['xCSP'] = (4 - (epltabledef.xGA * 4/16))/4\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgk= rawdfcs.query('pos==\"G\"')\n",
        "rawgk['xP'] = ((rawgk.xCSP)+ (rawgk.apppoint)) * rawgk.home_adjustment\n",
        "#rawgk['xP'] = rawgk.apppoint * rawgk.home_adjustment\n",
        "rawgk = rawgk.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "'home_adjustment'])\n",
        "rawdef= rawdfcs.query('pos==\"D\"')\n",
        "rawdef['xP'] = ((rawdef.expected_goals * 6/16)+(rawdef.expected_assists * 3/16) +(rawdef.xCSP)+ (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "#rawdef['xP'] = ((rawdef.expected_goals * 6/3)+(rawdef.expected_assists * 3/3) + (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "rawdef = rawdef.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        " 'home_adjustment'])\n",
        "rawallplayers = pd.concat([rawfwd, rawmd, rawdef, rawgk], ignore_index=True)\n",
        "rawallplayers\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "AWnYpVh5kDzO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 875
        },
        "outputId": "fc5bc11d-643c-498f-9dd1-00b80a04b293"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-23-4d5c38f0f34f>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawfwd['xP'] = ((rawfwd.expected_goals * 4/16)+(rawfwd.expected_assists * 3/16) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
            "<ipython-input-23-4d5c38f0f34f>:15: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawmd['xP'] = ((rawmd.expected_goals * 5/16)+(rawmd.expected_assists * 3/16) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
            "<ipython-input-23-4d5c38f0f34f>:48: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
            "<ipython-input-23-4d5c38f0f34f>:57: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawgk['xP'] = ((rawgk.xCSP)+ (rawgk.apppoint)) * rawgk.home_adjustment\n",
            "<ipython-input-23-4d5c38f0f34f>:68: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawdef['xP'] = ((rawdef.expected_goals * 6/16)+(rawdef.expected_assists * 3/16) +(rawdef.xCSP)+ (rawdef.apppoint) * rawdef.home_adjustment)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id pos     name  cost  selected_by_percent  goals_scored  assists  bps  \\\n",
              "0      1   F  Balogun   4.4                  0.2             0        0    0   \n",
              "1      8   F  G.Jesus   7.9                  3.9             2        2  103   \n",
              "2     13   F  Nketiah   5.5                  6.2             5        2  162   \n",
              "3     39   F    Davis   4.9                  0.1             0        0    0   \n",
              "4     44   F    Duran   5.0                  0.2             2        0   60   \n",
              "..   ...  ..      ...   ...                  ...           ...      ...  ...   \n",
              "753  647   G    Anang   4.0                  0.1             0        0    0   \n",
              "754  546   G  Bentley   3.9                  1.3             0        0   51   \n",
              "755  564   G     King   4.0                  0.7             0        0    0   \n",
              "756  569   G  José Sá   5.0                  1.4             0        0  236   \n",
              "757  571   G   Šarkić   4.0                  0.3             0        0    0   \n",
              "\n",
              "     ict_index  points  points_per_game  minutes        xP     xCSP  \n",
              "0          0.0       0              0.0        0  2.332358      NaN  \n",
              "1         64.2      35              3.2      664  3.556846      NaN  \n",
              "2         56.4      53              3.5      821  3.493435      NaN  \n",
              "3          0.0       0              0.0        0  2.203956      NaN  \n",
              "4         14.4      17              1.9       95  2.420908      NaN  \n",
              "..         ...     ...              ...      ...       ...      ...  \n",
              "753        0.0       0              0.0        0  1.204498 -0.78125  \n",
              "754        4.8      15              7.5      157  1.061802 -0.70625  \n",
              "755        0.0       0              0.0        0  1.061802 -0.70625  \n",
              "756       35.1      40              2.7     1282  1.061802 -0.70625  \n",
              "757        0.0       0              0.0        0  1.061802 -0.70625  \n",
              "\n",
              "[758 rows x 14 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-370d2020-9e28-4df1-b0e7-7f92eada238d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>xP</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.332358</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>3.9</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>103</td>\n",
              "      <td>64.2</td>\n",
              "      <td>35</td>\n",
              "      <td>3.2</td>\n",
              "      <td>664</td>\n",
              "      <td>3.556846</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.2</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>162</td>\n",
              "      <td>56.4</td>\n",
              "      <td>53</td>\n",
              "      <td>3.5</td>\n",
              "      <td>821</td>\n",
              "      <td>3.493435</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.203956</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>14.4</td>\n",
              "      <td>17</td>\n",
              "      <td>1.9</td>\n",
              "      <td>95</td>\n",
              "      <td>2.420908</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>753</th>\n",
              "      <td>647</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.204498</td>\n",
              "      <td>-0.78125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>754</th>\n",
              "      <td>546</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>51</td>\n",
              "      <td>4.8</td>\n",
              "      <td>15</td>\n",
              "      <td>7.5</td>\n",
              "      <td>157</td>\n",
              "      <td>1.061802</td>\n",
              "      <td>-0.70625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>755</th>\n",
              "      <td>564</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.061802</td>\n",
              "      <td>-0.70625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>756</th>\n",
              "      <td>569</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>236</td>\n",
              "      <td>35.1</td>\n",
              "      <td>40</td>\n",
              "      <td>2.7</td>\n",
              "      <td>1282</td>\n",
              "      <td>1.061802</td>\n",
              "      <td>-0.70625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>757</th>\n",
              "      <td>571</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.061802</td>\n",
              "      <td>-0.70625</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>758 rows × 14 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-370d2020-9e28-4df1-b0e7-7f92eada238d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-370d2020-9e28-4df1-b0e7-7f92eada238d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-370d2020-9e28-4df1-b0e7-7f92eada238d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-145405bb-5add-4eb6-bbeb-1f10bb66e178\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-145405bb-5add-4eb6-bbeb-1f10bb66e178')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-145405bb-5add-4eb6-bbeb-1f10bb66e178 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawgk1= rawdfcs.query('pos==\"G\"')\n",
        "rawgk1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 493
        },
        "id": "z3FgmhoCb3GG",
        "outputId": "b0a694f8-5a4b-464f-942e-207f3f1fd290"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos       name  cost  selected_by_percent  \\\n",
              "15    17                  Arsenal   G   Ramsdale   4.6                  6.8   \n",
              "16    18                  Arsenal   G  Rúnarsson   4.0                  0.1   \n",
              "26   113                  Arsenal   G       Raya   4.9                  5.6   \n",
              "30   646                  Arsenal   G       Hein   4.0                  0.1   \n",
              "50    49              Aston Villa   G   Martinez   5.0                  8.9   \n",
              "..   ...                      ...  ..        ...   ...                  ...   \n",
              "717  647                 West Ham   G      Anang   4.0                  0.1   \n",
              "723  546  Wolverhampton Wanderers   G    Bentley   3.9                  1.3   \n",
              "739  564  Wolverhampton Wanderers   G       King   4.0                  0.7   \n",
              "743  569  Wolverhampton Wanderers   G    José Sá   5.0                  1.4   \n",
              "745  571  Wolverhampton Wanderers   G     Šarkić   4.0                  0.3   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "15              0.0              0.01             0        0   77        5.6   \n",
              "16              0.0              0.00             0        0    0        0.0   \n",
              "26              0.0              0.02             0        0  181       15.1   \n",
              "30              0.0              0.00             0        0    0        0.0   \n",
              "50              0.0              0.00             0        0  290       39.1   \n",
              "..              ...               ...           ...      ...  ...        ...   \n",
              "717             0.0              0.00             0        0    0        0.0   \n",
              "723             0.0              0.00             0        0   51        4.8   \n",
              "739             0.0              0.00             0        0    0        0.0   \n",
              "743             0.0              0.00             0        0  236       35.1   \n",
              "745             0.0              0.00             0        0    0        0.0   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  home_adjustment  \\\n",
              "15       17              3.4      450         2            3         1.166179   \n",
              "16        0              0.0        0         2            3         1.166179   \n",
              "26       40              3.6      990         2            3         1.166179   \n",
              "30        0              0.0        0         2            3         1.166179   \n",
              "50       55              3.7     1350         2            3         1.101978   \n",
              "..      ...              ...      ...       ...          ...              ...   \n",
              "717       0              0.0        0         2            3         0.988306   \n",
              "723      15              7.5      157         2            3         0.820717   \n",
              "739       0              0.0        0         2            3         0.820717   \n",
              "743      40              2.7     1282         2            3         0.820717   \n",
              "745       0              0.0        0         2            3         0.820717   \n",
              "\n",
              "      xGA     xCSP  \n",
              "15   12.1  0.24375  \n",
              "16   12.1  0.24375  \n",
              "26   12.1  0.24375  \n",
              "30   12.1  0.24375  \n",
              "50   22.2 -0.38750  \n",
              "..    ...      ...  \n",
              "717  28.5 -0.78125  \n",
              "723  27.3 -0.70625  \n",
              "739  27.3 -0.70625  \n",
              "743  27.3 -0.70625  \n",
              "745  27.3 -0.70625  \n",
              "\n",
              "[87 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-34a74f30-827c-445d-939b-ca69a86ce47f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>17</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Ramsdale</td>\n",
              "      <td>4.6</td>\n",
              "      <td>6.8</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>77</td>\n",
              "      <td>5.6</td>\n",
              "      <td>17</td>\n",
              "      <td>3.4</td>\n",
              "      <td>450</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>12.1</td>\n",
              "      <td>0.24375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>18</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Rúnarsson</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>12.1</td>\n",
              "      <td>0.24375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>113</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Raya</td>\n",
              "      <td>4.9</td>\n",
              "      <td>5.6</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>181</td>\n",
              "      <td>15.1</td>\n",
              "      <td>40</td>\n",
              "      <td>3.6</td>\n",
              "      <td>990</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>12.1</td>\n",
              "      <td>0.24375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>646</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Hein</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>12.1</td>\n",
              "      <td>0.24375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>49</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>G</td>\n",
              "      <td>Martinez</td>\n",
              "      <td>5.0</td>\n",
              "      <td>8.9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>290</td>\n",
              "      <td>39.1</td>\n",
              "      <td>55</td>\n",
              "      <td>3.7</td>\n",
              "      <td>1350</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>22.2</td>\n",
              "      <td>-0.38750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>717</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>28.5</td>\n",
              "      <td>-0.78125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>723</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>51</td>\n",
              "      <td>4.8</td>\n",
              "      <td>15</td>\n",
              "      <td>7.5</td>\n",
              "      <td>157</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>27.3</td>\n",
              "      <td>-0.70625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>739</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>27.3</td>\n",
              "      <td>-0.70625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>743</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>236</td>\n",
              "      <td>35.1</td>\n",
              "      <td>40</td>\n",
              "      <td>2.7</td>\n",
              "      <td>1282</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>27.3</td>\n",
              "      <td>-0.70625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>745</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>27.3</td>\n",
              "      <td>-0.70625</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>87 rows × 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-34a74f30-827c-445d-939b-ca69a86ce47f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-34a74f30-827c-445d-939b-ca69a86ce47f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-34a74f30-827c-445d-939b-ca69a86ce47f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-89f96b13-532a-45e6-8550-d7ca421f0faf\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-89f96b13-532a-45e6-8550-d7ca421f0faf')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-89f96b13-532a-45e6-8550-d7ca421f0faf button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter"
      ],
      "metadata": {
        "id": "ONZy1SvCDu6y"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "writer = ExcelWriter('notes.xlsx')"
      ],
      "metadata": {
        "id": "iubZBRlVEhiz"
      },
      "execution_count": 26,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawallplayers.to_excel(writer, sheet_name='Sheet1')\n",
        "gw17adjustments.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "slYEIma_E0uP",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fdc9ae52-485f-419f-ccab-8c64c3435f9c"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-28-7179580fb6bc>:6: FutureWarning: save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "  writer.save()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwfixtures"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "3udskoGrT73A",
        "outputId": "a28d9368-3259-44d1-d061-bde1186ec43b"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     event            team_h                   team_a          kickoff_time\n",
              "0      NaN   Manchester City                Brentford                   NaN\n",
              "1      1.0           Burnley          Manchester City  2023-08-11T19:00:00Z\n",
              "2      1.0           Arsenal        Nottingham Forest  2023-08-12T12:00:00Z\n",
              "3      1.0       Bournemouth                 West Ham  2023-08-12T14:00:00Z\n",
              "4      1.0          Brighton               Luton Town  2023-08-12T14:00:00Z\n",
              "..     ...               ...                      ...                   ...\n",
              "375   38.0    Crystal Palace              Aston Villa  2024-05-19T15:00:00Z\n",
              "376   38.0         Liverpool  Wolverhampton Wanderers  2024-05-19T15:00:00Z\n",
              "377   38.0        Luton Town                   Fulham  2024-05-19T15:00:00Z\n",
              "378   38.0   Manchester City                 West Ham  2024-05-19T15:00:00Z\n",
              "379   38.0  Sheffield United                Tottenham  2024-05-19T15:00:00Z\n",
              "\n",
              "[380 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-668c12c3-a249-4624-b237-6d9981ee40bb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>event</th>\n",
              "      <th>team_h</th>\n",
              "      <th>team_a</th>\n",
              "      <th>kickoff_time</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2023-08-11T19:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>2023-08-12T12:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2023-08-12T14:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>2023-08-12T14:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>375</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>376</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>379</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>380 rows × 4 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-668c12c3-a249-4624-b237-6d9981ee40bb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-668c12c3-a249-4624-b237-6d9981ee40bb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-668c12c3-a249-4624-b237-6d9981ee40bb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9fbf0d04-2f61-4b3b-8533-865d9f29a6f4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9fbf0d04-2f61-4b3b-8533-865d9f29a6f4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9fbf0d04-2f61-4b3b-8533-865d9f29a6f4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfallgw = pd.merge(master,\n",
        "                     gw17adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwdallgw = rawdfallgw.query('pos==\"F\"')\n",
        "rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/16)+(rawfwdallgw.expected_assists * 3/16) + (rawfwdallgw.apppoint))\n",
        "rawfwdallgw = rawfwdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "rawmdallgw = rawdfallgw.query('pos==\"M\"')\n",
        "rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/16)+(rawmdallgw.expected_assists * 3/16) + (rawmdallgw.apppoint))\n",
        "rawmdallgw = rawmdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "epltabledef['xCSP'] = ((4 - (epltabledef.xGA * 4/16))/4) + 0.75\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgkallgw= rawdfcs.query('pos==\"G\"')\n",
        "#rawgkallgw['xPallgw'] = (rawgkallgw.apppoint)\n",
        "rawgkallgw['xPallgw'] = ((rawgkallgw.xCSP)+ (rawgkallgw.apppoint))\n",
        "rawgkallgw = rawgkallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        "  'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "])\n",
        "rawdefallgw= rawdfcs.query('pos==\"D\"')\n",
        "rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/16)+(rawdefallgw.expected_assists * 3/16) +(rawdefallgw.xCSP)+ (rawdefallgw.apppoint)\n",
        "#rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/3)+(rawdefallgw.expected_assists * 3/3) + (rawdefallgw.apppoint)\n",
        "rawdefallgw = rawdefallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',])\n",
        "rawallplayersallgw = pd.concat([rawfwdallgw, rawmdallgw, rawdefallgw, rawgkallgw], ignore_index=True)\n",
        "rawallplayersallgw\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 875
        },
        "id": "xxPTwE3TZZC0",
        "outputId": "72003a34-1f72-4b78-cef4-c5bf58512919"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-30-547a578ad490>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/16)+(rawfwdallgw.expected_assists * 3/16) + (rawfwdallgw.apppoint))\n",
            "<ipython-input-30-547a578ad490>:14: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/16)+(rawmdallgw.expected_assists * 3/16) + (rawmdallgw.apppoint))\n",
            "<ipython-input-30-547a578ad490>:46: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
            "<ipython-input-30-547a578ad490>:56: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawgkallgw['xPallgw'] = ((rawgkallgw.xCSP)+ (rawgkallgw.apppoint))\n",
            "<ipython-input-30-547a578ad490>:65: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/16)+(rawdefallgw.expected_assists * 3/16) +(rawdefallgw.xCSP)+ (rawdefallgw.apppoint)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  3.9   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  6.2   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "753  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "754  546  Wolverhampton Wanderers   G  Bentley   3.9                  1.3   \n",
              "755  564  Wolverhampton Wanderers   G     King   4.0                  0.7   \n",
              "756  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.4   \n",
              "757  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  points  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0       0              0.0        0   \n",
              "1               2        2  103       64.2      35              3.2      664   \n",
              "2               5        2  162       56.4      53              3.5      821   \n",
              "3               0        0    0        0.0       0              0.0        0   \n",
              "4               2        0   60       14.4      17              1.9       95   \n",
              "..            ...      ...  ...        ...     ...              ...      ...   \n",
              "753             0        0    0        0.0       0              0.0        0   \n",
              "754             0        0   51        4.8      15              7.5      157   \n",
              "755             0        0    0        0.0       0              0.0        0   \n",
              "756             0        0  236       35.1      40              2.7     1282   \n",
              "757             0        0    0        0.0       0              0.0        0   \n",
              "\n",
              "     home_adjustment   xPallgw     xCSP  \n",
              "0           1.166179  2.000000      NaN  \n",
              "1           1.166179  3.050000      NaN  \n",
              "2           1.166179  2.995625      NaN  \n",
              "3           1.101978  2.000000      NaN  \n",
              "4           1.101978  2.196875      NaN  \n",
              "..               ...       ...      ...  \n",
              "753         0.988306  1.968750 -0.03125  \n",
              "754         0.820717  2.043750  0.04375  \n",
              "755         0.820717  2.043750  0.04375  \n",
              "756         0.820717  2.043750  0.04375  \n",
              "757         0.820717  2.043750  0.04375  \n",
              "\n",
              "[758 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-258db25b-2858-4555-a228-50b81a71b311\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>3.9</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>103</td>\n",
              "      <td>64.2</td>\n",
              "      <td>35</td>\n",
              "      <td>3.2</td>\n",
              "      <td>664</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>3.050000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.2</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>162</td>\n",
              "      <td>56.4</td>\n",
              "      <td>53</td>\n",
              "      <td>3.5</td>\n",
              "      <td>821</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.995625</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>14.4</td>\n",
              "      <td>17</td>\n",
              "      <td>1.9</td>\n",
              "      <td>95</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.196875</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>753</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>1.968750</td>\n",
              "      <td>-0.03125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>754</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>51</td>\n",
              "      <td>4.8</td>\n",
              "      <td>15</td>\n",
              "      <td>7.5</td>\n",
              "      <td>157</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.043750</td>\n",
              "      <td>0.04375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>755</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.043750</td>\n",
              "      <td>0.04375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>756</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>236</td>\n",
              "      <td>35.1</td>\n",
              "      <td>40</td>\n",
              "      <td>2.7</td>\n",
              "      <td>1282</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.043750</td>\n",
              "      <td>0.04375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>757</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.043750</td>\n",
              "      <td>0.04375</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>758 rows × 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-258db25b-2858-4555-a228-50b81a71b311')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-258db25b-2858-4555-a228-50b81a71b311 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-258db25b-2858-4555-a228-50b81a71b311');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8bdaaa15-c5c1-42ba-b69a-d42874285cd7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8bdaaa15-c5c1-42ba-b69a-d42874285cd7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8bdaaa15-c5c1-42ba-b69a-d42874285cd7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawmdallgw"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "ZtNrmQMhefCc",
        "outputId": "782b5e44-f346-4294-b4c5-ff21f6affd15"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos             name  cost  \\\n",
              "2      3                  Arsenal   M         M.Elneny   4.4   \n",
              "3      4                  Arsenal   M     Fábio Vieira   5.4   \n",
              "5      6                  Arsenal   M          Havertz   7.1   \n",
              "7      9                  Arsenal   M         Jorginho   5.3   \n",
              "9     11                  Arsenal   M       Marquinhos   4.5   \n",
              "..   ...                      ...  ..              ...   ...   \n",
              "748  574  Wolverhampton Wanderers   M  Boubacar Traore   4.4   \n",
              "752  698  Wolverhampton Wanderers   M         González   5.0   \n",
              "754  715  Wolverhampton Wanderers   M       Bellegarde   4.9   \n",
              "755  749  Wolverhampton Wanderers   M      Whittingham   4.5   \n",
              "756  750  Wolverhampton Wanderers   M          Chirewa   4.5   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  points  \\\n",
              "2                    0.1             0        1   12        0.4       4   \n",
              "3                    0.1             1        3   62       21.9      21   \n",
              "5                    1.7             3        1  120       62.0      41   \n",
              "7                    0.2             0        0   66       12.4      15   \n",
              "9                    0.0             0        0    0        0.0       0   \n",
              "..                   ...           ...      ...  ...        ...     ...   \n",
              "748                  0.4             0        0   57       10.2      12   \n",
              "752                  0.0             0        0    0        0.0       0   \n",
              "754                  0.0             1        1   64       20.4      18   \n",
              "755                  0.0             0        0    0        0.0       0   \n",
              "756                  0.0             0        0    0        0.0       0   \n",
              "\n",
              "     points_per_game  minutes  home_adjustment   xPallgw  \n",
              "2                4.0        1         1.166179  2.000000  \n",
              "3                2.6      236         1.166179  2.440625  \n",
              "5                2.6      914         1.166179  3.305625  \n",
              "7                1.4      383         1.166179  2.084375  \n",
              "9                0.0        0         1.166179  2.000000  \n",
              "..               ...      ...              ...       ...  \n",
              "748              1.1      376         0.820717  2.065000  \n",
              "752              0.0        0         0.820717  2.000000  \n",
              "754              2.2      370         0.820717  2.118125  \n",
              "755              0.0        0         0.820717  2.000000  \n",
              "756              0.0        0         0.820717  2.000000  \n",
              "\n",
              "[328 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9d8ebe7d-8e4f-46d0-8b50-22a8ac82a802\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>0.4</td>\n",
              "      <td>4</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Fábio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>62</td>\n",
              "      <td>21.9</td>\n",
              "      <td>21</td>\n",
              "      <td>2.6</td>\n",
              "      <td>236</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.440625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.7</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>120</td>\n",
              "      <td>62.0</td>\n",
              "      <td>41</td>\n",
              "      <td>2.6</td>\n",
              "      <td>914</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>3.305625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>9</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Jorginho</td>\n",
              "      <td>5.3</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>66</td>\n",
              "      <td>12.4</td>\n",
              "      <td>15</td>\n",
              "      <td>1.4</td>\n",
              "      <td>383</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.084375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>11</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Marquinhos</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>748</th>\n",
              "      <td>574</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Boubacar Traore</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>57</td>\n",
              "      <td>10.2</td>\n",
              "      <td>12</td>\n",
              "      <td>1.1</td>\n",
              "      <td>376</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.065000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>752</th>\n",
              "      <td>698</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>González</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>754</th>\n",
              "      <td>715</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Bellegarde</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>64</td>\n",
              "      <td>20.4</td>\n",
              "      <td>18</td>\n",
              "      <td>2.2</td>\n",
              "      <td>370</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.118125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>755</th>\n",
              "      <td>749</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Whittingham</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>756</th>\n",
              "      <td>750</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Chirewa</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>328 rows × 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d8ebe7d-8e4f-46d0-8b50-22a8ac82a802')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9d8ebe7d-8e4f-46d0-8b50-22a8ac82a802 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9d8ebe7d-8e4f-46d0-8b50-22a8ac82a802');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-127d8cbc-2806-4d14-a8bf-4332404d86e3\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-127d8cbc-2806-4d14-a8bf-4332404d86e3')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-127d8cbc-2806-4d14-a8bf-4332404d86e3 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw2blanks = [['Burnley', 0], ['Luton Town', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "blanks2 = pd.DataFrame(gw2blanks, columns=['team', 'gw2adjustment'])\n",
        "blanks2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "xkGffHD0iXWI",
        "outputId": "c0aaa7f4-a5d2-4f8d-9942-3a087d2e7f82"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         team  gw2adjustment\n",
              "0     Burnley              0\n",
              "1  Luton Town              0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-05a97be1-3ee3-42c8-bc98-f8f0e6354d18\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw2adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-05a97be1-3ee3-42c8-bc98-f8f0e6354d18')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-05a97be1-3ee3-42c8-bc98-f8f0e6354d18 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-05a97be1-3ee3-42c8-bc98-f8f0e6354d18');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5413b2d0-b4a3-4915-9baf-3078c03259f1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5413b2d0-b4a3-4915-9baf-3078c03259f1')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5413b2d0-b4a3-4915-9baf-3078c03259f1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw2adjustments = pd.concat([gw2adjustments, blanks2])\n",
        "#gw2adjustments = gw2adjustments.reset_index(drop=True)\n",
        "#gw2adjustments"
      ],
      "metadata": {
        "id": "JNr3eV5Rir58"
      },
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "##gw3blanks = [['Newcastle United', 0], ['Manchester United', 0], ['Brentford', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "##blanks = pd.DataFrame(gw3blanks, columns=['team', 'gw3adjustment'])\n",
        "##blanks"
      ],
      "metadata": {
        "id": "iCizQgwMD84B"
      },
      "execution_count": 34,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw19 = homesawayspi.query('Event==\"19.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw19['League_Average']  = laverage\n",
        "gw19.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw19['home_difference'] = gw19.HomeSPI - gw19.League_Average\n",
        "gw19['away_difference'] = gw19.AwaySPI - gw19.League_Average\n",
        "gw19['home_adjustment'] = (gw19.home_difference - gw19.away_difference + gw19.League_Average)/gw19.League_Average\n",
        "gw19['away_adjustment'] = (gw19.away_difference - gw19.home_difference+ gw19.League_Average)/gw19.League_Average\n",
        "gw19adjustments = gw19[['team_h', 'home_adjustment']].append(gw19[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw19adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw19adjustments.rename(columns = {'home_adjustment':'gw19adjustment'}, inplace = True)\n",
        "gw19adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "pzyah3Z-kgct",
        "outputId": "88d09bd5-88dc-4e0b-ddbc-95af4521b035"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-35-8b6609baa88b>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw19adjustments = gw19[['team_h', 'home_adjustment']].append(gw19[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw19adjustment\n",
              "0          Newcastle United        1.383122\n",
              "1               Bournemouth        0.879936\n",
              "2          Sheffield United        1.015147\n",
              "3                   Burnley        0.708316\n",
              "4         Manchester United        0.996943\n",
              "5                 Brentford        1.251245\n",
              "6                   Chelsea        1.032239\n",
              "7                   Everton        0.605761\n",
              "8                  Brighton        1.121454\n",
              "9                   Arsenal        1.177873\n",
              "10        Nottingham Forest        0.616878\n",
              "11                   Fulham        1.120064\n",
              "12               Luton Town        0.984853\n",
              "13                Liverpool        1.291684\n",
              "14              Aston Villa        1.003057\n",
              "15  Wolverhampton Wanderers        0.748755\n",
              "16           Crystal Palace        0.967761\n",
              "17          Manchester City        1.394239\n",
              "18                Tottenham        0.878546\n",
              "19                 West Ham        0.822127"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-92f64c79-fbf7-45a7-bab7-2dba3435ccd1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw19adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.383122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.879936</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>1.015147</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.708316</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0.996943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.251245</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.032239</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.605761</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.121454</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.177873</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.616878</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.120064</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.984853</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.291684</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.003057</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.748755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.967761</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.394239</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.878546</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.822127</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-92f64c79-fbf7-45a7-bab7-2dba3435ccd1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-92f64c79-fbf7-45a7-bab7-2dba3435ccd1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-92f64c79-fbf7-45a7-bab7-2dba3435ccd1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a3f2dffd-8296-4129-a8a6-46ff15410f98\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a3f2dffd-8296-4129-a8a6-46ff15410f98')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a3f2dffd-8296-4129-a8a6-46ff15410f98 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw20 = homesawayspi.query('Event==\"20.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw20['League_Average']  = laverage\n",
        "gw20.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw20['home_difference'] = gw20.HomeSPI - gw20.League_Average\n",
        "gw20['away_difference'] = gw20.AwaySPI - gw20.League_Average\n",
        "gw20['home_adjustment'] = (gw20.home_difference - gw20.away_difference + gw20.League_Average)/gw20.League_Average\n",
        "gw20['away_adjustment'] = (gw20.away_difference - gw20.home_difference+ gw20.League_Average)/gw20.League_Average\n",
        "gw20adjustments = gw20[['team_h', 'home_adjustment']].append(gw20[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw20adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw20adjustments.rename(columns = {'home_adjustment':'gw20adjustment'}, inplace = True)\n",
        "gw20adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "7uE1H7R4Gems",
        "outputId": "3c52b370-25ed-44c1-bc6d-be11f84085e3"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-36-e9b6b4f13a81>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw20adjustments = gw20[['team_h', 'home_adjustment']].append(gw20[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw20adjustment\n",
              "0                Luton Town        0.717905\n",
              "1               Aston Villa        1.227344\n",
              "2            Crystal Palace        0.948862\n",
              "3           Manchester City        1.492347\n",
              "4   Wolverhampton Wanderers        0.936494\n",
              "5         Nottingham Forest        0.681079\n",
              "6                    Fulham        0.781828\n",
              "7                 Tottenham        1.174538\n",
              "8                 Liverpool        1.003196\n",
              "9                  West Ham        0.864372\n",
              "10                  Chelsea        1.282095\n",
              "11                  Burnley        0.772656\n",
              "12                Brentford        1.051138\n",
              "13         Sheffield United        0.507653\n",
              "14                  Everton        1.063506\n",
              "15        Manchester United        1.318921\n",
              "16                  Arsenal        1.218172\n",
              "17              Bournemouth        0.825462\n",
              "18         Newcastle United        0.996804\n",
              "19                 Brighton        1.135628"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2634f1b2-3ec4-4032-87fb-e656a1de930d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw20adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.227344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.948862</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.492347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.936494</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.681079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.781828</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.174538</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.003196</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.864372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.772656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.051138</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.507653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.063506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.318921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.218172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.825462</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.996804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.135628</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2634f1b2-3ec4-4032-87fb-e656a1de930d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2634f1b2-3ec4-4032-87fb-e656a1de930d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2634f1b2-3ec4-4032-87fb-e656a1de930d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-187acd04-c916-423a-8acd-9734ec06c4e2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-187acd04-c916-423a-8acd-9734ec06c4e2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-187acd04-c916-423a-8acd-9734ec06c4e2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5blanks = [['Chelsea', 0], ['Manchester United', 0], ['Manchester City', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "#blanks32 = pd.DataFrame(gw5blanks, columns=['team', 'gw5adjustment'])\n",
        "#blanks32"
      ],
      "metadata": {
        "id": "p00QYlZ7UbAu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5adjustments = pd.concat([gw5adjustments, blanks32])\n",
        "#gw5adjustments = gw5adjustments.reset_index(drop=True)\n",
        "#gw5adjustments"
      ],
      "metadata": {
        "id": "xh_AhxKJU0VW"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw21= homesawayspi.query('Event==\"21.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw21['League_Average']  = laverage\n",
        "gw21.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw21['home_difference'] = gw21.HomeSPI - gw21.League_Average\n",
        "gw21['away_difference'] = gw21.AwaySPI - gw21.League_Average\n",
        "gw21['home_adjustment'] = (gw21.home_difference - gw21.away_difference + gw21.League_Average)/gw21.League_Average\n",
        "gw21['away_adjustment'] = (gw21.away_difference - gw21.home_difference+ gw21.League_Average)/gw21.League_Average\n",
        "gw21adjustments = gw21[['team_h', 'home_adjustment']].append(gw21[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw21adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw21adjustments.rename(columns = {'home_adjustment':'gw21adjustment'}, inplace = True)\n",
        "gw21adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "OPB6Pz8sGZNe",
        "outputId": "785fce5e-9dc0-41fb-d89b-c09e42f07c82"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-37-2ad4e0fa35aa>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw21adjustments = gw21[['team_h', 'home_adjustment']].append(gw21[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw21adjustment\n",
              "0                   Chelsea        1.105056\n",
              "1          Newcastle United        0.884661\n",
              "2                   Everton        0.782245\n",
              "3         Manchester United        1.096440\n",
              "4                   Burnley        1.103667\n",
              "5                   Arsenal        1.145356\n",
              "6                 Brentford        1.291962\n",
              "7          Sheffield United        0.797809\n",
              "8               Bournemouth        0.661625\n",
              "9                  Brighton        1.303218\n",
              "10                   Fulham        0.894944\n",
              "11          Manchester City        1.115339\n",
              "12              Aston Villa        1.217755\n",
              "13                Tottenham        0.903560\n",
              "14               Luton Town        0.896333\n",
              "15           Crystal Palace        0.854644\n",
              "16        Nottingham Forest        0.708038\n",
              "17                 West Ham        1.202191\n",
              "18                Liverpool        1.338375\n",
              "19  Wolverhampton Wanderers        0.696782"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a2d071ce-7724-4459-9993-9413be905a45\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw21adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.105056</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.884661</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.782245</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.096440</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>1.103667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.145356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.291962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.797809</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.661625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.303218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.894944</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.115339</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.217755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.903560</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.896333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.854644</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.708038</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.202191</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.338375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.696782</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a2d071ce-7724-4459-9993-9413be905a45')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a2d071ce-7724-4459-9993-9413be905a45 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a2d071ce-7724-4459-9993-9413be905a45');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-56be2316-ef7f-409c-b590-8d9ace87b6ed\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-56be2316-ef7f-409c-b590-8d9ace87b6ed')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-56be2316-ef7f-409c-b590-8d9ace87b6ed button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw17= homesawayspi.query('Event==\"17.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw17['League_Average']  = laverage\n",
        "gw17.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw17['home_difference'] = gw17.HomeSPI - gw17.League_Average\n",
        "gw17['away_difference'] = gw17.AwaySPI - gw17.League_Average\n",
        "gw17['home_adjustment'] = (gw17.home_difference - gw17.away_difference + gw17.League_Average)/gw17.League_Average\n",
        "gw17['away_adjustment'] = (gw17.away_difference - gw17.home_difference+ gw17.League_Average)/gw17.League_Average\n",
        "gw17adjustments = gw17[['team_h', 'home_adjustment']].append(gw17[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw17adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw17adjustments.rename(columns = {'home_adjustment':'gw17adjustment'}, inplace = True)\n",
        "gw17adjustments = gw17adjustments.groupby('team', as_index=False)['gw17adjustment'].aggregate('sum')\n",
        "gw17adjustments"
      ],
      "metadata": {
        "id": "Ns7V93Gobs3z",
        "outputId": "ebdb972a-a07e-42b0-85e6-cd29d7367cab",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        }
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-38-b9fb9397d6d1>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw17adjustments = gw17[['team_h', 'home_adjustment']].append(gw17[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw17adjustment\n",
              "0                   Arsenal        1.042245\n",
              "1               Aston Villa        1.030016\n",
              "2               Bournemouth        1.056975\n",
              "3                 Brentford        0.969984\n",
              "4                  Brighton        0.957755\n",
              "5                   Burnley        0.990412\n",
              "6                   Chelsea        1.266948\n",
              "7            Crystal Palace        0.742362\n",
              "8                   Everton        1.009588\n",
              "9                    Fulham        0.784885\n",
              "10                Liverpool        1.067397\n",
              "11               Luton Town        0.943025\n",
              "12          Manchester City        1.257638\n",
              "13        Manchester United        0.932603\n",
              "14         Newcastle United        1.215115\n",
              "15        Nottingham Forest        0.777520\n",
              "16         Sheffield United        0.733052\n",
              "17                Tottenham        1.222480\n",
              "18                 West Ham        1.167590\n",
              "19  Wolverhampton Wanderers        0.832410"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9d35b119-c5dc-49b3-b1ac-795f9af95c0a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw17adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.042245</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.030016</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1.056975</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.969984</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>0.957755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.990412</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.266948</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.742362</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.009588</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.784885</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.067397</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.943025</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.257638</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0.932603</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.215115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.777520</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.733052</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.222480</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.167590</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.832410</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d35b119-c5dc-49b3-b1ac-795f9af95c0a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9d35b119-c5dc-49b3-b1ac-795f9af95c0a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9d35b119-c5dc-49b3-b1ac-795f9af95c0a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f9b153ad-771b-4900-8db0-6095bacb4a13\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f9b153ad-771b-4900-8db0-6095bacb4a13')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f9b153ad-771b-4900-8db0-6095bacb4a13 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw18= homesawayspi.query('Event==\"18.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw18['League_Average']  = laverage\n",
        "gw18.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw18['home_difference'] = gw18.HomeSPI - gw18.League_Average\n",
        "gw18['away_difference'] = gw18.AwaySPI - gw18.League_Average\n",
        "gw18['home_adjustment'] = (gw18.home_difference - gw18.away_difference + gw18.League_Average)/gw18.League_Average\n",
        "gw18['away_adjustment'] = (gw18.away_difference - gw18.home_difference+ gw18.League_Average)/gw18.League_Average\n",
        "gw18adjustments = gw18[['team_h', 'home_adjustment']].append(gw18[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw18adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw18adjustments.rename(columns = {'home_adjustment':'gw18adjustment'}, inplace = True)\n",
        "gw18adjustments"
      ],
      "metadata": {
        "id": "wlvV4OeQb34Z",
        "outputId": "1413c82a-bb65-4b84-ecbc-fdd81a4ece7d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 649
        }
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-39-d2e28518c3dd>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw18adjustments = gw18[['team_h', 'home_adjustment']].append(gw18[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw18adjustment\n",
              "0            Crystal Palace        0.896889\n",
              "1               Aston Villa        1.315863\n",
              "2                  West Ham        0.889385\n",
              "3                    Fulham        1.073373\n",
              "4                Luton Town        0.607846\n",
              "5         Nottingham Forest        0.952058\n",
              "6                 Tottenham        1.118258\n",
              "7                 Liverpool        1.000139\n",
              "8   Wolverhampton Wanderers        0.767654\n",
              "9                  Brighton        1.103111\n",
              "10         Sheffield United        0.684137\n",
              "11        Manchester United        1.110615\n",
              "12                  Burnley        0.926627\n",
              "13         Newcastle United        1.392154\n",
              "14              Bournemouth        1.047942\n",
              "15                  Everton        0.881742\n",
              "16                  Arsenal        0.999861\n",
              "17                  Chelsea        1.232346"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-31649adb-a79e-47b3-b6c3-14485db5c864\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw18adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.896889</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.315863</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.889385</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.073373</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.607846</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.952058</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.118258</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.000139</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.767654</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.103111</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.684137</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.110615</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.926627</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.392154</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1.047942</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.881742</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>0.999861</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.232346</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-31649adb-a79e-47b3-b6c3-14485db5c864')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-31649adb-a79e-47b3-b6c3-14485db5c864 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-31649adb-a79e-47b3-b6c3-14485db5c864');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6f861b26-566e-48d2-8510-9885ee456840\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6f861b26-566e-48d2-8510-9885ee456840')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6f861b26-566e-48d2-8510-9885ee456840 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw18blanks = [['Brentford', 0], ['Manchester City', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "blanks18 = pd.DataFrame(gw18blanks, columns=['team', 'gw18adjustment'])\n",
        "blanks18"
      ],
      "metadata": {
        "id": "1jYqDQfTYSo9",
        "outputId": "67eb77c1-ad04-4820-b561-fcc29996b794",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        }
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              team  gw18adjustment\n",
              "0        Brentford               0\n",
              "1  Manchester City               0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-60c0abe9-c3e5-4975-8492-a796239974af\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw18adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-60c0abe9-c3e5-4975-8492-a796239974af')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-60c0abe9-c3e5-4975-8492-a796239974af button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-60c0abe9-c3e5-4975-8492-a796239974af');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4a28308f-e2e4-4b67-a097-29d609ff72a0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4a28308f-e2e4-4b67-a097-29d609ff72a0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4a28308f-e2e4-4b67-a097-29d609ff72a0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw18adjustments = pd.concat([gw18adjustments, blanks18])\n",
        "gw18adjustments = gw18adjustments.reset_index(drop=True)\n",
        "gw18adjustments"
      ],
      "metadata": {
        "id": "6Bcop9gVZCW7",
        "outputId": "4f378a41-cfa2-46e7-d4f0-2806ea26b336",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        }
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw18adjustment\n",
              "0            Crystal Palace        0.896889\n",
              "1               Aston Villa        1.315863\n",
              "2                  West Ham        0.889385\n",
              "3                    Fulham        1.073373\n",
              "4                Luton Town        0.607846\n",
              "5         Nottingham Forest        0.952058\n",
              "6                 Tottenham        1.118258\n",
              "7                 Liverpool        1.000139\n",
              "8   Wolverhampton Wanderers        0.767654\n",
              "9                  Brighton        1.103111\n",
              "10         Sheffield United        0.684137\n",
              "11        Manchester United        1.110615\n",
              "12                  Burnley        0.926627\n",
              "13         Newcastle United        1.392154\n",
              "14              Bournemouth        1.047942\n",
              "15                  Everton        0.881742\n",
              "16                  Arsenal        0.999861\n",
              "17                  Chelsea        1.232346\n",
              "18                Brentford        0.000000\n",
              "19          Manchester City        0.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6317f277-07cd-4e1c-9083-ada451dbb400\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw18adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.896889</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.315863</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.889385</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.073373</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.607846</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.952058</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.118258</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.000139</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.767654</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.103111</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.684137</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.110615</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.926627</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.392154</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1.047942</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.881742</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>0.999861</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.232346</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6317f277-07cd-4e1c-9083-ada451dbb400')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6317f277-07cd-4e1c-9083-ada451dbb400 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6317f277-07cd-4e1c-9083-ada451dbb400');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0a52ff3e-b9f7-44f2-83d6-8bc0efd28939\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0a52ff3e-b9f7-44f2-83d6-8bc0efd28939')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0a52ff3e-b9f7-44f2-83d6-8bc0efd28939 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwadjustments1721 = pd.merge(gw17adjustments,gw18adjustments, on ='team')\n",
        "gwadjustments1721 = pd.merge(gwadjustments1721,gw19adjustments, on ='team')\n",
        "gwadjustments1721 = pd.merge(gwadjustments1721,gw20adjustments, on ='team')\n",
        "gwadjustments1721 = pd.merge(gwadjustments1721,gw21adjustments, on ='team')\n",
        "gwadjustments1721"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "P6_WVsnNkztJ",
        "outputId": "4bc343ed-ef5c-4711-8dc9-0dfdc71a2d57"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw17adjustment  gw18adjustment  gw19adjustment  \\\n",
              "0                   Arsenal        1.042245        0.999861        1.177873   \n",
              "1               Aston Villa        1.030016        1.315863        1.003057   \n",
              "2               Bournemouth        1.056975        1.047942        0.879936   \n",
              "3                 Brentford        0.969984        0.000000        1.251245   \n",
              "4                  Brighton        0.957755        1.103111        1.121454   \n",
              "5                   Burnley        0.990412        0.926627        0.708316   \n",
              "6                   Chelsea        1.266948        1.232346        1.032239   \n",
              "7            Crystal Palace        0.742362        0.896889        0.967761   \n",
              "8                   Everton        1.009588        0.881742        0.605761   \n",
              "9                    Fulham        0.784885        1.073373        1.120064   \n",
              "10                Liverpool        1.067397        1.000139        1.291684   \n",
              "11               Luton Town        0.943025        0.607846        0.984853   \n",
              "12          Manchester City        1.257638        0.000000        1.394239   \n",
              "13        Manchester United        0.932603        1.110615        0.996943   \n",
              "14         Newcastle United        1.215115        1.392154        1.383122   \n",
              "15        Nottingham Forest        0.777520        0.952058        0.616878   \n",
              "16         Sheffield United        0.733052        0.684137        1.015147   \n",
              "17                Tottenham        1.222480        1.118258        0.878546   \n",
              "18                 West Ham        1.167590        0.889385        0.822127   \n",
              "19  Wolverhampton Wanderers        0.832410        0.767654        0.748755   \n",
              "\n",
              "    gw20adjustment  gw21adjustment  \n",
              "0         1.218172        1.145356  \n",
              "1         1.227344        1.217755  \n",
              "2         0.825462        0.661625  \n",
              "3         1.051138        1.291962  \n",
              "4         1.135628        1.303218  \n",
              "5         0.772656        1.103667  \n",
              "6         1.282095        1.105056  \n",
              "7         0.948862        0.854644  \n",
              "8         1.063506        0.782245  \n",
              "9         0.781828        0.894944  \n",
              "10        1.003196        1.338375  \n",
              "11        0.717905        0.896333  \n",
              "12        1.492347        1.115339  \n",
              "13        1.318921        1.096440  \n",
              "14        0.996804        0.884661  \n",
              "15        0.681079        0.708038  \n",
              "16        0.507653        0.797809  \n",
              "17        1.174538        0.903560  \n",
              "18        0.864372        1.202191  \n",
              "19        0.936494        0.696782  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-35b52311-742b-4631-b3a6-4164f2e54abd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw17adjustment</th>\n",
              "      <th>gw18adjustment</th>\n",
              "      <th>gw19adjustment</th>\n",
              "      <th>gw20adjustment</th>\n",
              "      <th>gw21adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.042245</td>\n",
              "      <td>0.999861</td>\n",
              "      <td>1.177873</td>\n",
              "      <td>1.218172</td>\n",
              "      <td>1.145356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.030016</td>\n",
              "      <td>1.315863</td>\n",
              "      <td>1.003057</td>\n",
              "      <td>1.227344</td>\n",
              "      <td>1.217755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>1.056975</td>\n",
              "      <td>1.047942</td>\n",
              "      <td>0.879936</td>\n",
              "      <td>0.825462</td>\n",
              "      <td>0.661625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.969984</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.251245</td>\n",
              "      <td>1.051138</td>\n",
              "      <td>1.291962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>0.957755</td>\n",
              "      <td>1.103111</td>\n",
              "      <td>1.121454</td>\n",
              "      <td>1.135628</td>\n",
              "      <td>1.303218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.990412</td>\n",
              "      <td>0.926627</td>\n",
              "      <td>0.708316</td>\n",
              "      <td>0.772656</td>\n",
              "      <td>1.103667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.266948</td>\n",
              "      <td>1.232346</td>\n",
              "      <td>1.032239</td>\n",
              "      <td>1.282095</td>\n",
              "      <td>1.105056</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.742362</td>\n",
              "      <td>0.896889</td>\n",
              "      <td>0.967761</td>\n",
              "      <td>0.948862</td>\n",
              "      <td>0.854644</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.009588</td>\n",
              "      <td>0.881742</td>\n",
              "      <td>0.605761</td>\n",
              "      <td>1.063506</td>\n",
              "      <td>0.782245</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.784885</td>\n",
              "      <td>1.073373</td>\n",
              "      <td>1.120064</td>\n",
              "      <td>0.781828</td>\n",
              "      <td>0.894944</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.067397</td>\n",
              "      <td>1.000139</td>\n",
              "      <td>1.291684</td>\n",
              "      <td>1.003196</td>\n",
              "      <td>1.338375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.943025</td>\n",
              "      <td>0.607846</td>\n",
              "      <td>0.984853</td>\n",
              "      <td>0.717905</td>\n",
              "      <td>0.896333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.257638</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.394239</td>\n",
              "      <td>1.492347</td>\n",
              "      <td>1.115339</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0.932603</td>\n",
              "      <td>1.110615</td>\n",
              "      <td>0.996943</td>\n",
              "      <td>1.318921</td>\n",
              "      <td>1.096440</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.215115</td>\n",
              "      <td>1.392154</td>\n",
              "      <td>1.383122</td>\n",
              "      <td>0.996804</td>\n",
              "      <td>0.884661</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.777520</td>\n",
              "      <td>0.952058</td>\n",
              "      <td>0.616878</td>\n",
              "      <td>0.681079</td>\n",
              "      <td>0.708038</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.733052</td>\n",
              "      <td>0.684137</td>\n",
              "      <td>1.015147</td>\n",
              "      <td>0.507653</td>\n",
              "      <td>0.797809</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.222480</td>\n",
              "      <td>1.118258</td>\n",
              "      <td>0.878546</td>\n",
              "      <td>1.174538</td>\n",
              "      <td>0.903560</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.167590</td>\n",
              "      <td>0.889385</td>\n",
              "      <td>0.822127</td>\n",
              "      <td>0.864372</td>\n",
              "      <td>1.202191</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.832410</td>\n",
              "      <td>0.767654</td>\n",
              "      <td>0.748755</td>\n",
              "      <td>0.936494</td>\n",
              "      <td>0.696782</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-35b52311-742b-4631-b3a6-4164f2e54abd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-35b52311-742b-4631-b3a6-4164f2e54abd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-35b52311-742b-4631-b3a6-4164f2e54abd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3f824287-9c4c-4afd-8b11-ec9577b576ed\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3f824287-9c4c-4afd-8b11-ec9577b576ed')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3f824287-9c4c-4afd-8b11-ec9577b576ed button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x = pd.merge(rawallplayersallgw,\n",
        "                     gwadjustments1721,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawdfgw228x.rename(columns = {'gw14adjustment_y':'gw14adjustment'}, inplace = True)\n",
        "rawdfgw228x = rawdfgw228x.round(1)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 513
        },
        "id": "-b-0jux2PKIX",
        "outputId": "4167c120-a819-4f28-cd24-a23e8b71bbbb"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  3.9   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  6.2   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "753  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "754  546  Wolverhampton Wanderers   G  Bentley   3.9                  1.3   \n",
              "755  564  Wolverhampton Wanderers   G     King   4.0                  0.7   \n",
              "756  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.4   \n",
              "757  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0  ...              0.0        0   \n",
              "1               2        2  103       64.2  ...              3.2      664   \n",
              "2               5        2  162       56.4  ...              3.5      821   \n",
              "3               0        0    0        0.0  ...              0.0        0   \n",
              "4               2        0   60       14.4  ...              1.9       95   \n",
              "..            ...      ...  ...        ...  ...              ...      ...   \n",
              "753             0        0    0        0.0  ...              0.0        0   \n",
              "754             0        0   51        4.8  ...              7.5      157   \n",
              "755             0        0    0        0.0  ...              0.0        0   \n",
              "756             0        0  236       35.1  ...              2.7     1282   \n",
              "757             0        0    0        0.0  ...              0.0        0   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP  gw17adjustment  gw18adjustment  \\\n",
              "0                1.2      2.0   NaN             1.0             1.0   \n",
              "1                1.2      3.0   NaN             1.0             1.0   \n",
              "2                1.2      3.0   NaN             1.0             1.0   \n",
              "3                1.1      2.0   NaN             1.0             1.3   \n",
              "4                1.1      2.2   NaN             1.0             1.3   \n",
              "..               ...      ...   ...             ...             ...   \n",
              "753              1.0      2.0  -0.0             1.2             0.9   \n",
              "754              0.8      2.0   0.0             0.8             0.8   \n",
              "755              0.8      2.0   0.0             0.8             0.8   \n",
              "756              0.8      2.0   0.0             0.8             0.8   \n",
              "757              0.8      2.0   0.0             0.8             0.8   \n",
              "\n",
              "     gw19adjustment  gw20adjustment  gw21adjustment  \n",
              "0               1.2             1.2             1.1  \n",
              "1               1.2             1.2             1.1  \n",
              "2               1.2             1.2             1.1  \n",
              "3               1.0             1.2             1.2  \n",
              "4               1.0             1.2             1.2  \n",
              "..              ...             ...             ...  \n",
              "753             0.8             0.9             1.2  \n",
              "754             0.7             0.9             0.7  \n",
              "755             0.7             0.9             0.7  \n",
              "756             0.7             0.9             0.7  \n",
              "757             0.7             0.9             0.7  \n",
              "\n",
              "[758 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-73cc7f8a-7c72-429b-8e76-f27e3fe4122d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw17adjustment</th>\n",
              "      <th>gw18adjustment</th>\n",
              "      <th>gw19adjustment</th>\n",
              "      <th>gw20adjustment</th>\n",
              "      <th>gw21adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>3.9</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>103</td>\n",
              "      <td>64.2</td>\n",
              "      <td>...</td>\n",
              "      <td>3.2</td>\n",
              "      <td>664</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.2</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>162</td>\n",
              "      <td>56.4</td>\n",
              "      <td>...</td>\n",
              "      <td>3.5</td>\n",
              "      <td>821</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>14.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.9</td>\n",
              "      <td>95</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>753</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>754</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>51</td>\n",
              "      <td>4.8</td>\n",
              "      <td>...</td>\n",
              "      <td>7.5</td>\n",
              "      <td>157</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>755</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>756</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>236</td>\n",
              "      <td>35.1</td>\n",
              "      <td>...</td>\n",
              "      <td>2.7</td>\n",
              "      <td>1282</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>757</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>758 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-73cc7f8a-7c72-429b-8e76-f27e3fe4122d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-73cc7f8a-7c72-429b-8e76-f27e3fe4122d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-73cc7f8a-7c72-429b-8e76-f27e3fe4122d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a97ef97b-80d1-45aa-9442-88b7c5c8b255\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a97ef97b-80d1-45aa-9442-88b7c5c8b255')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a97ef97b-80d1-45aa-9442-88b7c5c8b255 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw3adjustments = gw3adjustments.groupby('team', as_index=False)['gw3adjustment'].aggregate('sum')\n",
        "#gw3adjustments"
      ],
      "metadata": {
        "id": "6x3Lj7jPTCVC"
      },
      "execution_count": 44,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x['gw17'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw17adjustment)+2)\n",
        "rawdfgw228x['gw18'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw18adjustment)+2)\n",
        "rawdfgw228x['gw19'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw19adjustment)+2)\n",
        "rawdfgw228x['gw20'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw20adjustment)+2)\n",
        "rawdfgw228x['gw21'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw21adjustment)+2)\n",
        "\n",
        "rawdfgw228x['5GW Total'] = rawdfgw228x.gw17 + rawdfgw228x.gw18 + rawdfgw228x.gw19 + rawdfgw228x.gw20 + rawdfgw228x.gw21\n",
        "rawdfgw228x['3GW Total'] = rawdfgw228x.gw17 + rawdfgw228x.gw18 + rawdfgw228x.gw19\n",
        "rawdfgw228x = rawdfgw228x.drop(columns=[\n",
        "  'gw17adjustment',\n",
        "  'gw18adjustment',\n",
        "  'gw19adjustment',\n",
        "  'gw20adjustment',\n",
        "  'gw21adjustment'\n",
        "  ])\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Dgw1xB0YUN9D",
        "outputId": "5c8f679d-acbe-40df-c2a3-431d21e42278"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  3.9   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  6.2   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "753  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "754  546  Wolverhampton Wanderers   G  Bentley   3.9                  1.3   \n",
              "755  564  Wolverhampton Wanderers   G     King   4.0                  0.7   \n",
              "756  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.4   \n",
              "757  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  home_adjustment  xPallgw  \\\n",
              "0               0        0    0        0.0  ...              1.2      2.0   \n",
              "1               2        2  103       64.2  ...              1.2      3.0   \n",
              "2               5        2  162       56.4  ...              1.2      3.0   \n",
              "3               0        0    0        0.0  ...              1.1      2.0   \n",
              "4               2        0   60       14.4  ...              1.1      2.2   \n",
              "..            ...      ...  ...        ...  ...              ...      ...   \n",
              "753             0        0    0        0.0  ...              1.0      2.0   \n",
              "754             0        0   51        4.8  ...              0.8      2.0   \n",
              "755             0        0    0        0.0  ...              0.8      2.0   \n",
              "756             0        0  236       35.1  ...              0.8      2.0   \n",
              "757             0        0    0        0.0  ...              0.8      2.0   \n",
              "\n",
              "     xCSP  gw17  gw18  gw19  gw20  gw21  5GW Total  3GW Total  \n",
              "0     NaN   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "1     NaN   3.0  3.00   3.2  3.20  3.10      15.50       9.20  \n",
              "2     NaN   3.0  3.00   3.2  3.20  3.10      15.50       9.20  \n",
              "3     NaN   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "4     NaN   2.2  2.26   2.2  2.24  2.24      11.14       6.66  \n",
              "..    ...   ...   ...   ...   ...   ...        ...        ...  \n",
              "753  -0.0   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "754   0.0   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "755   0.0   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "756   0.0   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "757   0.0   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "\n",
              "[758 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c941cdd5-2c32-492d-a2b0-3894ca1456d5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw17</th>\n",
              "      <th>gw18</th>\n",
              "      <th>gw19</th>\n",
              "      <th>gw20</th>\n",
              "      <th>gw21</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>3.9</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>103</td>\n",
              "      <td>64.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.00</td>\n",
              "      <td>3.2</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.10</td>\n",
              "      <td>15.50</td>\n",
              "      <td>9.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.2</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>162</td>\n",
              "      <td>56.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.00</td>\n",
              "      <td>3.2</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.10</td>\n",
              "      <td>15.50</td>\n",
              "      <td>9.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>14.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.2</td>\n",
              "      <td>2.26</td>\n",
              "      <td>2.2</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.24</td>\n",
              "      <td>11.14</td>\n",
              "      <td>6.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>753</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>754</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>51</td>\n",
              "      <td>4.8</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>755</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>756</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>236</td>\n",
              "      <td>35.1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>757</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>758 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c941cdd5-2c32-492d-a2b0-3894ca1456d5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c941cdd5-2c32-492d-a2b0-3894ca1456d5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c941cdd5-2c32-492d-a2b0-3894ca1456d5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-34c3870e-847f-42fd-ab4f-35b78288ee30\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-34c3870e-847f-42fd-ab4f-35b78288ee30')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-34c3870e-847f-42fd-ab4f-35b78288ee30 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.drop_duplicates(subset='name', keep='last', inplace=True)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Jud88GRHgLWf",
        "outputId": "d3a41443-7625-4208-bf57-a3a22f83f12e"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  3.9   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  6.2   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "753  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "754  546  Wolverhampton Wanderers   G  Bentley   3.9                  1.3   \n",
              "755  564  Wolverhampton Wanderers   G     King   4.0                  0.7   \n",
              "756  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.4   \n",
              "757  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  home_adjustment  xPallgw  \\\n",
              "0               0        0    0        0.0  ...              1.2      2.0   \n",
              "1               2        2  103       64.2  ...              1.2      3.0   \n",
              "2               5        2  162       56.4  ...              1.2      3.0   \n",
              "3               0        0    0        0.0  ...              1.1      2.0   \n",
              "4               2        0   60       14.4  ...              1.1      2.2   \n",
              "..            ...      ...  ...        ...  ...              ...      ...   \n",
              "753             0        0    0        0.0  ...              1.0      2.0   \n",
              "754             0        0   51        4.8  ...              0.8      2.0   \n",
              "755             0        0    0        0.0  ...              0.8      2.0   \n",
              "756             0        0  236       35.1  ...              0.8      2.0   \n",
              "757             0        0    0        0.0  ...              0.8      2.0   \n",
              "\n",
              "     xCSP  gw17  gw18  gw19  gw20  gw21  5GW Total  3GW Total  \n",
              "0     NaN   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "1     NaN   3.0  3.00   3.2  3.20  3.10      15.50       9.20  \n",
              "2     NaN   3.0  3.00   3.2  3.20  3.10      15.50       9.20  \n",
              "3     NaN   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "4     NaN   2.2  2.26   2.2  2.24  2.24      11.14       6.66  \n",
              "..    ...   ...   ...   ...   ...   ...        ...        ...  \n",
              "753  -0.0   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "754   0.0   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "755   0.0   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "756   0.0   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "757   0.0   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "\n",
              "[735 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-842db047-1808-4b35-a975-7552e73cf6cb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw17</th>\n",
              "      <th>gw18</th>\n",
              "      <th>gw19</th>\n",
              "      <th>gw20</th>\n",
              "      <th>gw21</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>3.9</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>103</td>\n",
              "      <td>64.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.00</td>\n",
              "      <td>3.2</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.10</td>\n",
              "      <td>15.50</td>\n",
              "      <td>9.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.2</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>162</td>\n",
              "      <td>56.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.00</td>\n",
              "      <td>3.2</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.10</td>\n",
              "      <td>15.50</td>\n",
              "      <td>9.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>14.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.2</td>\n",
              "      <td>2.26</td>\n",
              "      <td>2.2</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.24</td>\n",
              "      <td>11.14</td>\n",
              "      <td>6.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>753</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>754</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>51</td>\n",
              "      <td>4.8</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>755</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>756</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>236</td>\n",
              "      <td>35.1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>757</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>735 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-842db047-1808-4b35-a975-7552e73cf6cb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-842db047-1808-4b35-a975-7552e73cf6cb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-842db047-1808-4b35-a975-7552e73cf6cb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-66544221-a783-4ca6-bebf-133b4a794518\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-66544221-a783-4ca6-bebf-133b4a794518')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-66544221-a783-4ca6-bebf-133b4a794518 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter\n",
        "writer = ExcelWriter('API model.xlsx')\n",
        "rawdfgw228x.to_excel(writer, sheet_name='Sheet1')\n",
        "gwadjustments1721.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "tdXsMsuwaWa4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b0b4c6c3-1cb3-4caa-846b-d36bddd404b4"
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-47-a6a07492904f>:8: FutureWarning: save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "  writer.save()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#from google.colab import drive\n",
        "#drive.mount('/content/drive')"
      ],
      "metadata": {
        "id": "GzSzE5_Ckuq3"
      },
      "execution_count": 48,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import shutil"
      ],
      "metadata": {
        "id": "xSIwXnyAk2op"
      },
      "execution_count": 49,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#shutil.copy(\"/content/API model.xlsx\",\"/content/drive/MyDrive/FPL\")"
      ],
      "metadata": {
        "id": "O724A90vk3b4"
      },
      "execution_count": 50,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.nlargest(50, '5GW Total')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "4ULMO_eqJXIT",
        "outputId": "81b7ac59-18c2-40a4-8e27-318b029ca449"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id               team pos              name  cost  selected_by_percent  \\\n",
              "275  308          Liverpool   M             Salah  13.1                 51.1   \n",
              "62   355    Manchester City   F           Haaland  14.0                 82.9   \n",
              "157  108          Brentford   M            Mbeumo   6.9                 14.4   \n",
              "107   19            Arsenal   M              Saka   9.0                 58.5   \n",
              "5     60        Aston Villa   F           Watkins   8.4                 39.3   \n",
              "30   211            Chelsea   F         N.Jackson   6.9                  6.2   \n",
              "394  516          Tottenham   M               Son   9.5                 35.6   \n",
              "318  373  Manchester United   M       B.Fernandes   8.3                 12.4   \n",
              "67   415   Newcastle United   F              Isak   7.6                 16.0   \n",
              "398  526           West Ham   M             Bowen   7.7                 21.1   \n",
              "216  362            Chelsea   M            Palmer   5.5                 18.7   \n",
              "50   293          Liverpool   F            Darwin   7.6                 17.3   \n",
              "437   36        Aston Villa   D              Cash   4.8                 22.7   \n",
              "337  412   Newcastle United   M            Gordon   6.2                 24.3   \n",
              "209  199            Chelsea   M              Enzo   4.8                  3.0   \n",
              "9     85        Bournemouth   F           Solanke   6.6                  8.7   \n",
              "327  396  Manchester United   M          Rashford   8.5                 11.2   \n",
              "61   343    Manchester City   F         J.Alvarez   6.9                 28.8   \n",
              "119   43        Aston Villa   M      Douglas Luiz   5.6                  9.2   \n",
              "16   135           Brighton   F        João Pedro   5.4                 10.6   \n",
              "179  143           Brighton   M            Mitoma   6.5                 23.1   \n",
              "596  430   Newcastle United   D          Trippier   7.0                 48.3   \n",
              "240  249            Everton   M        A.Doucoure   5.5                  1.6   \n",
              "104   14            Arsenal   M          Ødegaard   8.3                 14.7   \n",
              "429   20            Arsenal   D            Saliba   5.5                 35.3   \n",
              "432   29            Arsenal   D             White   5.6                 11.3   \n",
              "433   31            Arsenal   D         Zinchenko   5.2                 12.9   \n",
              "407  664           West Ham   M       Ward-Prowse   6.1                  9.8   \n",
              "537  290          Liverpool   D  Alexander-Arnold   8.1                 14.1   \n",
              "128  599        Aston Villa   M             Diaby   6.7                 10.8   \n",
              "306  353    Manchester City   M             Foden   7.6                 11.5   \n",
              "389  504          Tottenham   M          Maddison   7.8                  8.8   \n",
              "214  216            Chelsea   M          Sterling   7.1                 11.6   \n",
              "115   34        Aston Villa   M            Bailey   5.5                  2.1   \n",
              "273  303          Liverpool   M         Luis Díaz   7.4                  7.0   \n",
              "174  134           Brighton   M             Gross   6.4                  3.1   \n",
              "100    6            Arsenal   M           Havertz   7.1                  1.7   \n",
              "427    5            Arsenal   D           Gabriel   4.9                 15.4   \n",
              "387  501          Tottenham   M        Kulusevski   7.0                  2.7   \n",
              "391  509          Tottenham   M       Richarlison   6.6                  1.2   \n",
              "563  342    Manchester City   D               Aké   5.0                  5.2   \n",
              "122   50        Aston Villa   M            McGinn   5.5                  1.2   \n",
              "468  129           Brighton   D              Dunk   5.0                  2.9   \n",
              "40   246            Everton   F     Calvert-Lewin   5.8                  1.1   \n",
              "431   25            Arsenal   D          Tomiyasu   4.5                  0.5   \n",
              "12   119          Brentford   F             Wissa   5.8                  7.8   \n",
              "263  591             Fulham   M           Willian   5.3                  1.0   \n",
              "403  539           West Ham   M         L.Paquetá   6.0                  1.6   \n",
              "562  341    Manchester City   D            Akanji   4.9                  5.8   \n",
              "565  350    Manchester City   D             Rúben   5.5                  7.2   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  home_adjustment  xPallgw  \\\n",
              "275            11        7  379      171.5  ...              1.2      5.9   \n",
              "62             14        5  417      159.8  ...              1.3      6.0   \n",
              "157             7        4  250      122.1  ...              1.1      5.4   \n",
              "107             5        8  346      153.9  ...              1.2      4.5   \n",
              "5               8        9  330      138.9  ...              1.1      4.4   \n",
              "30              6        1  174       94.9  ...              1.1      4.3   \n",
              "394            10        4  362      141.6  ...              1.0      4.5   \n",
              "318             3        3  279      141.7  ...              1.1      4.4   \n",
              "67              7        0  213       68.3  ...              1.2      4.1   \n",
              "398             9        1  247      119.0  ...              1.0      4.4   \n",
              "216             5        3  214       84.9  ...              1.1      4.0   \n",
              "50              4        7  169       89.1  ...              1.2      3.9   \n",
              "437             2        1  213       62.1  ...              1.1      3.9   \n",
              "337             6        5  255       97.5  ...              1.2      3.8   \n",
              "209             2        1  194       78.1  ...              1.1      3.7   \n",
              "9               8        1  216      114.7  ...              0.8      4.2   \n",
              "327             2        2  133       75.0  ...              1.1      3.8   \n",
              "61              4        8  330      121.6  ...              1.3      3.8   \n",
              "119             5        2  338       97.5  ...              1.1      3.6   \n",
              "16              5        1  182       91.2  ...              1.1      3.6   \n",
              "179             3        5  196      112.0  ...              1.1      3.6   \n",
              "596             0        7  403      117.9  ...              1.2      3.5   \n",
              "240             6        2  240      107.4  ...              0.9      3.9   \n",
              "104             4        3  250      103.5  ...              1.2      3.5   \n",
              "429             1        1  305       41.5  ...              1.2      3.5   \n",
              "432             1        2  281       58.4  ...              1.2      3.5   \n",
              "433             1        1  265       57.9  ...              1.2      3.5   \n",
              "407             3        5  335      105.5  ...              1.0      3.6   \n",
              "537             2        3  334       96.7  ...              1.2      3.4   \n",
              "128             3        7  221       92.6  ...              1.1      3.4   \n",
              "306             4        3  286      118.9  ...              1.3      3.5   \n",
              "389             3        6  230      109.6  ...              1.0      3.5   \n",
              "214             5        4  197      103.8  ...              1.1      3.3   \n",
              "115             5        4  182       69.0  ...              1.1      3.3   \n",
              "273             3        1  118       67.0  ...              1.2      3.3   \n",
              "174             3        5  287      123.1  ...              1.1      3.3   \n",
              "100             3        1  120       62.0  ...              1.2      3.3   \n",
              "427             0        0  210       32.9  ...              1.2      3.3   \n",
              "387             4        1  226      132.2  ...              1.0      3.3   \n",
              "391             3        3   96       62.5  ...              1.0      3.3   \n",
              "563             2        1  193       41.8  ...              1.3      3.3   \n",
              "122             4        2  255       87.4  ...              1.1      3.2   \n",
              "468             1        0  187       52.8  ...              1.1      3.2   \n",
              "40              3        1  100       57.7  ...              0.9      3.5   \n",
              "431             1        1  134       23.3  ...              1.2      3.2   \n",
              "12              3        2  173       76.1  ...              1.1      3.4   \n",
              "263             4        2  214       79.1  ...              0.9      3.4   \n",
              "403             2        1  195       71.8  ...              1.0      3.3   \n",
              "562             2        0  222       44.3  ...              1.3      3.2   \n",
              "565             0        0  209       42.4  ...              1.3      3.2   \n",
              "\n",
              "     xCSP  gw17  gw18  gw19  gw20  gw21  5GW Total  3GW Total  \n",
              "275   NaN  6.29  5.90  7.07  5.90  7.07      32.23      19.26  \n",
              "62    NaN  7.20  2.00  7.60  8.00  6.40      31.20      16.80  \n",
              "157   NaN  5.40  2.00  6.42  5.74  6.42      25.98      13.82  \n",
              "107   NaN  4.50  4.50  5.00  5.00  4.75      23.75      14.00  \n",
              "5     NaN  4.40  5.12  4.40  4.88  4.88      23.68      13.92  \n",
              "30    NaN  4.99  4.76  4.30  4.99  4.53      23.57      14.05  \n",
              "394   NaN  5.00  4.75  4.25  5.00  4.25      23.25      14.00  \n",
              "318   NaN  4.16  4.64  4.40  5.12  4.64      22.96      13.20  \n",
              "67    NaN  4.52  4.94  4.94  4.10  3.89      22.39      14.40  \n",
              "398   NaN  4.88  4.16  3.92  4.16  4.88      22.00      12.96  \n",
              "216   NaN  4.60  4.40  4.00  4.60  4.20      21.80      13.00  \n",
              "50    NaN  4.09  3.90  4.47  3.90  4.47      20.83      12.46  \n",
              "437   0.4  3.90  4.47  3.90  4.28  4.28      20.83      12.27  \n",
              "337   NaN  4.16  4.52  4.52  3.80  3.62      20.62      13.20  \n",
              "209   NaN  4.21  4.04  3.70  4.21  3.87      20.03      11.95  \n",
              "9     NaN  4.42  4.20  3.98  3.76  3.54      19.90      12.60  \n",
              "327   NaN  3.62  3.98  3.80  4.34  3.98      19.72      11.40  \n",
              "61    NaN  4.34  2.00  4.52  4.70  3.98      19.54      10.86  \n",
              "119   NaN  3.60  4.08  3.60  3.92  3.92      19.12      11.28  \n",
              "16    NaN  3.60  3.76  3.76  3.76  4.08      18.96      11.12  \n",
              "179   NaN  3.60  3.76  3.76  3.76  4.08      18.96      11.12  \n",
              "596   0.4  3.80  4.10  4.10  3.50  3.35      18.85      12.00  \n",
              "240   NaN  3.90  3.71  3.14  4.09  3.52      18.36      10.75  \n",
              "104   NaN  3.50  3.50  3.80  3.80  3.65      18.25      10.80  \n",
              "429   1.0  3.50  3.50  3.80  3.80  3.65      18.25      10.80  \n",
              "432   1.0  3.50  3.50  3.80  3.80  3.65      18.25      10.80  \n",
              "433   1.0  3.50  3.50  3.80  3.80  3.65      18.25      10.80  \n",
              "407   NaN  3.92  3.44  3.28  3.44  3.92      18.00      10.64  \n",
              "537   0.5  3.54  3.40  3.82  3.40  3.82      17.98      10.76  \n",
              "128   NaN  3.40  3.82  3.40  3.68  3.68      17.98      10.62  \n",
              "306   NaN  3.95  2.00  4.10  4.25  3.65      17.95      10.05  \n",
              "389   NaN  3.80  3.65  3.35  3.80  3.35      17.95      10.80  \n",
              "214   NaN  3.69  3.56  3.30  3.69  3.43      17.67      10.55  \n",
              "115   NaN  3.30  3.69  3.30  3.56  3.56      17.41      10.29  \n",
              "273   NaN  3.43  3.30  3.69  3.30  3.69      17.41      10.42  \n",
              "174   NaN  3.30  3.43  3.43  3.43  3.69      17.28      10.16  \n",
              "100   NaN  3.30  3.30  3.56  3.56  3.43      17.15      10.16  \n",
              "427   1.0  3.30  3.30  3.56  3.56  3.43      17.15      10.16  \n",
              "387   NaN  3.56  3.43  3.17  3.56  3.17      16.89      10.16  \n",
              "391   NaN  3.56  3.43  3.17  3.56  3.17      16.89      10.16  \n",
              "563   0.8  3.69  2.00  3.82  3.95  3.43      16.89       9.51  \n",
              "122   NaN  3.20  3.56  3.20  3.44  3.44      16.84       9.96  \n",
              "468   0.3  3.20  3.32  3.32  3.32  3.56      16.72       9.84  \n",
              "40    NaN  3.50  3.35  2.90  3.65  3.20      16.60       9.75  \n",
              "431   1.0  3.20  3.20  3.44  3.44  3.32      16.60       9.84  \n",
              "12    NaN  3.40  2.00  3.82  3.54  3.82      16.58       9.22  \n",
              "263   NaN  3.12  3.54  3.54  3.12  3.26      16.58      10.20  \n",
              "403   NaN  3.56  3.17  3.04  3.17  3.56      16.50       9.77  \n",
              "562   0.8  3.56  2.00  3.68  3.80  3.32      16.36       9.24  \n",
              "565   0.8  3.56  2.00  3.68  3.80  3.32      16.36       9.24  \n",
              "\n",
              "[50 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-03269a38-b21e-439e-b5d6-0afb793dd1dc\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw17</th>\n",
              "      <th>gw18</th>\n",
              "      <th>gw19</th>\n",
              "      <th>gw20</th>\n",
              "      <th>gw21</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>275</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>13.1</td>\n",
              "      <td>51.1</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>379</td>\n",
              "      <td>171.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.29</td>\n",
              "      <td>5.90</td>\n",
              "      <td>7.07</td>\n",
              "      <td>5.90</td>\n",
              "      <td>7.07</td>\n",
              "      <td>32.23</td>\n",
              "      <td>19.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.0</td>\n",
              "      <td>82.9</td>\n",
              "      <td>14</td>\n",
              "      <td>5</td>\n",
              "      <td>417</td>\n",
              "      <td>159.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>6.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.20</td>\n",
              "      <td>2.00</td>\n",
              "      <td>7.60</td>\n",
              "      <td>8.00</td>\n",
              "      <td>6.40</td>\n",
              "      <td>31.20</td>\n",
              "      <td>16.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>157</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.9</td>\n",
              "      <td>14.4</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>250</td>\n",
              "      <td>122.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.40</td>\n",
              "      <td>2.00</td>\n",
              "      <td>6.42</td>\n",
              "      <td>5.74</td>\n",
              "      <td>6.42</td>\n",
              "      <td>25.98</td>\n",
              "      <td>13.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>107</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>9.0</td>\n",
              "      <td>58.5</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>346</td>\n",
              "      <td>153.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.50</td>\n",
              "      <td>4.50</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.75</td>\n",
              "      <td>23.75</td>\n",
              "      <td>14.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.4</td>\n",
              "      <td>39.3</td>\n",
              "      <td>8</td>\n",
              "      <td>9</td>\n",
              "      <td>330</td>\n",
              "      <td>138.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.88</td>\n",
              "      <td>4.88</td>\n",
              "      <td>23.68</td>\n",
              "      <td>13.92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>6.9</td>\n",
              "      <td>6.2</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>174</td>\n",
              "      <td>94.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.53</td>\n",
              "      <td>23.57</td>\n",
              "      <td>14.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>394</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.5</td>\n",
              "      <td>35.6</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "      <td>362</td>\n",
              "      <td>141.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.75</td>\n",
              "      <td>4.25</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.25</td>\n",
              "      <td>23.25</td>\n",
              "      <td>14.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>318</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.3</td>\n",
              "      <td>12.4</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>279</td>\n",
              "      <td>141.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.64</td>\n",
              "      <td>22.96</td>\n",
              "      <td>13.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.6</td>\n",
              "      <td>16.0</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>213</td>\n",
              "      <td>68.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.94</td>\n",
              "      <td>4.94</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.89</td>\n",
              "      <td>22.39</td>\n",
              "      <td>14.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>398</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.7</td>\n",
              "      <td>21.1</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>247</td>\n",
              "      <td>119.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.88</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.88</td>\n",
              "      <td>22.00</td>\n",
              "      <td>12.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>216</th>\n",
              "      <td>362</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Palmer</td>\n",
              "      <td>5.5</td>\n",
              "      <td>18.7</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>214</td>\n",
              "      <td>84.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.80</td>\n",
              "      <td>13.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.6</td>\n",
              "      <td>17.3</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>169</td>\n",
              "      <td>89.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.47</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.47</td>\n",
              "      <td>20.83</td>\n",
              "      <td>12.46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>437</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>4.8</td>\n",
              "      <td>22.7</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>213</td>\n",
              "      <td>62.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.4</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.47</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.28</td>\n",
              "      <td>20.83</td>\n",
              "      <td>12.27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>337</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>6.2</td>\n",
              "      <td>24.3</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>255</td>\n",
              "      <td>97.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.62</td>\n",
              "      <td>20.62</td>\n",
              "      <td>13.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>209</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>4.8</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>194</td>\n",
              "      <td>78.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.70</td>\n",
              "      <td>4.21</td>\n",
              "      <td>3.87</td>\n",
              "      <td>20.03</td>\n",
              "      <td>11.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>6.6</td>\n",
              "      <td>8.7</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>216</td>\n",
              "      <td>114.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.54</td>\n",
              "      <td>19.90</td>\n",
              "      <td>12.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>327</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.5</td>\n",
              "      <td>11.2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>133</td>\n",
              "      <td>75.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.98</td>\n",
              "      <td>19.72</td>\n",
              "      <td>11.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>6.9</td>\n",
              "      <td>28.8</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>330</td>\n",
              "      <td>121.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.34</td>\n",
              "      <td>2.00</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.70</td>\n",
              "      <td>3.98</td>\n",
              "      <td>19.54</td>\n",
              "      <td>10.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.2</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>338</td>\n",
              "      <td>97.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.92</td>\n",
              "      <td>19.12</td>\n",
              "      <td>11.28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>10.6</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>182</td>\n",
              "      <td>91.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.08</td>\n",
              "      <td>18.96</td>\n",
              "      <td>11.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>179</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>23.1</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>196</td>\n",
              "      <td>112.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.08</td>\n",
              "      <td>18.96</td>\n",
              "      <td>11.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>596</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>7.0</td>\n",
              "      <td>48.3</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>403</td>\n",
              "      <td>117.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0.4</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.35</td>\n",
              "      <td>18.85</td>\n",
              "      <td>12.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>240</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.6</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>240</td>\n",
              "      <td>107.4</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.90</td>\n",
              "      <td>3.71</td>\n",
              "      <td>3.14</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.52</td>\n",
              "      <td>18.36</td>\n",
              "      <td>10.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.3</td>\n",
              "      <td>14.7</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>250</td>\n",
              "      <td>103.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.25</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>429</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.5</td>\n",
              "      <td>35.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>305</td>\n",
              "      <td>41.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.25</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>432</th>\n",
              "      <td>29</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>White</td>\n",
              "      <td>5.6</td>\n",
              "      <td>11.3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>281</td>\n",
              "      <td>58.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.25</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>433</th>\n",
              "      <td>31</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Zinchenko</td>\n",
              "      <td>5.2</td>\n",
              "      <td>12.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>265</td>\n",
              "      <td>57.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.25</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>407</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.1</td>\n",
              "      <td>9.8</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>335</td>\n",
              "      <td>105.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.92</td>\n",
              "      <td>18.00</td>\n",
              "      <td>10.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>537</th>\n",
              "      <td>290</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Alexander-Arnold</td>\n",
              "      <td>8.1</td>\n",
              "      <td>14.1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>334</td>\n",
              "      <td>96.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.82</td>\n",
              "      <td>17.98</td>\n",
              "      <td>10.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>128</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.7</td>\n",
              "      <td>10.8</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>221</td>\n",
              "      <td>92.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.98</td>\n",
              "      <td>10.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>306</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.6</td>\n",
              "      <td>11.5</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>286</td>\n",
              "      <td>118.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.95</td>\n",
              "      <td>2.00</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.65</td>\n",
              "      <td>17.95</td>\n",
              "      <td>10.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>389</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.8</td>\n",
              "      <td>8.8</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>230</td>\n",
              "      <td>109.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.35</td>\n",
              "      <td>17.95</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>214</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.1</td>\n",
              "      <td>11.6</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>197</td>\n",
              "      <td>103.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.67</td>\n",
              "      <td>10.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>34</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Bailey</td>\n",
              "      <td>5.5</td>\n",
              "      <td>2.1</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>182</td>\n",
              "      <td>69.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.41</td>\n",
              "      <td>10.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>273</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.4</td>\n",
              "      <td>7.0</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>118</td>\n",
              "      <td>67.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>17.41</td>\n",
              "      <td>10.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>174</th>\n",
              "      <td>134</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Gross</td>\n",
              "      <td>6.4</td>\n",
              "      <td>3.1</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>287</td>\n",
              "      <td>123.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.69</td>\n",
              "      <td>17.28</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.7</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>120</td>\n",
              "      <td>62.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.15</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>427</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>4.9</td>\n",
              "      <td>15.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>210</td>\n",
              "      <td>32.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.15</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>387</th>\n",
              "      <td>501</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Kulusevski</td>\n",
              "      <td>7.0</td>\n",
              "      <td>2.7</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>226</td>\n",
              "      <td>132.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>16.89</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>391</th>\n",
              "      <td>509</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Richarlison</td>\n",
              "      <td>6.6</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>96</td>\n",
              "      <td>62.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>16.89</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>563</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Aké</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>193</td>\n",
              "      <td>41.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.69</td>\n",
              "      <td>2.00</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.43</td>\n",
              "      <td>16.89</td>\n",
              "      <td>9.51</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>122</th>\n",
              "      <td>50</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>McGinn</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>255</td>\n",
              "      <td>87.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>16.84</td>\n",
              "      <td>9.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>468</th>\n",
              "      <td>129</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Dunk</td>\n",
              "      <td>5.0</td>\n",
              "      <td>2.9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>187</td>\n",
              "      <td>52.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.3</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.56</td>\n",
              "      <td>16.72</td>\n",
              "      <td>9.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>246</td>\n",
              "      <td>Everton</td>\n",
              "      <td>F</td>\n",
              "      <td>Calvert-Lewin</td>\n",
              "      <td>5.8</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>100</td>\n",
              "      <td>57.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.35</td>\n",
              "      <td>2.90</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.60</td>\n",
              "      <td>9.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>431</th>\n",
              "      <td>25</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Tomiyasu</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>134</td>\n",
              "      <td>23.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.60</td>\n",
              "      <td>9.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>5.8</td>\n",
              "      <td>7.8</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>173</td>\n",
              "      <td>76.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.40</td>\n",
              "      <td>2.00</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.82</td>\n",
              "      <td>16.58</td>\n",
              "      <td>9.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>263</th>\n",
              "      <td>591</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>M</td>\n",
              "      <td>Willian</td>\n",
              "      <td>5.3</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>214</td>\n",
              "      <td>79.1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.26</td>\n",
              "      <td>16.58</td>\n",
              "      <td>10.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>403</th>\n",
              "      <td>539</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>L.Paquetá</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>195</td>\n",
              "      <td>71.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.04</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.56</td>\n",
              "      <td>16.50</td>\n",
              "      <td>9.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>562</th>\n",
              "      <td>341</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Akanji</td>\n",
              "      <td>4.9</td>\n",
              "      <td>5.8</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>222</td>\n",
              "      <td>44.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.56</td>\n",
              "      <td>2.00</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.36</td>\n",
              "      <td>9.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>565</th>\n",
              "      <td>350</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Rúben</td>\n",
              "      <td>5.5</td>\n",
              "      <td>7.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>209</td>\n",
              "      <td>42.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.56</td>\n",
              "      <td>2.00</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.36</td>\n",
              "      <td>9.24</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-03269a38-b21e-439e-b5d6-0afb793dd1dc')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-03269a38-b21e-439e-b5d6-0afb793dd1dc button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-03269a38-b21e-439e-b5d6-0afb793dd1dc');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-77f2c89b-fc84-4b03-be4f-7c0412802e1a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-77f2c89b-fc84-4b03-be4f-7c0412802e1a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-77f2c89b-fc84-4b03-be4f-7c0412802e1a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.nlargest(50, '3GW Total')"
      ],
      "metadata": {
        "id": "6NQhOGTZgSrO",
        "outputId": "d7f65b63-19e2-497a-c76b-52f3faf46ffa",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos              name  cost  \\\n",
              "275  308                Liverpool   M             Salah  13.1   \n",
              "62   355          Manchester City   F           Haaland  14.0   \n",
              "67   415         Newcastle United   F              Isak   7.6   \n",
              "30   211                  Chelsea   F         N.Jackson   6.9   \n",
              "107   19                  Arsenal   M              Saka   9.0   \n",
              "394  516                Tottenham   M               Son   9.5   \n",
              "5     60              Aston Villa   F           Watkins   8.4   \n",
              "157  108                Brentford   M            Mbeumo   6.9   \n",
              "318  373        Manchester United   M       B.Fernandes   8.3   \n",
              "337  412         Newcastle United   M            Gordon   6.2   \n",
              "216  362                  Chelsea   M            Palmer   5.5   \n",
              "398  526                 West Ham   M             Bowen   7.7   \n",
              "9     85              Bournemouth   F           Solanke   6.6   \n",
              "50   293                Liverpool   F            Darwin   7.6   \n",
              "437   36              Aston Villa   D              Cash   4.8   \n",
              "596  430         Newcastle United   D          Trippier   7.0   \n",
              "209  199                  Chelsea   M              Enzo   4.8   \n",
              "327  396        Manchester United   M          Rashford   8.5   \n",
              "119   43              Aston Villa   M      Douglas Luiz   5.6   \n",
              "16   135                 Brighton   F        João Pedro   5.4   \n",
              "179  143                 Brighton   M            Mitoma   6.5   \n",
              "61   343          Manchester City   F         J.Alvarez   6.9   \n",
              "104   14                  Arsenal   M          Ødegaard   8.3   \n",
              "389  504                Tottenham   M          Maddison   7.8   \n",
              "429   20                  Arsenal   D            Saliba   5.5   \n",
              "432   29                  Arsenal   D             White   5.6   \n",
              "433   31                  Arsenal   D         Zinchenko   5.2   \n",
              "537  290                Liverpool   D  Alexander-Arnold   8.1   \n",
              "240  249                  Everton   M        A.Doucoure   5.5   \n",
              "407  664                 West Ham   M       Ward-Prowse   6.1   \n",
              "128  599              Aston Villa   M             Diaby   6.7   \n",
              "214  216                  Chelsea   M          Sterling   7.1   \n",
              "273  303                Liverpool   M         Luis Díaz   7.4   \n",
              "115   34              Aston Villa   M            Bailey   5.5   \n",
              "263  591                   Fulham   M           Willian   5.3   \n",
              "100    6                  Arsenal   M           Havertz   7.1   \n",
              "174  134                 Brighton   M             Gross   6.4   \n",
              "387  501                Tottenham   M        Kulusevski   7.0   \n",
              "391  509                Tottenham   M       Richarlison   6.6   \n",
              "427    5                  Arsenal   D           Gabriel   4.9   \n",
              "306  353          Manchester City   M             Foden   7.6   \n",
              "122   50              Aston Villa   M            McGinn   5.5   \n",
              "431   25                  Arsenal   D          Tomiyasu   4.5   \n",
              "468  129                 Brighton   D              Dunk   5.0   \n",
              "638  506                Tottenham   D       Pedro Porro   5.4   \n",
              "403  539                 West Ham   M         L.Paquetá   6.0   \n",
              "40   246                  Everton   F     Calvert-Lewin   5.8   \n",
              "276  309                Liverpool   M        Szoboszlai   7.1   \n",
              "545  313                Liverpool   D            Virgil   6.1   \n",
              "414  557  Wolverhampton Wanderers   M          Hee Chan   5.8   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  ...  \\\n",
              "275                 51.1            11        7  379      171.5  ...   \n",
              "62                  82.9            14        5  417      159.8  ...   \n",
              "67                  16.0             7        0  213       68.3  ...   \n",
              "30                   6.2             6        1  174       94.9  ...   \n",
              "107                 58.5             5        8  346      153.9  ...   \n",
              "394                 35.6            10        4  362      141.6  ...   \n",
              "5                   39.3             8        9  330      138.9  ...   \n",
              "157                 14.4             7        4  250      122.1  ...   \n",
              "318                 12.4             3        3  279      141.7  ...   \n",
              "337                 24.3             6        5  255       97.5  ...   \n",
              "216                 18.7             5        3  214       84.9  ...   \n",
              "398                 21.1             9        1  247      119.0  ...   \n",
              "9                    8.7             8        1  216      114.7  ...   \n",
              "50                  17.3             4        7  169       89.1  ...   \n",
              "437                 22.7             2        1  213       62.1  ...   \n",
              "596                 48.3             0        7  403      117.9  ...   \n",
              "209                  3.0             2        1  194       78.1  ...   \n",
              "327                 11.2             2        2  133       75.0  ...   \n",
              "119                  9.2             5        2  338       97.5  ...   \n",
              "16                  10.6             5        1  182       91.2  ...   \n",
              "179                 23.1             3        5  196      112.0  ...   \n",
              "61                  28.8             4        8  330      121.6  ...   \n",
              "104                 14.7             4        3  250      103.5  ...   \n",
              "389                  8.8             3        6  230      109.6  ...   \n",
              "429                 35.3             1        1  305       41.5  ...   \n",
              "432                 11.3             1        2  281       58.4  ...   \n",
              "433                 12.9             1        1  265       57.9  ...   \n",
              "537                 14.1             2        3  334       96.7  ...   \n",
              "240                  1.6             6        2  240      107.4  ...   \n",
              "407                  9.8             3        5  335      105.5  ...   \n",
              "128                 10.8             3        7  221       92.6  ...   \n",
              "214                 11.6             5        4  197      103.8  ...   \n",
              "273                  7.0             3        1  118       67.0  ...   \n",
              "115                  2.1             5        4  182       69.0  ...   \n",
              "263                  1.0             4        2  214       79.1  ...   \n",
              "100                  1.7             3        1  120       62.0  ...   \n",
              "174                  3.1             3        5  287      123.1  ...   \n",
              "387                  2.7             4        1  226      132.2  ...   \n",
              "391                  1.2             3        3   96       62.5  ...   \n",
              "427                 15.4             0        0  210       32.9  ...   \n",
              "306                 11.5             4        3  286      118.9  ...   \n",
              "122                  1.2             4        2  255       87.4  ...   \n",
              "431                  0.5             1        1  134       23.3  ...   \n",
              "468                  2.9             1        0  187       52.8  ...   \n",
              "638                 15.7             0        6  343       95.0  ...   \n",
              "403                  1.6             2        1  195       71.8  ...   \n",
              "40                   1.1             3        1  100       57.7  ...   \n",
              "276                  6.4             2        4  292       94.8  ...   \n",
              "545                  9.6             1        2  278       65.3  ...   \n",
              "414                 12.3             8        2  231       83.5  ...   \n",
              "\n",
              "     home_adjustment  xPallgw  xCSP  gw17  gw18  gw19  gw20  gw21  5GW Total  \\\n",
              "275              1.2      5.9   NaN  6.29  5.90  7.07  5.90  7.07      32.23   \n",
              "62               1.3      6.0   NaN  7.20  2.00  7.60  8.00  6.40      31.20   \n",
              "67               1.2      4.1   NaN  4.52  4.94  4.94  4.10  3.89      22.39   \n",
              "30               1.1      4.3   NaN  4.99  4.76  4.30  4.99  4.53      23.57   \n",
              "107              1.2      4.5   NaN  4.50  4.50  5.00  5.00  4.75      23.75   \n",
              "394              1.0      4.5   NaN  5.00  4.75  4.25  5.00  4.25      23.25   \n",
              "5                1.1      4.4   NaN  4.40  5.12  4.40  4.88  4.88      23.68   \n",
              "157              1.1      5.4   NaN  5.40  2.00  6.42  5.74  6.42      25.98   \n",
              "318              1.1      4.4   NaN  4.16  4.64  4.40  5.12  4.64      22.96   \n",
              "337              1.2      3.8   NaN  4.16  4.52  4.52  3.80  3.62      20.62   \n",
              "216              1.1      4.0   NaN  4.60  4.40  4.00  4.60  4.20      21.80   \n",
              "398              1.0      4.4   NaN  4.88  4.16  3.92  4.16  4.88      22.00   \n",
              "9                0.8      4.2   NaN  4.42  4.20  3.98  3.76  3.54      19.90   \n",
              "50               1.2      3.9   NaN  4.09  3.90  4.47  3.90  4.47      20.83   \n",
              "437              1.1      3.9   0.4  3.90  4.47  3.90  4.28  4.28      20.83   \n",
              "596              1.2      3.5   0.4  3.80  4.10  4.10  3.50  3.35      18.85   \n",
              "209              1.1      3.7   NaN  4.21  4.04  3.70  4.21  3.87      20.03   \n",
              "327              1.1      3.8   NaN  3.62  3.98  3.80  4.34  3.98      19.72   \n",
              "119              1.1      3.6   NaN  3.60  4.08  3.60  3.92  3.92      19.12   \n",
              "16               1.1      3.6   NaN  3.60  3.76  3.76  3.76  4.08      18.96   \n",
              "179              1.1      3.6   NaN  3.60  3.76  3.76  3.76  4.08      18.96   \n",
              "61               1.3      3.8   NaN  4.34  2.00  4.52  4.70  3.98      19.54   \n",
              "104              1.2      3.5   NaN  3.50  3.50  3.80  3.80  3.65      18.25   \n",
              "389              1.0      3.5   NaN  3.80  3.65  3.35  3.80  3.35      17.95   \n",
              "429              1.2      3.5   1.0  3.50  3.50  3.80  3.80  3.65      18.25   \n",
              "432              1.2      3.5   1.0  3.50  3.50  3.80  3.80  3.65      18.25   \n",
              "433              1.2      3.5   1.0  3.50  3.50  3.80  3.80  3.65      18.25   \n",
              "537              1.2      3.4   0.5  3.54  3.40  3.82  3.40  3.82      17.98   \n",
              "240              0.9      3.9   NaN  3.90  3.71  3.14  4.09  3.52      18.36   \n",
              "407              1.0      3.6   NaN  3.92  3.44  3.28  3.44  3.92      18.00   \n",
              "128              1.1      3.4   NaN  3.40  3.82  3.40  3.68  3.68      17.98   \n",
              "214              1.1      3.3   NaN  3.69  3.56  3.30  3.69  3.43      17.67   \n",
              "273              1.2      3.3   NaN  3.43  3.30  3.69  3.30  3.69      17.41   \n",
              "115              1.1      3.3   NaN  3.30  3.69  3.30  3.56  3.56      17.41   \n",
              "263              0.9      3.4   NaN  3.12  3.54  3.54  3.12  3.26      16.58   \n",
              "100              1.2      3.3   NaN  3.30  3.30  3.56  3.56  3.43      17.15   \n",
              "174              1.1      3.3   NaN  3.30  3.43  3.43  3.43  3.69      17.28   \n",
              "387              1.0      3.3   NaN  3.56  3.43  3.17  3.56  3.17      16.89   \n",
              "391              1.0      3.3   NaN  3.56  3.43  3.17  3.56  3.17      16.89   \n",
              "427              1.2      3.3   1.0  3.30  3.30  3.56  3.56  3.43      17.15   \n",
              "306              1.3      3.5   NaN  3.95  2.00  4.10  4.25  3.65      17.95   \n",
              "122              1.1      3.2   NaN  3.20  3.56  3.20  3.44  3.44      16.84   \n",
              "431              1.2      3.2   1.0  3.20  3.20  3.44  3.44  3.32      16.60   \n",
              "468              1.1      3.2   0.3  3.20  3.32  3.32  3.32  3.56      16.72   \n",
              "638              1.0      3.2   0.1  3.44  3.32  3.08  3.44  3.08      16.36   \n",
              "403              1.0      3.3   NaN  3.56  3.17  3.04  3.17  3.56      16.50   \n",
              "40               0.9      3.5   NaN  3.50  3.35  2.90  3.65  3.20      16.60   \n",
              "276              1.2      3.1   NaN  3.21  3.10  3.43  3.10  3.43      16.27   \n",
              "545              1.2      3.1   0.5  3.21  3.10  3.43  3.10  3.43      16.27   \n",
              "414              0.8      3.6   NaN  3.28  3.28  3.12  3.44  3.12      16.24   \n",
              "\n",
              "     3GW Total  \n",
              "275      19.26  \n",
              "62       16.80  \n",
              "67       14.40  \n",
              "30       14.05  \n",
              "107      14.00  \n",
              "394      14.00  \n",
              "5        13.92  \n",
              "157      13.82  \n",
              "318      13.20  \n",
              "337      13.20  \n",
              "216      13.00  \n",
              "398      12.96  \n",
              "9        12.60  \n",
              "50       12.46  \n",
              "437      12.27  \n",
              "596      12.00  \n",
              "209      11.95  \n",
              "327      11.40  \n",
              "119      11.28  \n",
              "16       11.12  \n",
              "179      11.12  \n",
              "61       10.86  \n",
              "104      10.80  \n",
              "389      10.80  \n",
              "429      10.80  \n",
              "432      10.80  \n",
              "433      10.80  \n",
              "537      10.76  \n",
              "240      10.75  \n",
              "407      10.64  \n",
              "128      10.62  \n",
              "214      10.55  \n",
              "273      10.42  \n",
              "115      10.29  \n",
              "263      10.20  \n",
              "100      10.16  \n",
              "174      10.16  \n",
              "387      10.16  \n",
              "391      10.16  \n",
              "427      10.16  \n",
              "306      10.05  \n",
              "122       9.96  \n",
              "431       9.84  \n",
              "468       9.84  \n",
              "638       9.84  \n",
              "403       9.77  \n",
              "40        9.75  \n",
              "276       9.74  \n",
              "545       9.74  \n",
              "414       9.68  \n",
              "\n",
              "[50 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-33e0169a-dcab-47c4-a96d-b0473f5de6ba\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw17</th>\n",
              "      <th>gw18</th>\n",
              "      <th>gw19</th>\n",
              "      <th>gw20</th>\n",
              "      <th>gw21</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>275</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>13.1</td>\n",
              "      <td>51.1</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>379</td>\n",
              "      <td>171.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.29</td>\n",
              "      <td>5.90</td>\n",
              "      <td>7.07</td>\n",
              "      <td>5.90</td>\n",
              "      <td>7.07</td>\n",
              "      <td>32.23</td>\n",
              "      <td>19.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.0</td>\n",
              "      <td>82.9</td>\n",
              "      <td>14</td>\n",
              "      <td>5</td>\n",
              "      <td>417</td>\n",
              "      <td>159.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>6.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.20</td>\n",
              "      <td>2.00</td>\n",
              "      <td>7.60</td>\n",
              "      <td>8.00</td>\n",
              "      <td>6.40</td>\n",
              "      <td>31.20</td>\n",
              "      <td>16.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.6</td>\n",
              "      <td>16.0</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>213</td>\n",
              "      <td>68.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.94</td>\n",
              "      <td>4.94</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.89</td>\n",
              "      <td>22.39</td>\n",
              "      <td>14.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>6.9</td>\n",
              "      <td>6.2</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>174</td>\n",
              "      <td>94.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.53</td>\n",
              "      <td>23.57</td>\n",
              "      <td>14.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>107</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>9.0</td>\n",
              "      <td>58.5</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>346</td>\n",
              "      <td>153.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.50</td>\n",
              "      <td>4.50</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.75</td>\n",
              "      <td>23.75</td>\n",
              "      <td>14.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>394</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.5</td>\n",
              "      <td>35.6</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "      <td>362</td>\n",
              "      <td>141.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.75</td>\n",
              "      <td>4.25</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.25</td>\n",
              "      <td>23.25</td>\n",
              "      <td>14.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.4</td>\n",
              "      <td>39.3</td>\n",
              "      <td>8</td>\n",
              "      <td>9</td>\n",
              "      <td>330</td>\n",
              "      <td>138.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.88</td>\n",
              "      <td>4.88</td>\n",
              "      <td>23.68</td>\n",
              "      <td>13.92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>157</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.9</td>\n",
              "      <td>14.4</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>250</td>\n",
              "      <td>122.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.40</td>\n",
              "      <td>2.00</td>\n",
              "      <td>6.42</td>\n",
              "      <td>5.74</td>\n",
              "      <td>6.42</td>\n",
              "      <td>25.98</td>\n",
              "      <td>13.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>318</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.3</td>\n",
              "      <td>12.4</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>279</td>\n",
              "      <td>141.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.64</td>\n",
              "      <td>22.96</td>\n",
              "      <td>13.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>337</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>6.2</td>\n",
              "      <td>24.3</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>255</td>\n",
              "      <td>97.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.62</td>\n",
              "      <td>20.62</td>\n",
              "      <td>13.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>216</th>\n",
              "      <td>362</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Palmer</td>\n",
              "      <td>5.5</td>\n",
              "      <td>18.7</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>214</td>\n",
              "      <td>84.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.80</td>\n",
              "      <td>13.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>398</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.7</td>\n",
              "      <td>21.1</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>247</td>\n",
              "      <td>119.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.88</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.88</td>\n",
              "      <td>22.00</td>\n",
              "      <td>12.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>6.6</td>\n",
              "      <td>8.7</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>216</td>\n",
              "      <td>114.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.54</td>\n",
              "      <td>19.90</td>\n",
              "      <td>12.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.6</td>\n",
              "      <td>17.3</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>169</td>\n",
              "      <td>89.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.47</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.47</td>\n",
              "      <td>20.83</td>\n",
              "      <td>12.46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>437</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>4.8</td>\n",
              "      <td>22.7</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>213</td>\n",
              "      <td>62.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.4</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.47</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.28</td>\n",
              "      <td>20.83</td>\n",
              "      <td>12.27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>596</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>7.0</td>\n",
              "      <td>48.3</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>403</td>\n",
              "      <td>117.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0.4</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.35</td>\n",
              "      <td>18.85</td>\n",
              "      <td>12.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>209</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>4.8</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>194</td>\n",
              "      <td>78.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.70</td>\n",
              "      <td>4.21</td>\n",
              "      <td>3.87</td>\n",
              "      <td>20.03</td>\n",
              "      <td>11.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>327</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.5</td>\n",
              "      <td>11.2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>133</td>\n",
              "      <td>75.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.98</td>\n",
              "      <td>19.72</td>\n",
              "      <td>11.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.2</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>338</td>\n",
              "      <td>97.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.92</td>\n",
              "      <td>19.12</td>\n",
              "      <td>11.28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>10.6</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>182</td>\n",
              "      <td>91.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.08</td>\n",
              "      <td>18.96</td>\n",
              "      <td>11.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>179</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>23.1</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>196</td>\n",
              "      <td>112.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.08</td>\n",
              "      <td>18.96</td>\n",
              "      <td>11.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>6.9</td>\n",
              "      <td>28.8</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>330</td>\n",
              "      <td>121.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.34</td>\n",
              "      <td>2.00</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.70</td>\n",
              "      <td>3.98</td>\n",
              "      <td>19.54</td>\n",
              "      <td>10.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.3</td>\n",
              "      <td>14.7</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>250</td>\n",
              "      <td>103.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.25</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>389</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.8</td>\n",
              "      <td>8.8</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>230</td>\n",
              "      <td>109.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.35</td>\n",
              "      <td>17.95</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>429</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.5</td>\n",
              "      <td>35.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>305</td>\n",
              "      <td>41.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.25</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>432</th>\n",
              "      <td>29</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>White</td>\n",
              "      <td>5.6</td>\n",
              "      <td>11.3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>281</td>\n",
              "      <td>58.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.25</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>433</th>\n",
              "      <td>31</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Zinchenko</td>\n",
              "      <td>5.2</td>\n",
              "      <td>12.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>265</td>\n",
              "      <td>57.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.25</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>537</th>\n",
              "      <td>290</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Alexander-Arnold</td>\n",
              "      <td>8.1</td>\n",
              "      <td>14.1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>334</td>\n",
              "      <td>96.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.82</td>\n",
              "      <td>17.98</td>\n",
              "      <td>10.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>240</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.6</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>240</td>\n",
              "      <td>107.4</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.90</td>\n",
              "      <td>3.71</td>\n",
              "      <td>3.14</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.52</td>\n",
              "      <td>18.36</td>\n",
              "      <td>10.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>407</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.1</td>\n",
              "      <td>9.8</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>335</td>\n",
              "      <td>105.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.92</td>\n",
              "      <td>18.00</td>\n",
              "      <td>10.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>128</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.7</td>\n",
              "      <td>10.8</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>221</td>\n",
              "      <td>92.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.98</td>\n",
              "      <td>10.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>214</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.1</td>\n",
              "      <td>11.6</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>197</td>\n",
              "      <td>103.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.67</td>\n",
              "      <td>10.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>273</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.4</td>\n",
              "      <td>7.0</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>118</td>\n",
              "      <td>67.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>17.41</td>\n",
              "      <td>10.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>34</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Bailey</td>\n",
              "      <td>5.5</td>\n",
              "      <td>2.1</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>182</td>\n",
              "      <td>69.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.41</td>\n",
              "      <td>10.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>263</th>\n",
              "      <td>591</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>M</td>\n",
              "      <td>Willian</td>\n",
              "      <td>5.3</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>214</td>\n",
              "      <td>79.1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.26</td>\n",
              "      <td>16.58</td>\n",
              "      <td>10.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.7</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>120</td>\n",
              "      <td>62.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.15</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>174</th>\n",
              "      <td>134</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Gross</td>\n",
              "      <td>6.4</td>\n",
              "      <td>3.1</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>287</td>\n",
              "      <td>123.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.69</td>\n",
              "      <td>17.28</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>387</th>\n",
              "      <td>501</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Kulusevski</td>\n",
              "      <td>7.0</td>\n",
              "      <td>2.7</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>226</td>\n",
              "      <td>132.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>16.89</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>391</th>\n",
              "      <td>509</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Richarlison</td>\n",
              "      <td>6.6</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>96</td>\n",
              "      <td>62.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>16.89</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>427</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>4.9</td>\n",
              "      <td>15.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>210</td>\n",
              "      <td>32.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.15</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>306</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.6</td>\n",
              "      <td>11.5</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>286</td>\n",
              "      <td>118.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.95</td>\n",
              "      <td>2.00</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.65</td>\n",
              "      <td>17.95</td>\n",
              "      <td>10.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>122</th>\n",
              "      <td>50</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>McGinn</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>255</td>\n",
              "      <td>87.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>16.84</td>\n",
              "      <td>9.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>431</th>\n",
              "      <td>25</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Tomiyasu</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>134</td>\n",
              "      <td>23.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.60</td>\n",
              "      <td>9.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>468</th>\n",
              "      <td>129</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Dunk</td>\n",
              "      <td>5.0</td>\n",
              "      <td>2.9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>187</td>\n",
              "      <td>52.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.3</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.56</td>\n",
              "      <td>16.72</td>\n",
              "      <td>9.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>638</th>\n",
              "      <td>506</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>D</td>\n",
              "      <td>Pedro Porro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>15.7</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>343</td>\n",
              "      <td>95.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.1</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.08</td>\n",
              "      <td>16.36</td>\n",
              "      <td>9.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>403</th>\n",
              "      <td>539</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>L.Paquetá</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>195</td>\n",
              "      <td>71.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.04</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.56</td>\n",
              "      <td>16.50</td>\n",
              "      <td>9.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>246</td>\n",
              "      <td>Everton</td>\n",
              "      <td>F</td>\n",
              "      <td>Calvert-Lewin</td>\n",
              "      <td>5.8</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>100</td>\n",
              "      <td>57.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.35</td>\n",
              "      <td>2.90</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.60</td>\n",
              "      <td>9.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>276</th>\n",
              "      <td>309</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Szoboszlai</td>\n",
              "      <td>7.1</td>\n",
              "      <td>6.4</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>292</td>\n",
              "      <td>94.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.10</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.10</td>\n",
              "      <td>3.43</td>\n",
              "      <td>16.27</td>\n",
              "      <td>9.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>545</th>\n",
              "      <td>313</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Virgil</td>\n",
              "      <td>6.1</td>\n",
              "      <td>9.6</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>278</td>\n",
              "      <td>65.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.1</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.21</td>\n",
              "      <td>3.10</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.10</td>\n",
              "      <td>3.43</td>\n",
              "      <td>16.27</td>\n",
              "      <td>9.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>414</th>\n",
              "      <td>557</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Hee Chan</td>\n",
              "      <td>5.8</td>\n",
              "      <td>12.3</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>231</td>\n",
              "      <td>83.5</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.12</td>\n",
              "      <td>16.24</td>\n",
              "      <td>9.68</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-33e0169a-dcab-47c4-a96d-b0473f5de6ba')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-33e0169a-dcab-47c4-a96d-b0473f5de6ba button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-33e0169a-dcab-47c4-a96d-b0473f5de6ba');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6d82b62a-f182-4d64-9553-d6864b934fa0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6d82b62a-f182-4d64-9553-d6864b934fa0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6d82b62a-f182-4d64-9553-d6864b934fa0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Top50 = rawdfgw228x.nlargest(50, '5GW Total')\n",
        "Top50"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Vuuihhw-Jx7s",
        "outputId": "17be3ea7-872a-4a26-af12-81894d769422"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id               team pos              name  cost  selected_by_percent  \\\n",
              "275  308          Liverpool   M             Salah  13.1                 51.1   \n",
              "62   355    Manchester City   F           Haaland  14.0                 82.9   \n",
              "157  108          Brentford   M            Mbeumo   6.9                 14.4   \n",
              "107   19            Arsenal   M              Saka   9.0                 58.5   \n",
              "5     60        Aston Villa   F           Watkins   8.4                 39.3   \n",
              "30   211            Chelsea   F         N.Jackson   6.9                  6.2   \n",
              "394  516          Tottenham   M               Son   9.5                 35.6   \n",
              "318  373  Manchester United   M       B.Fernandes   8.3                 12.4   \n",
              "67   415   Newcastle United   F              Isak   7.6                 16.0   \n",
              "398  526           West Ham   M             Bowen   7.7                 21.1   \n",
              "216  362            Chelsea   M            Palmer   5.5                 18.7   \n",
              "50   293          Liverpool   F            Darwin   7.6                 17.3   \n",
              "437   36        Aston Villa   D              Cash   4.8                 22.7   \n",
              "337  412   Newcastle United   M            Gordon   6.2                 24.3   \n",
              "209  199            Chelsea   M              Enzo   4.8                  3.0   \n",
              "9     85        Bournemouth   F           Solanke   6.6                  8.7   \n",
              "327  396  Manchester United   M          Rashford   8.5                 11.2   \n",
              "61   343    Manchester City   F         J.Alvarez   6.9                 28.8   \n",
              "119   43        Aston Villa   M      Douglas Luiz   5.6                  9.2   \n",
              "16   135           Brighton   F        João Pedro   5.4                 10.6   \n",
              "179  143           Brighton   M            Mitoma   6.5                 23.1   \n",
              "596  430   Newcastle United   D          Trippier   7.0                 48.3   \n",
              "240  249            Everton   M        A.Doucoure   5.5                  1.6   \n",
              "104   14            Arsenal   M          Ødegaard   8.3                 14.7   \n",
              "429   20            Arsenal   D            Saliba   5.5                 35.3   \n",
              "432   29            Arsenal   D             White   5.6                 11.3   \n",
              "433   31            Arsenal   D         Zinchenko   5.2                 12.9   \n",
              "407  664           West Ham   M       Ward-Prowse   6.1                  9.8   \n",
              "537  290          Liverpool   D  Alexander-Arnold   8.1                 14.1   \n",
              "128  599        Aston Villa   M             Diaby   6.7                 10.8   \n",
              "306  353    Manchester City   M             Foden   7.6                 11.5   \n",
              "389  504          Tottenham   M          Maddison   7.8                  8.8   \n",
              "214  216            Chelsea   M          Sterling   7.1                 11.6   \n",
              "115   34        Aston Villa   M            Bailey   5.5                  2.1   \n",
              "273  303          Liverpool   M         Luis Díaz   7.4                  7.0   \n",
              "174  134           Brighton   M             Gross   6.4                  3.1   \n",
              "100    6            Arsenal   M           Havertz   7.1                  1.7   \n",
              "427    5            Arsenal   D           Gabriel   4.9                 15.4   \n",
              "387  501          Tottenham   M        Kulusevski   7.0                  2.7   \n",
              "391  509          Tottenham   M       Richarlison   6.6                  1.2   \n",
              "563  342    Manchester City   D               Aké   5.0                  5.2   \n",
              "122   50        Aston Villa   M            McGinn   5.5                  1.2   \n",
              "468  129           Brighton   D              Dunk   5.0                  2.9   \n",
              "40   246            Everton   F     Calvert-Lewin   5.8                  1.1   \n",
              "431   25            Arsenal   D          Tomiyasu   4.5                  0.5   \n",
              "12   119          Brentford   F             Wissa   5.8                  7.8   \n",
              "263  591             Fulham   M           Willian   5.3                  1.0   \n",
              "403  539           West Ham   M         L.Paquetá   6.0                  1.6   \n",
              "562  341    Manchester City   D            Akanji   4.9                  5.8   \n",
              "565  350    Manchester City   D             Rúben   5.5                  7.2   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  home_adjustment  xPallgw  \\\n",
              "275            11        7  379      171.5  ...              1.2      5.9   \n",
              "62             14        5  417      159.8  ...              1.3      6.0   \n",
              "157             7        4  250      122.1  ...              1.1      5.4   \n",
              "107             5        8  346      153.9  ...              1.2      4.5   \n",
              "5               8        9  330      138.9  ...              1.1      4.4   \n",
              "30              6        1  174       94.9  ...              1.1      4.3   \n",
              "394            10        4  362      141.6  ...              1.0      4.5   \n",
              "318             3        3  279      141.7  ...              1.1      4.4   \n",
              "67              7        0  213       68.3  ...              1.2      4.1   \n",
              "398             9        1  247      119.0  ...              1.0      4.4   \n",
              "216             5        3  214       84.9  ...              1.1      4.0   \n",
              "50              4        7  169       89.1  ...              1.2      3.9   \n",
              "437             2        1  213       62.1  ...              1.1      3.9   \n",
              "337             6        5  255       97.5  ...              1.2      3.8   \n",
              "209             2        1  194       78.1  ...              1.1      3.7   \n",
              "9               8        1  216      114.7  ...              0.8      4.2   \n",
              "327             2        2  133       75.0  ...              1.1      3.8   \n",
              "61              4        8  330      121.6  ...              1.3      3.8   \n",
              "119             5        2  338       97.5  ...              1.1      3.6   \n",
              "16              5        1  182       91.2  ...              1.1      3.6   \n",
              "179             3        5  196      112.0  ...              1.1      3.6   \n",
              "596             0        7  403      117.9  ...              1.2      3.5   \n",
              "240             6        2  240      107.4  ...              0.9      3.9   \n",
              "104             4        3  250      103.5  ...              1.2      3.5   \n",
              "429             1        1  305       41.5  ...              1.2      3.5   \n",
              "432             1        2  281       58.4  ...              1.2      3.5   \n",
              "433             1        1  265       57.9  ...              1.2      3.5   \n",
              "407             3        5  335      105.5  ...              1.0      3.6   \n",
              "537             2        3  334       96.7  ...              1.2      3.4   \n",
              "128             3        7  221       92.6  ...              1.1      3.4   \n",
              "306             4        3  286      118.9  ...              1.3      3.5   \n",
              "389             3        6  230      109.6  ...              1.0      3.5   \n",
              "214             5        4  197      103.8  ...              1.1      3.3   \n",
              "115             5        4  182       69.0  ...              1.1      3.3   \n",
              "273             3        1  118       67.0  ...              1.2      3.3   \n",
              "174             3        5  287      123.1  ...              1.1      3.3   \n",
              "100             3        1  120       62.0  ...              1.2      3.3   \n",
              "427             0        0  210       32.9  ...              1.2      3.3   \n",
              "387             4        1  226      132.2  ...              1.0      3.3   \n",
              "391             3        3   96       62.5  ...              1.0      3.3   \n",
              "563             2        1  193       41.8  ...              1.3      3.3   \n",
              "122             4        2  255       87.4  ...              1.1      3.2   \n",
              "468             1        0  187       52.8  ...              1.1      3.2   \n",
              "40              3        1  100       57.7  ...              0.9      3.5   \n",
              "431             1        1  134       23.3  ...              1.2      3.2   \n",
              "12              3        2  173       76.1  ...              1.1      3.4   \n",
              "263             4        2  214       79.1  ...              0.9      3.4   \n",
              "403             2        1  195       71.8  ...              1.0      3.3   \n",
              "562             2        0  222       44.3  ...              1.3      3.2   \n",
              "565             0        0  209       42.4  ...              1.3      3.2   \n",
              "\n",
              "     xCSP  gw17  gw18  gw19  gw20  gw21  5GW Total  3GW Total  \n",
              "275   NaN  6.29  5.90  7.07  5.90  7.07      32.23      19.26  \n",
              "62    NaN  7.20  2.00  7.60  8.00  6.40      31.20      16.80  \n",
              "157   NaN  5.40  2.00  6.42  5.74  6.42      25.98      13.82  \n",
              "107   NaN  4.50  4.50  5.00  5.00  4.75      23.75      14.00  \n",
              "5     NaN  4.40  5.12  4.40  4.88  4.88      23.68      13.92  \n",
              "30    NaN  4.99  4.76  4.30  4.99  4.53      23.57      14.05  \n",
              "394   NaN  5.00  4.75  4.25  5.00  4.25      23.25      14.00  \n",
              "318   NaN  4.16  4.64  4.40  5.12  4.64      22.96      13.20  \n",
              "67    NaN  4.52  4.94  4.94  4.10  3.89      22.39      14.40  \n",
              "398   NaN  4.88  4.16  3.92  4.16  4.88      22.00      12.96  \n",
              "216   NaN  4.60  4.40  4.00  4.60  4.20      21.80      13.00  \n",
              "50    NaN  4.09  3.90  4.47  3.90  4.47      20.83      12.46  \n",
              "437   0.4  3.90  4.47  3.90  4.28  4.28      20.83      12.27  \n",
              "337   NaN  4.16  4.52  4.52  3.80  3.62      20.62      13.20  \n",
              "209   NaN  4.21  4.04  3.70  4.21  3.87      20.03      11.95  \n",
              "9     NaN  4.42  4.20  3.98  3.76  3.54      19.90      12.60  \n",
              "327   NaN  3.62  3.98  3.80  4.34  3.98      19.72      11.40  \n",
              "61    NaN  4.34  2.00  4.52  4.70  3.98      19.54      10.86  \n",
              "119   NaN  3.60  4.08  3.60  3.92  3.92      19.12      11.28  \n",
              "16    NaN  3.60  3.76  3.76  3.76  4.08      18.96      11.12  \n",
              "179   NaN  3.60  3.76  3.76  3.76  4.08      18.96      11.12  \n",
              "596   0.4  3.80  4.10  4.10  3.50  3.35      18.85      12.00  \n",
              "240   NaN  3.90  3.71  3.14  4.09  3.52      18.36      10.75  \n",
              "104   NaN  3.50  3.50  3.80  3.80  3.65      18.25      10.80  \n",
              "429   1.0  3.50  3.50  3.80  3.80  3.65      18.25      10.80  \n",
              "432   1.0  3.50  3.50  3.80  3.80  3.65      18.25      10.80  \n",
              "433   1.0  3.50  3.50  3.80  3.80  3.65      18.25      10.80  \n",
              "407   NaN  3.92  3.44  3.28  3.44  3.92      18.00      10.64  \n",
              "537   0.5  3.54  3.40  3.82  3.40  3.82      17.98      10.76  \n",
              "128   NaN  3.40  3.82  3.40  3.68  3.68      17.98      10.62  \n",
              "306   NaN  3.95  2.00  4.10  4.25  3.65      17.95      10.05  \n",
              "389   NaN  3.80  3.65  3.35  3.80  3.35      17.95      10.80  \n",
              "214   NaN  3.69  3.56  3.30  3.69  3.43      17.67      10.55  \n",
              "115   NaN  3.30  3.69  3.30  3.56  3.56      17.41      10.29  \n",
              "273   NaN  3.43  3.30  3.69  3.30  3.69      17.41      10.42  \n",
              "174   NaN  3.30  3.43  3.43  3.43  3.69      17.28      10.16  \n",
              "100   NaN  3.30  3.30  3.56  3.56  3.43      17.15      10.16  \n",
              "427   1.0  3.30  3.30  3.56  3.56  3.43      17.15      10.16  \n",
              "387   NaN  3.56  3.43  3.17  3.56  3.17      16.89      10.16  \n",
              "391   NaN  3.56  3.43  3.17  3.56  3.17      16.89      10.16  \n",
              "563   0.8  3.69  2.00  3.82  3.95  3.43      16.89       9.51  \n",
              "122   NaN  3.20  3.56  3.20  3.44  3.44      16.84       9.96  \n",
              "468   0.3  3.20  3.32  3.32  3.32  3.56      16.72       9.84  \n",
              "40    NaN  3.50  3.35  2.90  3.65  3.20      16.60       9.75  \n",
              "431   1.0  3.20  3.20  3.44  3.44  3.32      16.60       9.84  \n",
              "12    NaN  3.40  2.00  3.82  3.54  3.82      16.58       9.22  \n",
              "263   NaN  3.12  3.54  3.54  3.12  3.26      16.58      10.20  \n",
              "403   NaN  3.56  3.17  3.04  3.17  3.56      16.50       9.77  \n",
              "562   0.8  3.56  2.00  3.68  3.80  3.32      16.36       9.24  \n",
              "565   0.8  3.56  2.00  3.68  3.80  3.32      16.36       9.24  \n",
              "\n",
              "[50 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1f29a397-8b4e-4a6c-9da7-3013b34b7c94\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw17</th>\n",
              "      <th>gw18</th>\n",
              "      <th>gw19</th>\n",
              "      <th>gw20</th>\n",
              "      <th>gw21</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>275</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>13.1</td>\n",
              "      <td>51.1</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>379</td>\n",
              "      <td>171.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>5.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6.29</td>\n",
              "      <td>5.90</td>\n",
              "      <td>7.07</td>\n",
              "      <td>5.90</td>\n",
              "      <td>7.07</td>\n",
              "      <td>32.23</td>\n",
              "      <td>19.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.0</td>\n",
              "      <td>82.9</td>\n",
              "      <td>14</td>\n",
              "      <td>5</td>\n",
              "      <td>417</td>\n",
              "      <td>159.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>6.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.20</td>\n",
              "      <td>2.00</td>\n",
              "      <td>7.60</td>\n",
              "      <td>8.00</td>\n",
              "      <td>6.40</td>\n",
              "      <td>31.20</td>\n",
              "      <td>16.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>157</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.9</td>\n",
              "      <td>14.4</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>250</td>\n",
              "      <td>122.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>5.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.40</td>\n",
              "      <td>2.00</td>\n",
              "      <td>6.42</td>\n",
              "      <td>5.74</td>\n",
              "      <td>6.42</td>\n",
              "      <td>25.98</td>\n",
              "      <td>13.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>107</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>9.0</td>\n",
              "      <td>58.5</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>346</td>\n",
              "      <td>153.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.50</td>\n",
              "      <td>4.50</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.75</td>\n",
              "      <td>23.75</td>\n",
              "      <td>14.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.4</td>\n",
              "      <td>39.3</td>\n",
              "      <td>8</td>\n",
              "      <td>9</td>\n",
              "      <td>330</td>\n",
              "      <td>138.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.88</td>\n",
              "      <td>4.88</td>\n",
              "      <td>23.68</td>\n",
              "      <td>13.92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>6.9</td>\n",
              "      <td>6.2</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>174</td>\n",
              "      <td>94.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.99</td>\n",
              "      <td>4.53</td>\n",
              "      <td>23.57</td>\n",
              "      <td>14.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>394</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.5</td>\n",
              "      <td>35.6</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "      <td>362</td>\n",
              "      <td>141.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.75</td>\n",
              "      <td>4.25</td>\n",
              "      <td>5.00</td>\n",
              "      <td>4.25</td>\n",
              "      <td>23.25</td>\n",
              "      <td>14.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>318</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.3</td>\n",
              "      <td>12.4</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>279</td>\n",
              "      <td>141.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.64</td>\n",
              "      <td>22.96</td>\n",
              "      <td>13.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.6</td>\n",
              "      <td>16.0</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>213</td>\n",
              "      <td>68.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.94</td>\n",
              "      <td>4.94</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.89</td>\n",
              "      <td>22.39</td>\n",
              "      <td>14.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>398</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.7</td>\n",
              "      <td>21.1</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>247</td>\n",
              "      <td>119.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.88</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.92</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.88</td>\n",
              "      <td>22.00</td>\n",
              "      <td>12.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>216</th>\n",
              "      <td>362</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Palmer</td>\n",
              "      <td>5.5</td>\n",
              "      <td>18.7</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>214</td>\n",
              "      <td>84.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.80</td>\n",
              "      <td>13.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.6</td>\n",
              "      <td>17.3</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>169</td>\n",
              "      <td>89.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.47</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.47</td>\n",
              "      <td>20.83</td>\n",
              "      <td>12.46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>437</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>4.8</td>\n",
              "      <td>22.7</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>213</td>\n",
              "      <td>62.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>0.4</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.47</td>\n",
              "      <td>3.90</td>\n",
              "      <td>4.28</td>\n",
              "      <td>4.28</td>\n",
              "      <td>20.83</td>\n",
              "      <td>12.27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>337</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>6.2</td>\n",
              "      <td>24.3</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>255</td>\n",
              "      <td>97.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.62</td>\n",
              "      <td>20.62</td>\n",
              "      <td>13.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>209</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>4.8</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>194</td>\n",
              "      <td>78.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.21</td>\n",
              "      <td>4.04</td>\n",
              "      <td>3.70</td>\n",
              "      <td>4.21</td>\n",
              "      <td>3.87</td>\n",
              "      <td>20.03</td>\n",
              "      <td>11.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>6.6</td>\n",
              "      <td>8.7</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>216</td>\n",
              "      <td>114.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.54</td>\n",
              "      <td>19.90</td>\n",
              "      <td>12.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>327</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>8.5</td>\n",
              "      <td>11.2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>133</td>\n",
              "      <td>75.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.98</td>\n",
              "      <td>19.72</td>\n",
              "      <td>11.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>6.9</td>\n",
              "      <td>28.8</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>330</td>\n",
              "      <td>121.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.34</td>\n",
              "      <td>2.00</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.70</td>\n",
              "      <td>3.98</td>\n",
              "      <td>19.54</td>\n",
              "      <td>10.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.6</td>\n",
              "      <td>9.2</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>338</td>\n",
              "      <td>97.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>4.08</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.92</td>\n",
              "      <td>19.12</td>\n",
              "      <td>11.28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>João Pedro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>10.6</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>182</td>\n",
              "      <td>91.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.08</td>\n",
              "      <td>18.96</td>\n",
              "      <td>11.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>179</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>23.1</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>196</td>\n",
              "      <td>112.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.08</td>\n",
              "      <td>18.96</td>\n",
              "      <td>11.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>596</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>7.0</td>\n",
              "      <td>48.3</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>403</td>\n",
              "      <td>117.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0.4</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.10</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.35</td>\n",
              "      <td>18.85</td>\n",
              "      <td>12.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>240</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.6</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>240</td>\n",
              "      <td>107.4</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.90</td>\n",
              "      <td>3.71</td>\n",
              "      <td>3.14</td>\n",
              "      <td>4.09</td>\n",
              "      <td>3.52</td>\n",
              "      <td>18.36</td>\n",
              "      <td>10.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Ødegaard</td>\n",
              "      <td>8.3</td>\n",
              "      <td>14.7</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>250</td>\n",
              "      <td>103.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.25</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>429</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.5</td>\n",
              "      <td>35.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>305</td>\n",
              "      <td>41.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.25</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>432</th>\n",
              "      <td>29</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>White</td>\n",
              "      <td>5.6</td>\n",
              "      <td>11.3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>281</td>\n",
              "      <td>58.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.25</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>433</th>\n",
              "      <td>31</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Zinchenko</td>\n",
              "      <td>5.2</td>\n",
              "      <td>12.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>265</td>\n",
              "      <td>57.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.25</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>407</th>\n",
              "      <td>664</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Ward-Prowse</td>\n",
              "      <td>6.1</td>\n",
              "      <td>9.8</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>335</td>\n",
              "      <td>105.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.28</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.92</td>\n",
              "      <td>18.00</td>\n",
              "      <td>10.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>537</th>\n",
              "      <td>290</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>D</td>\n",
              "      <td>Alexander-Arnold</td>\n",
              "      <td>8.1</td>\n",
              "      <td>14.1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>334</td>\n",
              "      <td>96.7</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.4</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.82</td>\n",
              "      <td>17.98</td>\n",
              "      <td>10.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>128</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.7</td>\n",
              "      <td>10.8</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>221</td>\n",
              "      <td>92.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.68</td>\n",
              "      <td>17.98</td>\n",
              "      <td>10.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>306</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.6</td>\n",
              "      <td>11.5</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>286</td>\n",
              "      <td>118.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.95</td>\n",
              "      <td>2.00</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.25</td>\n",
              "      <td>3.65</td>\n",
              "      <td>17.95</td>\n",
              "      <td>10.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>389</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.8</td>\n",
              "      <td>8.8</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>230</td>\n",
              "      <td>109.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.35</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.35</td>\n",
              "      <td>17.95</td>\n",
              "      <td>10.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>214</th>\n",
              "      <td>216</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Sterling</td>\n",
              "      <td>7.1</td>\n",
              "      <td>11.6</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>197</td>\n",
              "      <td>103.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.67</td>\n",
              "      <td>10.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>34</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Bailey</td>\n",
              "      <td>5.5</td>\n",
              "      <td>2.1</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>182</td>\n",
              "      <td>69.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>17.41</td>\n",
              "      <td>10.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>273</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis Díaz</td>\n",
              "      <td>7.4</td>\n",
              "      <td>7.0</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>118</td>\n",
              "      <td>67.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.69</td>\n",
              "      <td>17.41</td>\n",
              "      <td>10.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>174</th>\n",
              "      <td>134</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Gross</td>\n",
              "      <td>6.4</td>\n",
              "      <td>3.1</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>287</td>\n",
              "      <td>123.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.69</td>\n",
              "      <td>17.28</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1.7</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>120</td>\n",
              "      <td>62.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.15</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>427</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>4.9</td>\n",
              "      <td>15.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>210</td>\n",
              "      <td>32.9</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>17.15</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>387</th>\n",
              "      <td>501</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Kulusevski</td>\n",
              "      <td>7.0</td>\n",
              "      <td>2.7</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>226</td>\n",
              "      <td>132.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>16.89</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>391</th>\n",
              "      <td>509</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Richarlison</td>\n",
              "      <td>6.6</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>96</td>\n",
              "      <td>62.5</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>16.89</td>\n",
              "      <td>10.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>563</th>\n",
              "      <td>342</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Aké</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>193</td>\n",
              "      <td>41.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.3</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.69</td>\n",
              "      <td>2.00</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.43</td>\n",
              "      <td>16.89</td>\n",
              "      <td>9.51</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>122</th>\n",
              "      <td>50</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>McGinn</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.2</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>255</td>\n",
              "      <td>87.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>16.84</td>\n",
              "      <td>9.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>468</th>\n",
              "      <td>129</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Dunk</td>\n",
              "      <td>5.0</td>\n",
              "      <td>2.9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>187</td>\n",
              "      <td>52.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.3</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.32</td>\n",
              "      <td>3.56</td>\n",
              "      <td>16.72</td>\n",
              "      <td>9.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>246</td>\n",
              "      <td>Everton</td>\n",
              "      <td>F</td>\n",
              "      <td>Calvert-Lewin</td>\n",
              "      <td>5.8</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>100</td>\n",
              "      <td>57.7</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.35</td>\n",
              "      <td>2.90</td>\n",
              "      <td>3.65</td>\n",
              "      <td>3.20</td>\n",
              "      <td>16.60</td>\n",
              "      <td>9.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>431</th>\n",
              "      <td>25</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Tomiyasu</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>134</td>\n",
              "      <td>23.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.60</td>\n",
              "      <td>9.84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>5.8</td>\n",
              "      <td>7.8</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>173</td>\n",
              "      <td>76.1</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.40</td>\n",
              "      <td>2.00</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.82</td>\n",
              "      <td>16.58</td>\n",
              "      <td>9.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>263</th>\n",
              "      <td>591</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>M</td>\n",
              "      <td>Willian</td>\n",
              "      <td>5.3</td>\n",
              "      <td>1.0</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>214</td>\n",
              "      <td>79.1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.12</td>\n",
              "      <td>3.26</td>\n",
              "      <td>16.58</td>\n",
              "      <td>10.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>403</th>\n",
              "      <td>539</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>L.Paquetá</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>195</td>\n",
              "      <td>71.8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.04</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.56</td>\n",
              "      <td>16.50</td>\n",
              "      <td>9.77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>562</th>\n",
              "      <td>341</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Akanji</td>\n",
              "      <td>4.9</td>\n",
              "      <td>5.8</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>222</td>\n",
              "      <td>44.3</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.56</td>\n",
              "      <td>2.00</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.36</td>\n",
              "      <td>9.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>565</th>\n",
              "      <td>350</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Rúben</td>\n",
              "      <td>5.5</td>\n",
              "      <td>7.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>209</td>\n",
              "      <td>42.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.3</td>\n",
              "      <td>3.2</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.56</td>\n",
              "      <td>2.00</td>\n",
              "      <td>3.68</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.32</td>\n",
              "      <td>16.36</td>\n",
              "      <td>9.24</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f29a397-8b4e-4a6c-9da7-3013b34b7c94')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1f29a397-8b4e-4a6c-9da7-3013b34b7c94 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1f29a397-8b4e-4a6c-9da7-3013b34b7c94');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-19d4901d-7cb4-4aef-babe-aa9bc27ea0c9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-19d4901d-7cb4-4aef-babe-aa9bc27ea0c9')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-19d4901d-7cb4-4aef-babe-aa9bc27ea0c9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import string"
      ],
      "metadata": {
        "id": "JSw3vk9PJvps"
      },
      "execution_count": 54,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=Top50['cost'],y=Top50['5GW Total'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('cost')\n",
        "ax.set_ylabel('5GW Total')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in Top50.iterrows():\n",
        "    ax.annotate(row['name'], (row['cost'], row['5GW Total']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 696
        },
        "id": "435FV-_ocWOi",
        "outputId": "fd769ee7-dbae-45ff-80be-79f47be0dac4"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x"
      ],
      "metadata": {
        "id": "mQ58vdHpUd8O",
        "outputId": "5075aea9-91d9-4ad5-f72d-11c84674e7e1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        }
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.4                  0.2   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  3.9   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  6.2   \n",
              "3     39              Aston Villa   F    Davis   4.9                  0.1   \n",
              "4     44              Aston Villa   F    Duran   5.0                  0.2   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "753  647                 West Ham   G    Anang   4.0                  0.1   \n",
              "754  546  Wolverhampton Wanderers   G  Bentley   3.9                  1.3   \n",
              "755  564  Wolverhampton Wanderers   G     King   4.0                  0.7   \n",
              "756  569  Wolverhampton Wanderers   G  José Sá   5.0                  1.4   \n",
              "757  571  Wolverhampton Wanderers   G   Šarkić   4.0                  0.3   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  ...  home_adjustment  xPallgw  \\\n",
              "0               0        0    0        0.0  ...              1.2      2.0   \n",
              "1               2        2  103       64.2  ...              1.2      3.0   \n",
              "2               5        2  162       56.4  ...              1.2      3.0   \n",
              "3               0        0    0        0.0  ...              1.1      2.0   \n",
              "4               2        0   60       14.4  ...              1.1      2.2   \n",
              "..            ...      ...  ...        ...  ...              ...      ...   \n",
              "753             0        0    0        0.0  ...              1.0      2.0   \n",
              "754             0        0   51        4.8  ...              0.8      2.0   \n",
              "755             0        0    0        0.0  ...              0.8      2.0   \n",
              "756             0        0  236       35.1  ...              0.8      2.0   \n",
              "757             0        0    0        0.0  ...              0.8      2.0   \n",
              "\n",
              "     xCSP  gw17  gw18  gw19  gw20  gw21  5GW Total  3GW Total  \n",
              "0     NaN   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "1     NaN   3.0  3.00   3.2  3.20  3.10      15.50       9.20  \n",
              "2     NaN   3.0  3.00   3.2  3.20  3.10      15.50       9.20  \n",
              "3     NaN   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "4     NaN   2.2  2.26   2.2  2.24  2.24      11.14       6.66  \n",
              "..    ...   ...   ...   ...   ...   ...        ...        ...  \n",
              "753  -0.0   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "754   0.0   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "755   0.0   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "756   0.0   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "757   0.0   2.0  2.00   2.0  2.00  2.00      10.00       6.00  \n",
              "\n",
              "[735 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3b26e09a-f30a-4ed4-a232-b789d8f30cd0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>...</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>gw17</th>\n",
              "      <th>gw18</th>\n",
              "      <th>gw19</th>\n",
              "      <th>gw20</th>\n",
              "      <th>gw21</th>\n",
              "      <th>5GW Total</th>\n",
              "      <th>3GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>3.9</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>103</td>\n",
              "      <td>64.2</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.00</td>\n",
              "      <td>3.2</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.10</td>\n",
              "      <td>15.50</td>\n",
              "      <td>9.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.2</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>162</td>\n",
              "      <td>56.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.2</td>\n",
              "      <td>3.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3.00</td>\n",
              "      <td>3.2</td>\n",
              "      <td>3.20</td>\n",
              "      <td>3.10</td>\n",
              "      <td>15.50</td>\n",
              "      <td>9.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>4.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>44</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Duran</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>14.4</td>\n",
              "      <td>...</td>\n",
              "      <td>1.1</td>\n",
              "      <td>2.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.2</td>\n",
              "      <td>2.26</td>\n",
              "      <td>2.2</td>\n",
              "      <td>2.24</td>\n",
              "      <td>2.24</td>\n",
              "      <td>11.14</td>\n",
              "      <td>6.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>753</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>754</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>3.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>51</td>\n",
              "      <td>4.8</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>755</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>756</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>José Sá</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>236</td>\n",
              "      <td>35.1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>757</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Šarkić</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.8</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "      <td>6.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>735 rows × 23 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b26e09a-f30a-4ed4-a232-b789d8f30cd0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3b26e09a-f30a-4ed4-a232-b789d8f30cd0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3b26e09a-f30a-4ed4-a232-b789d8f30cd0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e0c20357-1acd-4a68-a058-f7a65f38207e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e0c20357-1acd-4a68-a058-f7a65f38207e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e0c20357-1acd-4a68-a058-f7a65f38207e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "apiplayers = master"
      ],
      "metadata": {
        "id": "3bvpGcxtVMyS"
      },
      "execution_count": 57,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Mostselected = apiplayers.nlargest(20, 'selected_by_percent')\n",
        "Mostselected"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "O-wNiNtosYZU",
        "outputId": "8d078347-244e-4efa-8482-3328e1b00714"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id              team pos         name  cost  selected_by_percent  \\\n",
              "468  355   Manchester City   F      Haaland  14.0                 82.9   \n",
              "17    19           Arsenal   M         Saka   9.0                 58.5   \n",
              "394  308         Liverpool   M        Salah  13.1                 51.1   \n",
              "553  430  Newcastle United   D     Trippier   7.0                 48.3   \n",
              "60    60       Aston Villa   F      Watkins   8.4                 39.3   \n",
              "679  516         Tottenham   M          Son   9.5                 35.6   \n",
              "18    20           Arsenal   D       Saliba   5.5                 35.3   \n",
              "695  524          West Ham   G       Areola   4.3                 34.5   \n",
              "457  343   Manchester City   F    J.Alvarez   6.9                 28.8   \n",
              "535  412  Newcastle United   M       Gordon   6.2                 24.3   \n",
              "163  143          Brighton   M       Mitoma   6.5                 23.1   \n",
              "37    36       Aston Villa   D         Cash   4.8                 22.7   \n",
              "697  526          West Ham   M        Bowen   7.7                 21.1   \n",
              "278  220    Crystal Palace   D     Andersen   5.1                 20.7   \n",
              "258  362           Chelsea   M       Palmer   5.5                 18.7   \n",
              "379  293         Liverpool   F       Darwin   7.6                 17.3   \n",
              "465  352   Manchester City   G   Ederson M.   5.5                 17.3   \n",
              "480  369   Manchester City   D       Walker   5.3                 16.3   \n",
              "538  415  Newcastle United   F         Isak   7.6                 16.0   \n",
              "670  506         Tottenham   D  Pedro Porro   5.4                 15.7   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "468           14.95              1.17            14        5  417      159.8   \n",
              "17             4.96              4.96             5        8  346      153.9   \n",
              "394           10.20              4.02            11        7  379      171.5   \n",
              "553            0.25              5.32             0        7  403      117.9   \n",
              "60             8.12              1.73             8        9  330      138.9   \n",
              "679            5.99              3.48            10        4  362      141.6   \n",
              "18             1.07              0.52             1        1  305       41.5   \n",
              "695            0.00              0.00             0        0  243       37.8   \n",
              "457            4.18              3.98             4        8  330      121.6   \n",
              "535            4.57              1.82             6        5  255       97.5   \n",
              "163            3.11              3.15             3        5  196      112.0   \n",
              "37             3.54              1.32             2        1  213       62.1   \n",
              "697            6.68              1.62             9        1  247      119.0   \n",
              "278            1.14              0.82             2        1  319       79.9   \n",
              "258            5.06              2.05             5        3  214       84.9   \n",
              "379            6.71              1.12             4        7  169       89.1   \n",
              "465            0.00              0.02             0        0  257       29.2   \n",
              "480            0.18              1.30             0        1  284       51.1   \n",
              "538            7.64              0.87             7        0  213       68.3   \n",
              "670            1.43              3.09             0        6  343       95.0   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  \n",
              "468     112              7.5     1294         2            3  \n",
              "17       94              6.3     1305         2            3  \n",
              "394     127              7.9     1380         2            3  \n",
              "553      82              5.1     1392         2            3  \n",
              "60       99              6.2     1399         2            3  \n",
              "679     113              7.1     1333         2            3  \n",
              "18       65              4.1     1440         2            3  \n",
              "695      45              3.2     1260         2            3  \n",
              "457      80              5.0     1319         2            3  \n",
              "535      83              5.5     1223         2            3  \n",
              "163      60              4.0     1148         2            3  \n",
              "37       47              3.1     1108         2            3  \n",
              "697      86              5.7     1350         2            3  \n",
              "278      64              4.0     1440         2            3  \n",
              "258      59              4.2      880         2            3  \n",
              "379      62              4.1      866         2            3  \n",
              "465      46              3.1     1350         2            3  \n",
              "480      50              3.1     1440         2            3  \n",
              "538      58              4.8      814         2            3  \n",
              "670      60              4.0     1347         2            3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6a6ad91d-2458-4dbe-8a99-b6c510c5a778\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>468</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.0</td>\n",
              "      <td>82.9</td>\n",
              "      <td>14.95</td>\n",
              "      <td>1.17</td>\n",
              "      <td>14</td>\n",
              "      <td>5</td>\n",
              "      <td>417</td>\n",
              "      <td>159.8</td>\n",
              "      <td>112</td>\n",
              "      <td>7.5</td>\n",
              "      <td>1294</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>9.0</td>\n",
              "      <td>58.5</td>\n",
              "      <td>4.96</td>\n",
              "      <td>4.96</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>346</td>\n",
              "      <td>153.9</td>\n",
              "      <td>94</td>\n",
              "      <td>6.3</td>\n",
              "      <td>1305</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>394</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>13.1</td>\n",
              "      <td>51.1</td>\n",
              "      <td>10.20</td>\n",
              "      <td>4.02</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>379</td>\n",
              "      <td>171.5</td>\n",
              "      <td>127</td>\n",
              "      <td>7.9</td>\n",
              "      <td>1380</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>553</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>7.0</td>\n",
              "      <td>48.3</td>\n",
              "      <td>0.25</td>\n",
              "      <td>5.32</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>403</td>\n",
              "      <td>117.9</td>\n",
              "      <td>82</td>\n",
              "      <td>5.1</td>\n",
              "      <td>1392</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.4</td>\n",
              "      <td>39.3</td>\n",
              "      <td>8.12</td>\n",
              "      <td>1.73</td>\n",
              "      <td>8</td>\n",
              "      <td>9</td>\n",
              "      <td>330</td>\n",
              "      <td>138.9</td>\n",
              "      <td>99</td>\n",
              "      <td>6.2</td>\n",
              "      <td>1399</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>679</th>\n",
              "      <td>516</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Son</td>\n",
              "      <td>9.5</td>\n",
              "      <td>35.6</td>\n",
              "      <td>5.99</td>\n",
              "      <td>3.48</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "      <td>362</td>\n",
              "      <td>141.6</td>\n",
              "      <td>113</td>\n",
              "      <td>7.1</td>\n",
              "      <td>1333</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.5</td>\n",
              "      <td>35.3</td>\n",
              "      <td>1.07</td>\n",
              "      <td>0.52</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>305</td>\n",
              "      <td>41.5</td>\n",
              "      <td>65</td>\n",
              "      <td>4.1</td>\n",
              "      <td>1440</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>695</th>\n",
              "      <td>524</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Areola</td>\n",
              "      <td>4.3</td>\n",
              "      <td>34.5</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>243</td>\n",
              "      <td>37.8</td>\n",
              "      <td>45</td>\n",
              "      <td>3.2</td>\n",
              "      <td>1260</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>457</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>6.9</td>\n",
              "      <td>28.8</td>\n",
              "      <td>4.18</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>330</td>\n",
              "      <td>121.6</td>\n",
              "      <td>80</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1319</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>535</th>\n",
              "      <td>412</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Gordon</td>\n",
              "      <td>6.2</td>\n",
              "      <td>24.3</td>\n",
              "      <td>4.57</td>\n",
              "      <td>1.82</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>255</td>\n",
              "      <td>97.5</td>\n",
              "      <td>83</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1223</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>163</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.5</td>\n",
              "      <td>23.1</td>\n",
              "      <td>3.11</td>\n",
              "      <td>3.15</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>196</td>\n",
              "      <td>112.0</td>\n",
              "      <td>60</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1148</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>4.8</td>\n",
              "      <td>22.7</td>\n",
              "      <td>3.54</td>\n",
              "      <td>1.32</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>213</td>\n",
              "      <td>62.1</td>\n",
              "      <td>47</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1108</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>697</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.7</td>\n",
              "      <td>21.1</td>\n",
              "      <td>6.68</td>\n",
              "      <td>1.62</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>247</td>\n",
              "      <td>119.0</td>\n",
              "      <td>86</td>\n",
              "      <td>5.7</td>\n",
              "      <td>1350</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>278</th>\n",
              "      <td>220</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>D</td>\n",
              "      <td>Andersen</td>\n",
              "      <td>5.1</td>\n",
              "      <td>20.7</td>\n",
              "      <td>1.14</td>\n",
              "      <td>0.82</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>319</td>\n",
              "      <td>79.9</td>\n",
              "      <td>64</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1440</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>258</th>\n",
              "      <td>362</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Palmer</td>\n",
              "      <td>5.5</td>\n",
              "      <td>18.7</td>\n",
              "      <td>5.06</td>\n",
              "      <td>2.05</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>214</td>\n",
              "      <td>84.9</td>\n",
              "      <td>59</td>\n",
              "      <td>4.2</td>\n",
              "      <td>880</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>379</th>\n",
              "      <td>293</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>F</td>\n",
              "      <td>Darwin</td>\n",
              "      <td>7.6</td>\n",
              "      <td>17.3</td>\n",
              "      <td>6.71</td>\n",
              "      <td>1.12</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>169</td>\n",
              "      <td>89.1</td>\n",
              "      <td>62</td>\n",
              "      <td>4.1</td>\n",
              "      <td>866</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>465</th>\n",
              "      <td>352</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>G</td>\n",
              "      <td>Ederson M.</td>\n",
              "      <td>5.5</td>\n",
              "      <td>17.3</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>257</td>\n",
              "      <td>29.2</td>\n",
              "      <td>46</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1350</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>480</th>\n",
              "      <td>369</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>D</td>\n",
              "      <td>Walker</td>\n",
              "      <td>5.3</td>\n",
              "      <td>16.3</td>\n",
              "      <td>0.18</td>\n",
              "      <td>1.30</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>284</td>\n",
              "      <td>51.1</td>\n",
              "      <td>50</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1440</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>538</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.6</td>\n",
              "      <td>16.0</td>\n",
              "      <td>7.64</td>\n",
              "      <td>0.87</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>213</td>\n",
              "      <td>68.3</td>\n",
              "      <td>58</td>\n",
              "      <td>4.8</td>\n",
              "      <td>814</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>670</th>\n",
              "      <td>506</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>D</td>\n",
              "      <td>Pedro Porro</td>\n",
              "      <td>5.4</td>\n",
              "      <td>15.7</td>\n",
              "      <td>1.43</td>\n",
              "      <td>3.09</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>343</td>\n",
              "      <td>95.0</td>\n",
              "      <td>60</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1347</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6a6ad91d-2458-4dbe-8a99-b6c510c5a778')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6a6ad91d-2458-4dbe-8a99-b6c510c5a778 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6a6ad91d-2458-4dbe-8a99-b6c510c5a778');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-597979bf-a379-47ff-989a-c577987d8930\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-597979bf-a379-47ff-989a-c577987d8930')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-597979bf-a379-47ff-989a-c577987d8930 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ax = sns.barplot(x='selected_by_percent', y='name', data=Mostselected, hue='pos', dodge=False)\n",
        "sns.set(rc={'figure.figsize':(11.7,8.27)})\n",
        "plt.title(\"Most Selected\")\n",
        "plt.xticks(rotation=90)\n",
        "plt.ylabel(\"selected_by_percent\")\n",
        "plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0)\n",
        "plt.gcf().set_size_inches(30,10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 602
        },
        "id": "8PBz92opthgG",
        "outputId": "55975327-298e-4412-c0a7-a6f5e5939538"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 3000x1000 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAACk4AAANbCAYAAAAO9vEsAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAC75UlEQVR4nOzdeZhf48E+8HsmiUliMhMilUSzWhNJeBFbkAQpRcSu1sauthLeVqwJrdhqp2kJCUVRhFJrmihRS7wEFUGIaGkRMiOLyTLz+8Nrfp03iWVMjOb7+VzXua75nvOc57nPSa/+0evuc4pqampqAgAAAAAAAAAAAFAAihs7AAAAAAAAAAAAAMC3RXESAAAAAAAAAAAAKBiKkwAAAAAAAAAAAEDBUJwEAAAAAAAAAAAACobiJAAAAAAAAAAAAFAwFCcBAAAAAAAAAACAgqE4CQAAAAAAAAAAABQMxUkAAAAAAAAAAACgYChOAgAAAAAAAAAAAAVDcRIAAAAAyJAhQ9KlS5fGjlEvRUVFGT58eGPHAAAAAAD+QyhOAgAAAFDQxowZk6KiohQVFeWJJ55Y4npNTU06duyYoqKi7LLLLsslw7vvvpvhw4fnhRde+Mr3vPTSS9lrr73SuXPnNG/ePGussUYGDhyYK6+8crlk/KZuueWWXHbZZY0dAwAAAABAcRIAAAAAkqR58+a55ZZbljj/2GOP5e9//3tKSkqW29rvvvtuRowY8ZWLk08++WQ22WSTTJkyJUcccUSuuuqqHH744SkuLs7ll1++3HJ+E4qTAAAAAMB3RdPGDgAAAAAA3wU77bRT7rjjjlxxxRVp2vT//89mt9xySzbeeON8+OGHjZiurl/+8pcpLy/Ps88+m9atW9e59v777zdOKAAAAACA/xB2nAQAAACAJPvtt19mzZqVRx55pPbcggUL8oc//CH777//Uu+ZO3duTj755HTs2DElJSVZd911c/HFF6empqbOuEceeSRbbbVVWrdundLS0qy77ro57bTTkiQTJ05Mnz59kiSHHHJI7WfDx4wZs8ys06dPz/rrr79EaTJJvve97y1x7ne/+1023njjtGjRIquuump+9KMf5Z133vmyV5Lq6upcdtllWX/99dO8efOsvvrqOeqoo/Lxxx8vMfaBBx5Iv3790qpVq5SVlaVPnz61O3j2798/999/f95+++3a5+vSpUvtvVVVVTn77LOz1lprpaSkJB07dszPfvazVFVV1VmjqqoqJ510Utq2bZtWrVpl1113zd///vcvfQ4AAAAAgH9nx0kAAAAASNKlS5dsscUWufXWW/PDH/4wyWdlwIqKivzoRz/KFVdcUWd8TU1Ndt1110yYMCGHHXZYNtxwwzz00EP57//+7/zjH//IpZdemiT529/+ll122SW9e/fOOeeck5KSkrzxxhuZNGlSkqR79+4555xzctZZZ+XII4/M1ltvnSTZcsstl5m1c+fO+etf/5qXX345PXv2/MLn+uUvf5kzzzwz++yzTw4//PB88MEHufLKK7PNNtvk+eefX2r58nNHHXVUxowZk0MOOSQnnHBC3nrrrVx11VV5/vnnM2nSpDRr1ixJMmbMmBx66KFZf/31M2zYsLRu3TrPP/98Hnzwwey///45/fTTU1FRkb///e+176W0tDTJZ+XMXXfdNU888USOPPLIdO/ePS+99FIuvfTSvPbaaxk3blxtnsMPPzy/+93vsv/++2fLLbfMn//85+y8885f+PwAAAAAAP+X4iQAAAAA/K/9998/w4YNy/z589OiRYvcfPPN6devXzp06LDE2HvvvTd//vOf84tf/CKnn356kuTYY4/N3nvvncsvvzzHHXdc1lxzzTzyyCNZsGBBHnjggay22mpLzLP66qvnhz/8Yc4666xsscUWOfDAA7805ymnnJIf/vCH2XDDDbPppptm6623znbbbZcBAwbUlhmT5O23387ZZ5+dX/ziF7U7XCbJHnvskf/6r//KNddcU+f8v3viiSdy3XXX5eabb66z4+aAAQOy44475o477sj++++fioqKnHDCCdl0000zceLENG/evHbs5ztvDhw4MGussUY+/vjjJZ7vlltuyaOPPprHHnssW221Ve35nj175uijj86TTz6ZLbfcMlOmTMnvfve7HHPMMbn66qtr3/cBBxyQF1988UvfGQAAAADA53yqGwAAAAD+1z777JP58+fnvvvuyyeffJL77rtvmZ/p/tOf/pQmTZrkhBNOqHP+5JNPTk1NTR544IEkqd3R8Z577kl1dXWD5Bw4cGD++te/Ztddd82UKVNy4YUXZocddsgaa6yRe++9t3bcXXfdlerq6uyzzz758MMPa4927dpl7bXXzoQJE5a5xh133JHy8vIMHDiwzr0bb7xxSktLa+995JFH8sknn+TUU0+tU5pMkqKioi99ljvuuCPdu3fPeuutV2edbbfdNklq1/nTn/6UJEu87xNPPPHLXxgAAAAAwL+x4yQAAAAA/K+2bdtm++23zy233JJ58+Zl8eLF2WuvvZY69u23306HDh3SqlWrOue7d+9eez1J9t1331x33XU5/PDDc+qpp2a77bbLHnvskb322ivFxfX//zX36dMnd911VxYsWJApU6bk7rvvzqWXXpq99torL7zwQnr06JHXX389NTU1WXvttZc6x7/vTvl/vf7666moqMj3vve9pV5///33kyTTp09Pki/9ZPgXrTN16tS0bdv2C9d5++23U1xcnDXXXLPO9XXXXbde6wIAAAAAhUtxEgAAAAD+zf77758jjjgi//znP/PDH/6wdsfI+mrRokX+8pe/ZMKECbn//vvz4IMP5rbbbsu2226bhx9+OE2aNPlG86+00krp06dP+vTpk3XWWSeHHHJI7rjjjpx99tmprq5OUVFRHnjggaWuU1pausx5q6ur873vfS8333zzUq8vq+j4dVVXV6dXr1655JJLlnq9Y8eODbIOAAAAAMDnFCcBAAAA4N/svvvuOeqoo/LUU0/ltttuW+a4zp0759FHH80nn3xSZ9fJV199tfb654qLi7Pddttlu+22yyWXXJLzzjsvp59+eiZMmJDtt9/+K33S+qvYZJNNkiTvvfdekmTNNddMTU1NunbtmnXWWedrzbXmmmvm0UcfTd++fdOiRYsvHJckL7/8ctZaa61ljlvWM6655pqZMmVKtttuuy98D507d051dXWmT59eZ5fJadOmfdmjAAAAAADUUf9vAQEAAADACqi0tDS//vWvM3z48AwaNGiZ43baaacsXrw4V111VZ3zl156aYqKivLDH/4wSfLRRx8tce+GG26YJKmqqkqSrLzyykmS2bNnf6WMEyZMSE1NzRLn//SnPyX5/5+v3mOPPdKkSZOMGDFiifE1NTWZNWvWMtfYZ599snjx4px77rlLXFu0aFFt1h/84Adp1apVRo4cmU8//XSJNT638sorp6KiYqnr/OMf/8i11167xLX58+dn7ty5SVL7Pq+44oo6Yy677LJlPgMAAAAAwNLYcRIAAAAA/o8f//jHXzpm0KBBGTBgQE4//fTMmDEjG2ywQR5++OHcc889OfHEE2t3YjznnHPyl7/8JTvvvHM6d+6c999/P9dcc02+//3vZ6uttkry2a6LrVu3zqhRo9KqVausvPLK2WyzzdK1a9elrn388cdn3rx52X333bPeeutlwYIFefLJJ3PbbbelS5cuOeSQQ2rn/cUvfpFhw4ZlxowZ2W233dKqVau89dZbufvuu3PkkUfmlFNOWeoa/fr1y1FHHZWRI0fmhRdeyA9+8IM0a9Ysr7/+eu64445cfvnl2WuvvVJWVpZLL700hx9+ePr06ZP9998/q6yySqZMmZJ58+Zl7NixSZKNN944t912W4YOHZo+ffqktLQ0gwYNykEHHZTbb789Rx99dCZMmJC+fftm8eLFefXVV3P77bfnoYceyiabbJINN9ww++23X6655ppUVFRkyy23zPjx4/PGG2987X9fAAAAAKCwKU4CAAAAQD0UFxfn3nvvzVlnnZXbbrstN9xwQ7p06ZKLLrooJ598cu24XXfdNTNmzMj111+fDz/8MKuttlr69euXESNGpLy8PEnSrFmzjB07NsOGDcvRRx+dRYsW5YYbblhmcfLiiy/OHXfckT/96U/57W9/mwULFqRTp0455phjcsYZZ6R169a1Y0899dSss846ufTSSzNixIgkSceOHfODH/wgu+666xc+46hRo7LxxhvnN7/5TU477bQ0bdo0Xbp0yYEHHpi+ffvWjjvssMPyve99L+eff37OPffcNGvWLOutt15OOumk2jHHHHNMXnjhhdxwww259NJL07lz5wwaNCjFxcUZN25cLr300tx44425++6707Jly3Tr1i0//elP63xi/Prrr0/btm1z8803Z9y4cdl2221z//33p2PHjl/9Hw4AAAAAKHhFNUv7pg8AAAAAAAAAAADACqi4sQMAAAAAAAAAAAAAfFsUJwEAAAAAAAAAAICCoTgJAAAAAAAAAAAAFAzFSQAAAAAAAAAAAKBgKE4CAAAAAAAAAAAABUNxEgAAAAAAAAAAACgYTRs7AMtHdXV13n333bRq1SpFRUWNHQcAAAAAAAAAAGhkNTU1+eSTT9KhQ4cUF9tzb0WyePHiLFy4sLFjNJpmzZqlSZMmX3m84uQK6t13303Hjh0bOwYAAAAAAAAAAPAd88477+T73/9+Y8egAdTU1OS9997L7NmzU1PT2GkaT1FR0rp167Rv3/4rbTSoOLmCatWqVZLP/kuurKyskdMAAAAAAAAAAACNrbKyMh07dqztFvGf77333svHH89Oq1atU1JSkqQQv05ck6qqqnz88ewkSYcOHb70DsXJFdTnrdmysjLFSQAAAAAAAAAAoNZX2ZGP777Fixdn9uzPSpOtWpU3dpxGtdJKzZMks2fPzuqrr/6ln+32oXoAAAAAAAAAAAD4D7Nw4cLU1OR/d5qkpKQkNTWfvZcvY8fJFdw2Z9yaJiUtGjsGAAAAAAAAAAArkOcuOrixIwC17CD6ma/+Huw4CQAAAAAAAAAAABQMO04CAAAAAAAAAAAAjeraa0dl9OjfLnG+W7c1c8stdzToWoqTAAAAAAAAAAAAsALZ/rw7G23tR0/bs973lpQ0z9VXj1riXENTnAQAAAAAAAAAAAAaXXFxUXr27L3811nuKwAAAAAAAAAAAAB8R9hxEgAAAAAAAAAAAPhOWLRoUZ3fTZo0SVFRUYOuoTgJAAAAAAAAAAAANLr58+dnq602rXPu7LPPzQ9/uHODrqM4CQAAAAAAAAAAADS6kpLmGTXqujrnOnRYo8HXUZwEAAAAAAAAAAAAGl1xcVG6d++x/NdZ7iuswGbMmJGioqK88MILy32tLl265LLLLlvu6wAAAAAAAAAAAMCKbIUsTg4ZMiS77bbbEucnTpyYoqKizJ49+1vPBAAAAAAAAAAAADS+FbI4CQAAAAAAAAAAALA0BVucnDVrVvbbb7+sscYaadmyZXr16pVbb721zpgHH3wwW221VVq3bp02bdpkl112yfTp05c55+LFi3PYYYela9euadGiRdZdd91cfvnldcZ8vhvmxRdfnPbt26dNmzY59thjs3Dhwtox77//fgYNGpQWLVqka9euufnmmxv24QEAAAAAAAAAAKBANW3sAI3l008/zcYbb5yf//znKSsry/3335+DDjooa665ZjbddNMkydy5czN06ND07t07c+bMyVlnnZXdd989L7zwQoqLl+ycVldX5/vf/37uuOOOtGnTJk8++WSOPPLItG/fPvvss0/tuAkTJqR9+/aZMGFC3njjjey7777ZcMMNc8QRRyT5rFz57rvvZsKECWnWrFlOOOGEvP/++1/4PFVVVamqqqr9XVlZ2RCvCQAAAAAAAAAAgP8wj562Z2NH+NqOOOLoHHHE0d/KWitscfK+++5LaWlpnXOLFy+u/XuNNdbIKaecUvv7+OOPz0MPPZTbb7+9tji55551/8Nz/fXXp23btnnllVfSs2fPJdZs1qxZRowYUfu7a9eu+etf/5rbb7+9TnFylVVWyVVXXZUmTZpkvfXWy84775zx48fniCOOyGuvvZYHHnggzzzzTPr06ZMkGT16dLp37/6Fzzty5Mg6awMAAAAAAAAAAABLWmE/1T1gwIC88MILdY7rrruu9vrixYtz7rnnplevXll11VVTWlqahx56KDNnzqwd8/rrr2e//fZLt27dUlZWli5duiRJnTH/19VXX52NN944bdu2TWlpaX77298uMX799ddPkyZNan+3b9++dkfJqVOnpmnTptl4441rr6+33npp3br1Fz7vsGHDUlFRUXu88847X/qOAAAAAAAAAAAAoNCssDtOrrzyyllrrbXqnPv73/9e+/dFF12Uyy+/PJdddll69eqVlVdeOSeeeGIWLFhQO2bQoEHp3Llzrr322nTo0CHV1dXp2bNnnTH/7ve//31OOeWU/OpXv8oWW2yRVq1a5aKLLsrTTz9dZ1yzZs3q/C4qKkp1dfU3et6SkpKUlJR8ozkAAAAAAAAAAABgRbfCFie/zKRJkzJ48OAceOCBSZLq6uq89tpr6dGjR5Jk1qxZmTZtWq699tpsvfXWSZInnnjiS+fccsstc8wxx9Semz59+tfKtd5662XRokV57rnnaj/VPW3atMyePftrzQMAAAAAAAAAAAAsaYX9VPeXWXvttfPII4/kySefzNSpU3PUUUflX//6V+31VVZZJW3atMlvf/vbvPHGG/nzn/+coUOHfumckydPzkMPPZTXXnstZ555Zp599tmvlWvdddfNjjvumKOOOipPP/10nnvuuRx++OFp0aJFvZ4TAAAAAAAAAAAA+P8Ktjh5xhlnZKONNsoOO+yQ/v37p127dtltt91qrxcXF+f3v/99nnvuufTs2TMnnXRSLrrooi+c86ijjsoee+yRfffdN5tttllmzZpVZ/fJr+qGG25Ihw4d0q9fv+yxxx458sgj873vfe9rzwMAAAAAAAAAAADUVVRTU1PT2CFoeJWVlSkvL88Gx49KkxK7VQIAAAAAAAAA0HCeu+jgxo5APXzeKaqoqEhZWVljx+Eb+vTTTzN9+ptZbbV2WWmlksaO0+gWLKjKhx/+M2uu2S3Nmzf/wrEFu+MkAAAAAAAAAAAAUHgUJwEAAAAAAAAAAICCoTgJAAAAAAAAAAAAFAzFSQAAAAAAAAAAAKBRXXvtqGy++UYZNGiHVFdXL3H9iCMOyeabb5Rzzjn7G6/V9BvPAAAAAAAAAAAAAHxnfHLl5o22dqvjn6r3vU2bNs3s2bPz/PP/k4033qT2/HvvvZuXX34xLVu2bIiIdpwEAAAAAAAAAAAAGl+zZs2yxRZ988gjD9Y5/8gjD6dbtzWzxhrfb5B1FCcBAAAAAAAAAACA74SBA3fIn/88PosWLaw99/DDD+QHP9ixwdZQnAQAAAAAAAAAAAC+E7beepssXLggTz/92Se/33rrzbzxxusZOHCHBltDcRIAAAAAAAAAAAD4TmjevEW23rp/HnnkoSTJww8/mF69eqdDhzUabI2mDTYT30l/+cV+KSsra+wYAAAAAAAAAAAA8JX84Ac75KyzTs+nn36aRx55KPvss1+Dzm/HSQAAAAAAAAAAAOA7Y/PNt0jTpk1z7bW/znvvvZvtthvYoPMrTgIAAAAAAAAAAADfGU2bNsuAAdvm1ltvzsYb90mbNm0adv4GnQ0AAAAAAAAAAADgG9p1193z8ccfZ/Dg3Rt8bsVJAAAAAAAAAAAA4Dtl/fV75sILL1kuc/tUNwAAAAAAAAAAAFAwimpqamoaOwQNr7KyMuXl5amoqEhZWVljxwEAAAAAAAAAABqZTtGK5dNPP8306W9mtdXaZaWVSho7TqNbsKAqH374z6y5Zrc0b978C8f6VPcK7p3zN0+r5k0aOwYAAAAAAPAfptNZLzV2BAAAAFgufKobAAAAAAAAAAAAKBiKkwAAAAAAAAAAAEDBUJwEAAAAAAAAAAAACobiJAAAAAAAAAAAAFAwFCcBAAAAAAAAAACAgqE4CQAAAAAAAAAAABQMxUkAAAAAAAAAAACgYChOAgAAAAAAAAAAAAVDcRIAAAAAAAAAAAAoGE0bOwAAAAAAAAAAAABQ2K69dlRGj/5tkqSoqCgtW66cdu3a5b/+a6Psuec+6dq1W4OtpTjZCMaMGZMTTzwxs2fPbuwoAAAAAAAAAAAArGB2+d0PGm3t+w58uN73lpQ0z9VXj0qSzJ07L9Onv5F77rkr99xzd0477az88Ic7N0hGn+quhw8++CA/+clP0qlTp5SUlKRdu3bZYYcdMmnSpMaOBgAAAAAAAAAAAP+RiouL0rNn7/Ts2TubbbZ59t//wNx4463ZYIMNc9555+Qf//h7w6zTILMUmD333DPPP/98xo4dm9deey333ntv+vfvn1mzZjV2NAAAAAAAAAAAAFhhlJSU5OSTf56FCxfm3nvvbpA5FSe/ptmzZ+fxxx/PBRdckAEDBqRz587ZdNNNM2zYsOy6665JkksuuSS9evXKyiuvnI4dO+aYY47JnDlzljnnBx98kE022SS77757qqqqMn369AwePDirr756SktL06dPnzz66KPf1iMCAAAAAAAAAADAd0bXrt3Stu338tJLLzXIfIqTX1NpaWlKS0szbty4VFVVLXVMcXFxrrjiivztb3/L2LFj8+c//zk/+9nPljr2nXfeydZbb52ePXvmD3/4Q0pKSjJnzpzstNNOGT9+fJ5//vnsuOOOGTRoUGbOnLnMXFVVVamsrKxzAAAAAAAAAAAAwIpg9dVXz6xZHzbIXIqTX1PTpk0zZsyYjB07Nq1bt07fvn1z2mmn5cUXX6wdc+KJJ2bAgAHp0qVLtt122/ziF7/I7bffvsRc06ZNS9++fbPDDjvkhhtuSJMmTZIkG2ywQY466qj07Nkza6+9ds4999ysueaauffee5eZa+TIkSkvL689Onbs2PAPDwAAAAAAAAAAAI2gpqYmRUVFDTKX4mQ97Lnnnnn33Xdz7733Zscdd8zEiROz0UYbZcyYMUmSRx99NNttt13WWGONtGrVKgcddFBmzZqVefPm1c4xf/78bL311tljjz1y+eWX1/kHnTNnTk455ZR07949rVu3TmlpaaZOnfqFO04OGzYsFRUVtcc777yz3J4fAAAAAAAAAAAAvk3vv/9+2rRp0yBzKU7WU/PmzTNw4MCceeaZefLJJzNkyJCcffbZmTFjRnbZZZf07t07d955Z5577rlcffXVSZIFCxbU3l9SUpLtt98+9913X/7xj3/UmfuUU07J3XffnfPOOy+PP/54XnjhhfTq1avO/f9XSUlJysrK6hwAAAAAAAAAAADwn+7NN6fngw/eT69eGzTIfIqTDaRHjx6ZO3dunnvuuVRXV+dXv/pVNt9886yzzjp59913lxhfXFycm266KRtvvHEGDBhQZ8ykSZMyZMiQ7L777unVq1fatWuXGTNmfItPAwAAAAAAAAAAAI2vqqoqv/rVBVlppZWy6667N8icTRtklgIy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/PLLM2bMmK91DwAAAAAAAAAAANCwVuji5IABAzJnzpxMnjy59tzjjz+edu3a5emnn86nn35ae37ChAnp1KlT1lxzzeWSpby8PK1bt14ucwMAAAAAAAAAAABfzQpdnFx33XXTvn37TJw4sfbcxIkTM3jw4HTt2jVPPfVUnfMDBgzITTfdlE022SStWrVKu3btsv/+++f9999PksyYMSMDBgxIkqyyyiopKirKkCFDlrr2/fffn/Ly8tx8881JlvxUd//+/XPCCSfkZz/7WVZdddW0a9cuw4cPr71eU1OT4cOHp1OnTikpKUmHDh1ywgknNMyLAQAAAAAAAAAAgAK1Qhcnk892nZwwYULt7wkTJqR///7p169f7fn58+fn6aefzoABA7Jw4cKce+65mTJlSsaNG5cZM2bUliM7duyYO++8M0kybdq0vPfee7n88suXWPOWW27Jfvvtl5tvvjkHHHDAMrONHTs2K6+8cp5++ulceOGFOeecc/LII48kSe68885ceuml+c1vfpPXX38948aNS69evZY5V1VVVSorK+scAAAAAAAAAAAAQF1NGzvA8jZgwICceOKJWbRoUebPn5/nn38+/fr1y8KFCzNq1KgkyV//+tdUVVVlwIAB6dSpU+293bp1yxVXXJE+ffpkzpw5KS0tzaqrrpok+d73vrfUT29fffXVOf300/PHP/4x/fr1+8JsvXv3ztlnn50kWXvttXPVVVdl/PjxGThwYGbOnJl27dpl++23T7NmzdKpU6dsuummy5xr5MiRGTFixNd9PQAAAAAAAAAAAFBQVvgdJ/v375+5c+fm2WefzeOPP5511lknbdu2Tb9+/fL000/n008/zcSJE9OtW7d06tQpzz33XAYNGpROnTqlVatWteXHmTNnfulaf/jDH3LSSSflkUce+dLSZPJZcfLftW/fvvaz4HvvvXfmz5+fbt265Ygjjsjdd9+dRYsWLXOuYcOGpaKiovZ45513vnR9AAAAAAAAAAAAKDQrfHFyrbXWyve///1MmDAhEyZMqC00dujQIR07dsyTTz6ZCRMmZNttt83cuXOzww47pKysLDfffHOeffbZ3H333UmSBQsWfOla//Vf/5W2bdvm+uuvT01NzZeOb9asWZ3fRUVFqa6uTvLZZ8GnTZuWa665Ji1atMgxxxyTbbbZJgsXLlzqXCUlJSkr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vOyyy1JTU5NDDz00I0aMSHl5ee21lVZaKV26dMkWW2zR4CEBAAAAAAAAAAAAGsLXKk7++Mc/TpJ07do1W265ZZo1a7ZcQgEAAAAAAAAAAAAsD1+rOPm5fv36pbq6Oq+99lref//9VFdX17m+zTbbNEi4xtClS5eceOKJOfHEExs7CgAAAAAAAAAAANDA6lWcfOqpp7L//vvn7bffTk1NTZ1rRUVFWbx4cYOE+7qGDBmS2bNnZ9y4cV84br311stbb72Vt99+O+3atft2wgEAAAAAAAAAAACNrrg+Nx199NHZZJNN8vLLL+ejjz7Kxx9/XHt89NFHDZ2xQT3xxBOZP39+9tprr4wdO7ZRMixcuLBR1gUAAAAAAAAAAIBCV6/i5Ouvv57zzjsv3bt3T+vWrVNeXl7n+C4bPXp09t9//xx00EG5/vrrv3Ds/vvvn3333bfOuYULF2a11VbLjTfemCR58MEHs9VWW6V169Zp06ZNdtlll0yfPr12/IwZM1JUVJTbbrst/fr1S/PmzXPzzTcnSa677rp07949zZs3z3rrrZdrrrmm9r7hw4enqKhoiWPMmDEN9CYAAAAAAAAAAACg8NSrOLnZZpvljTfeaOgsy90nn3ySO+64IwceeGAGDhyYioqKPP7448scf8ABB+SPf/xj5syZU3vuoYceyrx587L77rsnSebOnZuhQ4dm8uTJGT9+fIqLi7P77runurq6zlynnnpqfvrTn2bq1KnZYYcdcvPNN+ess87KL3/5y0ydOjXnnXdezjzzzNpdME855ZS89957tcfFF1+cli1bZpNNNllq1qqqqlRWVtY5AAAAAAAAAAAAgLqa1uem448/PieffHL++c9/plevXmnWrFmd6717926QcA3t97//fdZee+2sv/76SZIf/ehHGT16dLbeeuuljt9hhx2y8sor5+67785BBx2UJLnllluy6667plWrVkmSPffcs849119/fdq2bZtXXnklPXv2rD1/4oknZo899qj9ffbZZ+dXv/pV7bmuXbvmlVdeyW9+85v8+Mc/TmlpaUpLS5MkTz31VM4444yMHTu2zpz/buTIkRkxYkR9XgsAAAAAAAAAAAAUjHoVJz8vCx566KG154qKilJTU5OioqIsXry4YdI1sOuvvz4HHnhg7e8DDzww/fr1y5VXXllbhPx3TZs2zT777JObb745Bx10UObOnZt77rknv//972vHvP766znrrLPy9NNP58MPP6zdaXLmzJl1So7/vlPk3LlzM3369Bx22GE54ogjas8vWrRoiU+dz5w5M7vttltOOeWU7LPPPst8tmHDhmXo0KG1vysrK9OxY8ev8loAAAAAAAAAAACgYNSrOPnWW281dI7l7pVXXslTTz2VZ555Jj//+c9rzy9evDi///3v6xQY/90BBxyQfv365f33388jjzySFi1aZMcdd6y9PmjQoHTu3DnXXnttOnTokOrq6vTs2TMLFiyoM8/KK69c+/fnn/6+9tprs9lmm9UZ16RJk9q/586dm1133TVbbLFFzjnnnC98vpKSkpSUlHzJWwAAAAAAAAAAAIDCVq/iZOfOnRs6x3I3evTobLPNNrn66qvrnL/hhhsyevToZRYnt9xyy3Ts2DG33XZbHnjggey99961nyafNWtWpk2blmuvvbb2c99PPPHEl2ZZffXV06FDh7z55ps54IADljqmpqYmBx54YKqrq3PTTTelqKjo6zwuAAAAAAAAAAAAsBT1Kk4myU033ZRRo0blrbfeyl//+td07tw5l112Wbp27ZrBgwc3ZMZ6ueqqq3L33Xdn/PjxWbhwYW666aacc845dT6fnSSHH354Lrnkkvztb3/L+uuvv9S59t9//4waNSqvvfZaJkyYUHt+lVVWSZs2bfLb3/427du3z8yZM3Pqqad+pXwjRozICSeckPLy8uy4446pqqrK5MmT8/HHH2fo0KEZPnx4Hn300Tz88MOZM2dO7S6V5eXladGiRT3fCgAAAAAAAAAAABS24vrc9Otf/zpDhw7NTjvtlNmzZ2fx4sVJktatW+eyyy5ryHxfS3V1dZo2/awL+uGHH2b69OlJknvvvTezZs3K7rvvvsQ93bt3T/fu3TN69OhlznvAAQfklVdeyRprrJG+ffvWni8uLs7vf//7PPfcc+nZs2dOOumkXHTRRV8p6+GHH57rrrsuN9xwQ3r16pV+/fplzJgx6dq1a5Lksccey5w5c7Llllumffv2tcdtt932ld8HAAAAAAAAAAAAUFdRTU1Nzde9qUePHjnvvPOy2267pVWrVpkyZUq6deuWl19+Of3798+HH364PLJ+qR133DFrrbVWrrrqqkZZ/7uksrIy5eXl2eD4UWlSYodKAAAoBM9ddHBjRwAAAAAAAL7DPu8UVVRUpKysrLHjQKOp146Tb731Vv7rv/5rifMlJSWZO3fuNw71dX388ce57777MnHixGy//fbf+voAAAAAAAAAAADAf4am9bmpa9eueeGFF9K5c+c65x988MF07969QYJ9HYceemieffbZnHzyyRk8ePC3vj4AAAAAAAAAAADwn6FexcmhQ4fm2GOPzaeffpqampo888wzufXWWzNy5Mhcd911DZ3xS919993f+poAAAAAAAAAAADAf556FScPP/zwtGjRImeccUbmzZuX/fffPx06dMjll1+eH/3oRw2dEQAAAAAAAAAAAKBB1Ks4mSQHHHBADjjggMybNy9z5szJ9773vYbMBQAAAAAAAAAAANDg6lWcfOutt7Jo0aKsvfbaadmyZVq2bJkkef3119OsWbN06dKlITMCAAAAAAAAAAAANIji+tw0ZMiQPPnkk0ucf/rppzNkyJBvmgkAAAAAAAAAAABguahXcfL5559P3759lzi/+eab54UXXvimmQAAAAAAAAAAAACWi3oVJ4uKivLJJ58scb6ioiKLFy/+xqEAAAAAAAAAAAAAloeimpqamq9706BBg9KiRYvceuutadKkSZJk8eLF2XfffTN37tw88MADDR6Ur6eysjLl5eWpqKhIWVlZY8cBAAAAAAAAAAAamU4RfKZpfW46//zz069fv6y77rrZeuutkySPP/54Kisr8+c//7lBAwIAAAAAAAAAAAA0lHp9qnv99dfPiy++mH322Sfvv/9+Pvnkkxx88MF59dVX07Nnz4bOCAAAAAAAAAAAANAgvvaOkwsXLsyOO+6YUaNG5bzzzlsemQAAAAAAAAAAAACWi6+942SzZs3y4osvLo8sAAAAAAAAAAAAAMtVvT7VfeCBB2b06NENnQUAAAAAAAAAAABgufran+pOkkWLFuX666/Po48+mo033jgrr7xyneuXXHJJg4QDAAAAAAAAAAAAaEj1Kk6+/PLL2WijjZIkr732Wp1rRUVF3zwVDead8zdPq+ZNGjsGAADfEZ3OeqmxIwAAAAAAAAA0qnoVJydMmNDQOQAAAAAAAAAAAACWu+JvcvMbb7yRhx56KPPnz0+S1NTUNEgoAAAAAAAAAAAAgOWhXsXJWbNmZbvttss666yTnXbaKe+9916S5LDDDsvJJ5/coAEBAAAAAAAAAAAAGkq9ipMnnXRSmjVrlpkzZ6Zly5a15/fdd988+OCDDRYOAAAAAAAAAAAAoCE1rc9NDz/8cB566KF8//vfr3N+7bXXzttvv90gwQAAAAAAAAAAAAAaWr12nJw7d26dnSY/99FHH6WkpOQbhwIAAAAAAAAAAABYHupVnNx6661z44031v4uKipKdXV1LrzwwgwYMKDBwgEAAAAAAAAAAAA0pHp9qvvCCy/Mdtttl8mTJ2fBggX52c9+lr/97W/56KOPMmnSpIbOCAAAAAAAAAAAANAg6rXjZM+ePfPaa69lq622yuDBgzN37tzsscceef7557Pmmms2dEYAAAAAAAAAAACABlGvHSeTpLy8PKeffnpDZgEAAAAAAAAAAABYrupdnPz4448zevToTJ06NUnSo0ePHHLIIVl11VUbLNyKoqioKHfffXd22223xo4CAAAAAAAAAAAABa1en+r+y1/+ki5duuSKK67Ixx9/nI8//jhXXHFFunbtmr/85S8NnbHB/fOf/8xPf/rTrLXWWmnevHlWX3319O3bN7/+9a8zb968xo4HAAAAAAAAAAAALCf12nHy2GOPzb777ptf//rXadKkSZJk8eLFOeaYY3LsscfmpZdeatCQDenNN99M375907p165x33nnp1atXSkpK8tJLL+W3v/1t1lhjjey6665fe94FCxZkpZVWWg6JAQAAAAAAAAAAgIZSrx0n33jjjZx88sm1pckkadKkSYYOHZo33nijwcItD8ccc0yaNm2ayZMnZ5999kn37t3TrVu3DB48OPfff38GDRqUJJk5c2YGDx6c0tLSlJWVZZ999sm//vWv2nmGDx+eDTfcMNddd126du2a5s2bJ0lef/31bLPNNmnevHl69OiRRx55ZIkML730Urbddtu0aNEibdq0yZFHHpk5c+bUXh8yZEh22223XHzxxWnfvn3atGmTY489NgsXLlzObwcAAAAAAAAAAABWbPUqTm600UaZOnXqEuenTp2aDTbY4BuHWl5mzZqVhx9+OMcee2xWXnnlpY4pKipKdXV1Bg8enI8++iiPPfZYHnnkkbz55pvZd99964x94403cuedd+auu+7KCy+8kOrq6uyxxx5ZaaWV8vTTT2fUqFH5+c9/XueeuXPnZocddsgqq6ySZ599NnfccUceffTRHHfccXXGTZgwIdOnT8+ECRMyduzYjBkzJmPGjFnms1VVVaWysrLOAQAAAAAAAAAAANRVr091n3DCCfnpT3+aN954I5tvvnmS5KmnnsrVV1+d888/Py+++GLt2N69ezdM0gbwxhtvpKamJuuuu26d86uttlo+/fTTJJ99hnz77bfPSy+9lLfeeisdO3ZMktx4441Zf/318+yzz6ZPnz5JPvs894033pi2bdsmSR5++OG8+uqreeihh9KhQ4ckyXnnnZcf/vCHtWvdcsst+fTTT3PjjTfWljevuuqqDBo0KBdccEFWX331JMkqq6ySq666Kk2aNMl6662XnXfeOePHj88RRxyx1GcbOXJkRowY0VCvCgAAAAAAAAAAAFZI9SpO7rfffkmSn/3sZ0u9VlRUlJqamhQVFWXx4sXfLOG34Jlnnkl1dXUOOOCAVFVVZerUqenYsWNtaTJJevTokdatW2fq1Km1xcnOnTvXliaT1N73eWkySbbYYos6a32+K+e/73jZt2/fVFdXZ9q0abXFyfXXX7/Op9Dbt2+fl156aZnPMGzYsAwdOrT2d2VlZZ38AAAAAAAAAAAAQD2Lk2+99VZD5/hWrLXWWikqKsq0adPqnO/WrVuSpEWLFl9rvmV97rshNGvWrM7vzz8hviwlJSUpKSlZbnkAAAAAAAAAAABgRVBcn5s6d+78lY5jjjkm7733XkNnrrc2bdpk4MCBueqqqzJ37txljuvevXveeeedvPPOO7XnXnnllcyePTs9evT40vv+/ZmfeuqpJcZMmTKlzvqTJk1KcXHxEp8QBwAAAAAAAAAAABpWvYqTX9Vf/vKXzJ8/f3ku8bVdc801WbRoUTbZZJPcdtttmTp1aqZNm5bf/e53efXVV9OkSZNsv/326dWrVw444ID8z//8T5555pkcfPDB6devXzbZZJNlzr399ttnnXXWyY9//ONMmTIljz/+eE4//fQ6Yw444IA0b948P/7xj/Pyyy9nwoQJOf7443PQQQfVfqYbAAAAAAAAAAAAWD6Wa3Hyu2jNNdfM888/n+233z7Dhg3LBhtskE022SRXXnllTjnllJx77rkpKirKPffck1VWWSXbbLNNtt9++3Tr1i233XbbF85dXFycu+++O/Pnz8+mm26aww8/PL/85S/rjGnZsmUeeuihfPTRR+nTp0/22muvbLfddrnqqquW52MDAAAAAAAAAAAASYpqampq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/tJLL83AgQNzxhlnJEm6du2aF154IRdffHEOPfTQ2v122223/J//83+SJGeeeWauvfbafOtb38oPfvCDJMnPfvaz7LDDDnnjjTfSpk2bbLDBBjn55JNrjz/++OMzceLE3Hrrrdl2220/NeOoUaNy9tlnr/Q9AQAAAAAAAAAAgFKwwjNO/qdnn302nTt3Xm59586d88ILL3zlUKvaeuutl+9+97sZN25cxo4dm+9+97tZd911v/Q4M2fOTJ8+feqs69OnT15++eUsXbq0dl2PHj1qX7du3TpJ0r179+XWvfnmm0mSpUuX5txzz0337t2z9tprp3nz5pk4cWLmzp37mVlOO+20LFiwoHaZN2/el74eAAAAAAAAAAAAWNOt8IyT/6lbt24ZNWpUxowZk8aNGydJFi9enFGjRqVbt271GnBVOeyww3LcccclSX75y1+u0nM1atSo9nWhUPjMdcuWLUuSXHzxxbniiity+eWXp3v37qmoqMiwYcOyePHizzxHeXl5ysvLV0V8AAAAAAAAAAAAWGOsVHFy9OjR2WOPPbLhhhvWzqb4zDPPpFAo5M9//nO9BlxVhgwZksWLF6dQKGTw4MFfuH/jxo3rzCKZ/LtAOnXq1Drrpk6dmq5du6Zhw4YrnW3q1KnZc889c9BBByX5d6Hyb3/7WzbffPOVHhMAAAAAAAAAAABYyeLktttum9mzZ2f8+PF58cUXkyT77bdffvjDH6aioqJeA64qDRs2zMyZM2tff5FOnTrlgQceyP7775/y8vKsu+66Oemkk/Ktb30r5557bvbbb7888sgjufrqq3PNNdd8pWybbLJJbrvttjz88MNZa621cumll+aNN95QnAQAAAAAAAAAAICvaKWKk0lSUVGRH//4x/WZ5WtXWVm5wvuec845+T//5/9k4403TnV1dWpqarL11lvn1ltvzZlnnplzzz03bdu2zTnnnJNDDz30K+X6+c9/ntmzZ2fw4MFp1qxZfvzjH+d73/teFixY8JXGBQAAAAAAAAAAgFJXqKmpqVmZA2+++eb86le/yuzZs/PII4+kY8eOueyyy7LRRhtlzz33rO+cfElVVVVp2bJlnjutW1o0WfmvDQcAoH51OPPZYkcAAAAAAACgRH3SKVqwYMGXmnQO1jQNVuaga6+9NieeeGJ23XXXvPvuu1m6dGmSZK211srll19en/kAAAAAAAAAAAAA6s1KFSevuuqqXHfddTn99NNTVvb/vu27d+/eefZZM+gAAAAAAAAAAAAAq6eVKk6++uqr6dWr13Lry8vL88EHH3zlUAAAAAAAAAAAAACrwkoVJzt37pynnnpqufUTJkxIt27dvmomAAAAAAAAAAAAgFWi7It3Wd6JJ56YY489Nh999FFqamoybdq0/OY3v8moUaMyZsyY+s4IAAAAAAAAAAAAUC9Wqjh5xBFHpGnTpvn5z3+eRYsW5Yc//GHatWuXK664Ivvvv399ZwQAAAAAAAAAAACoFytVnEySAw88MAceeGAWLVqUhQsXZv3116/PXAAAAAAAAAAAAAD1rsHKHDRgwIC89957SZJmzZrVliarqqoyYMCAegsHAAAAAAAAAAAAUJ9Wqjg5efLkLF68eLn1H330UR588MGvHAoAAAAAAAAAAABgVfhSX9X9zDPP1L5+4YUX8vrrr9e+X7p0aSZMmJANNtig/tLxlbU/9dFUVlYWOwYAAAAAAAAAAACsFr5UcXKrrbZKoVBIoVD41K/kbtq0aa666qp6CwcAAAAAAAAAAABQn75UcfLVV19NTU1NNtpoo0ybNi3rrbde7bbGjRtn/fXXT8OGDes9JAAAAAAAAAAAAEB9+FLFyY4dOyZJli1btkrCAAAAAAAAAAAAAKxKDVbmoFGjRuWGG25Ybv0NN9yQCy+88CuHAgAAAAAAAAAAAFgVVqo4+atf/SqbbbbZcuu32GKLjB49+iuHAgAAAAAAAAAAAFgVVqo4+frrr6dt27bLrV9vvfUyf/78rxwKAAAAAAAAAAAAYFUoW5mD2rdvn6lTp6Zz58511k+dOjXt2rWrl2DUj11G75Kypiv1YwYAYAVNPX5qsSMAAAAAAAAAsIJWqlF35JFHZtiwYVmyZEkGDBiQJJk0aVKGDx+ek046qV4DAgAAAAAAAAAAANSXlSpOnnLKKXn77bdzzDHHZPHixUmSJk2a5Gc/+1lOO+20eg0IAAAAAAAAAAAAUF9WqjhZKBRy4YUX5owzzsjMmTPTtGnTbLLJJikvL6/vfAAAAAAAAAAAAAD1psFXOfj111/PO++8k4033jjl5eWpqampr1wAAAAAAAAAAAAA9W6lipNvv/12Bg4cmK5du2a33XbL/PnzkySHH354TjrppHoNCAAAAAAAAAAAAFBfVqo4+dOf/jSNGjXK3Llz06xZs9r1++23XyZMmFBv4QAAAAAAAAAAAADqU9nKHHTPPfdk4sSJ2XDDDeus32STTfLaa6/VSzAAAAAAAAAAAACA+rZSM05+8MEHdWaa/MQ777yT8vLyrxwKAAAAAAAAAAAAYFVYqeLkt7/97dx000217wuFQpYtW5aLLroo/fv3r7dwAAAAAAAAAAAAAPVppb6q+6KLLsrAgQPz+OOPZ/HixRk+fHief/75vPPOO5k6dWp9ZwQAAAAAAAAAAACoFys14+SWW26Zv/3tb9lpp52y55575oMPPsjee++dJ598MhtvvHF9Zyw5kydPTqFQyHvvvVfsKAAAAAAAAAAAALBGWakZJ5OkZcuWOf300+szyzfK66+/nvPOOy9/+ctf8o9//CPrr79+ttpqqwwbNiwDBw4sdjwAAAAAAAAAAADgU6xwcfKZZ55Z4UF79OixUmG+KebMmZM+ffqkVatWufjii9O9e/csWbIkEydOzLHHHpsXX3yx2BEBAAAAAAAAAACAT7HCxcmtttoqhUIhNTU1n7tfoVDI0qVLv3Kw1dkxxxyTQqGQadOmpaKionb9FltskcMOOyxJcumll2bs2LGZPXt21l577eyxxx656KKL0rx58yTJa6+9luOOOy4PPfRQFi9enE6dOuXiiy/ObrvtVjvejBkz8rOf/SwvvPBCttpqq4wdOzabbrrp13uxAAAAAAAAAAAAsAZZ4eLkq6++uipzfGO88847mTBhQs4777w6pclPtGrVKknSoEGDXHnllencuXNmz56dY445JsOHD88111yTJDn22GOzePHiPPDAA6moqMgLL7xQW6r8xOmnn55LLrkk6623Xo466qgcdthhmTp16qfmqq6uTnV1de37qqqqerpiAAAAAAAAAAAAWHOscHGyY8eOqzLHN8Yrr7ySmpqabLbZZp+737Bhw2pfd+rUKSNHjsxRRx1VW5ycO3duvv/976d79+5Jko022mi5Mc4777z07ds3SXLqqafmu9/9bj766KM0adJkuX1HjRqVs88+e2UvCwAAAAAAAAAAAEpCg5U98Oabb06fPn3Srl27vPbaa0mSyy+/PH/84x/rLdzq6Iu+qvwT9913XwYOHJgNNtggLVq0yMEHH5y33347ixYtSpKccMIJGTlyZPr06ZOzzjorzzzzzHJj9OjRo/Z127ZtkyRvvvnmp57vtNNOy4IFC2qXefPmfdlLAwAAAAAAAAAAgDXeShUnr7322px44onZbbfd8t5772Xp0qVJ/v011Zdffnl95lvtbLLJJikUCnnxxRc/c585c+Zk9913T48ePXL77bdnxowZ+eUvf5kkWbx4cZLkiCOOyOzZs3PwwQfn2WefTe/evXPVVVfVGadRo0a1rwuFQpJk2bJln3rO8vLyVFZW1lkAAAAAAAAAAACAulaqOHnVVVfluuuuy+mnn56GDRvWru/du3eeffbZegu3Olp77bUzePDg/PKXv8wHH3yw3Pb33nsvM2bMyLJly3LJJZdk++23T9euXfPPf/5zuX3bt2+fo446KnfccUdOOumkXHfddV/HJQAAAAAAAAAAAEDJWqni5KuvvppevXott768vPxTy4Rrml/+8pdZunRptt1229x+++15+eWXM3PmzFx55ZXZYYcd0qVLlyxZsiRXXXVVZs+enZtvvjmjR4+uM8awYcMyceLEvPrqq3niiSdy//33p1u3bkW6IgAAAAAAAAAAACgNK1Wc7Ny5c5566qnl1k+YMKEkyn8bbbRRnnjiifTv3z8nnXRSttxyy+yyyy6ZNGlSrr322vTs2TOXXnppLrzwwmy55ZYZP358Ro0aVWeMpUuX5thjj023bt0yZMiQdO3aNddcc02RrggAAAAAAAAAAABKQ6Gmpqbmyx40ZsyYjBgxIpdcckkOP/zwjBkzJrNmzcqoUaMyZsyY7L///qsiK19CVVVVWrZsmW0v3DZlTcuKHQcAYI029fipxY4AAAAAAAAAX+iTTtGCBQtSWVlZ7DhQNCvVqDviiCPStGnT/PznP8+iRYvywx/+MBtssEGuuOIKpUkAAAAAAAAAAABgtbVSxckPP/wwe+21Vw488MAsWrQozz33XKZOnZoNN9ywvvMBAAAAAAAAAAAA1JsGK3PQnnvumZtuuilJsnjx4vzXf/1XLr300nzve9/LtddeW68BAQAAAAAAAAAAAOrLShUnn3jiiXz7299Oktx2221p3bp1Xnvttdx000258sor6zUgAAAAAAAAAAAAQH1ZqeLkokWL0qJFiyTJPffck7333jsNGjTI9ttvn9dee61eAwIAAAAAAAAAAADUl5UqTnbp0iV/+MMfMm/evEycODHf+c53kiRvvvlmKisr6zUgAAAAAAAAAAAAQH1ZqeLkmWeemZNPPjmdOnXKdtttlx122CHJv2ef7NWrV70GBAAAAAAAAAAAAKgvZStz0D777JOddtop8+fPT8+ePWvXDxw4MHvttVe9hQMAAAAAAAAAAACoT4WampqaYoeg/lVVVaVly5ZZsGCBr08HAAAAAAAAAAB0iuD/Wqmv6gYAAAAAAAAAAAD4JlKcBAAAAAAAAAAAAEqG4iQAAAAAAAAAAABQMhQnAQAAAAAAAAAAgJKhOAkAAAAAAAAAAACUDMVJAAAAAAAAAAAAoGQoTgIAAAAAAAAAAAAlo6zYAVi15l2wfVo0aVjsGAAAK6XDmc8WOwIAAAAAAAAAaxgzTgIAAAAAAAAAAAAlQ3ESAAAAAAAAAAAAKBmKkwAAAAAAAAAAAEDJUJwEAAAAAAAAAAAASobiJAAAAAAAAAAAAFAyFCcBAAAAAAAAAACAkqE4CQAAAAAAAAAAAJQMxUkAAAAAAAAAAACgZChOAgAAAAAAAAAAACVDcRIAAAAAAAAAAAAoGSVfnDz00ENTKBRql3XWWSdDhgzJM888U+xoAAAAAAAAAAAAQD0r+eJkkgwZMiTz58/P/PnzM2nSpJSVlWX33XcvdiwAAAAAAAAAAACgnilOJikvL0+bNm3Spk2bbLXVVjn11FMzb968vPXWW0mSZ599NgMGDEjTpk2zzjrr5Mc//nEWLlyYJHnuuefSoEGD2n3feeedNGjQIPvvv3/t+CNHjsxOO+1U+/65557LrrvumubNm6d169Y5+OCD869//at2e79+/XLCCSdk+PDhWXvttdOmTZuMGDHia7gTAAAAAAAAAAAAsGZTnPxfFi5cmP/5n/9Jly5dss466+SDDz7I4MGDs9Zaa2X69On53e9+l/vuuy/HHXdckmSLLbbIOuuskylTpiRJHnzwwTrvk2TKlCnp169fkuS9997LgAED0qtXrzz++OOZMGFC3njjjey77751ctx4442pqKjIY489losuuijnnHNO7r333s/MXV1dnaqqqjoLAAAAAAAAAAAAUJfiZJI777wzzZs3T/PmzdOiRYv86U9/ym9/+9s0aNAgv/71r/PRRx/lpptuypZbbpkBAwbk6quvzs0335w33ngjhUIhO++8cyZPnpwkmTx5cn70ox+luro6L774YpYsWZKHH344ffv2TZJcffXV6dWrV84///xsttlm6dWrV2644Ybcf//9+dvf/labqUePHjnrrLOyySabZOjQoendu3cmTZr0mdcwatSotGzZsnZp3779Kr1nAAAAAAAAAAAA8E2kOJmkf//+eeqpp/LUU09l2rRpGTx4cHbddde89tprmTlzZnr27JmKiora/fv06ZNly5blpZdeSpL07du3tjg5ZcqUDBgwoLZMOX369CxZsiR9+vRJkjz99NO5//77a4uazZs3z2abbZYkmTVrVu05evToUSdj27Zt8+abb37mNZx22mlZsGBB7TJv3rx6uTcAAAAAAAAAAACwJikrdoDVQUVFRbp06VL7fsyYMWnZsmWuu+66FTq+X79+GTZsWF5++eW88MIL2WmnnfLiiy9m8uTJeffdd9O7d+80a9Ysyb+/CnyPPfbIhRdeuNw4bdu2rX3dqFGjOtsKhUKWLVv2mRnKy8tTXl6+QnkBAAAAAAAAAACgVClOfopCoZAGDRrkww8/TLdu3TJu3Lh88MEHtbNOTp06NQ0aNMimm26aJOnevXvWWmutjBw5MltttVWaN2+efv365cILL8y7776bfv361Y699dZb5/bbb0+nTp1SVub2AwAAAAAAAAAAwNfJV3Unqa6uzuuvv57XX389M2fOzPHHH187M+SBBx6YJk2a5JBDDslzzz2X+++/P8cff3wOPvjgtG7dOsm/i5Y777xzxo8fX1uS7NGjR6qrqzNp0qT07du39lzHHnts3nnnnRxwwAGZPn16Zs2alYkTJ+ZHP/pRli5dWozLBwAAAAAAAAAAgJKhOJlkwoQJadu2bdq2bZvtttsu06dPz+9+97v069cvzZo1y8SJE/POO+/kW9/6VvbZZ58MHDgwV199dZ0x+vbtm6VLl9YWJxs0aJCdd945hUIhffr0qd2vXbt2mTp1apYuXZrvfOc76d69e4YNG5ZWrVqlQQM/DgAAAAAAAAAAAFiVCjU1NTXFDkH9q6qqSsuWLfPcad3SoknDYscBAFgpHc58ttgRAAAAAAAAYI3xSadowYIFqaysLHYcKBpTHAIAAAAAAAAAAAAlQ3ESAAAAAAAAAAAAKBmKkwAAAAAAAAAAAEDJUJwEAAAAAAAAAAAASobiJAAAAAAAAAAAAFAyFCcBAAAAAAAAAACAkqE4CQAAAAAAAAAAAJQMxUkAAAAAAAAAAACgZChOAgAAAAAAAAAAACWjrNgBWLXan/poKisrix0DAAAAAAAAAAAAVgtmnAQAAAAAAAAAAABKhuIkAAAAAAAAAAAAUDIUJwEAAAAAAAAAAICSoTgJAAAAAAAAAAAAlAzFSQAAAAAAAAAAAKBkKE4CAAAAAAAAAAAAJaOs2AFYtXYZvUvKmvoxAwCrj6nHTy12BAAAAAAAAABKmBknAQAAAAAAAAAAgJKhOAkAAAAAAAAAAACUDMVJAAAAAAAAAAAAoGQoTgIAAAAAAAAAAAAlQ3ESAAAAAAAAAAAAKBmKkwAAAAAAAAAAAEDJUJwEAAAAAAAAAAAASobiJAAAAAAAAAAAAFAyFCcBAAAAAAAAAACAkqE4CQAAAAAAAAAAAJQMxcn/MGLEiGy11VbFjgEAAAAAAAAAAACsIt/o4uQjjzyShg0b5rvf/W6xowAAAAAAAAAAAADfAN/o4uT111+f448/Pg888ED++c9/FjtOkmTJkiXFjgAAAAAAAAAAAAB8hm9scXLhwoX57W9/m6OPPjrf/e53M27cuNptkydPTqFQyKRJk9K7d+80a9YsO+64Y1566aU6Y1xwwQVp3bp1WrRokcMPPzwfffTRcucZM2ZMunXrliZNmmSzzTbLNddcU7ttzpw5KRQK+e1vf5u+ffumSZMmGT9+fF577bXsscceWWuttVJRUZEtttgid911V+1xzz33XHbdddc0b948rVu3zsEHH5x//etftdv79euXE044IcOHD8/aa6+dNm3aZMSIEfV38wAAAAAAAAAAAKBEfWOLk7feems222yzbLrppjnooINyww03pKamps4+p59+ei655JI8/vjjKSsry2GHHVbn+BEjRuT888/P448/nrZt29YpRSbJ+PHjc+aZZ+a8887LzJkzc/755+eMM87IjTfeWGe/U089NT/5yU8yc+bMDB48OMcee2yqq6vzwAMP5Nlnn82FF16Y5s2bJ0nee++9DBgwIL169crjjz+eCRMm5I033si+++5bZ8wbb7wxFRUVeeyxx3LRRRflnHPOyb333vuZ96O6ujpVVVV1FgAAAAAAAAAAAKCuQs3/bht+Q/Tp0yf77rtvfvKTn+Tjjz9O27Zt87vf/S79+vXL5MmT079//9x3330ZOHBgkuSuu+7Kd7/73Xz44Ydp0qRJdtxxx/Tq1Su//OUva8fcfvvt89FHH+Wpp55KknTp0iXnnntuDjjggNp9Ro4cmbvuuisPP/xw5syZk86dO+fyyy/PT37yk9p9evToke9///s566yzlss9cuTIPPjgg5k4cWLtur///e9p3759XnrppXTt2jX9+vXL0qVL8+CDD9bus+2222bAgAG54IILPvV+jBgxImefffZy67e9cNuUNS1bwbsKALDqTT1+arEjAAAAAAAAQEmqqqpKy5Yts2DBglRWVhY7DhTNN3LGyZdeeinTpk2rLTSWlZVlv/32y/XXX19nvx49etS+btu2bZLkzTffTJLMnDkz2223XZ39d9hhh9rXH3zwQWbNmpXDDz88zZs3r11GjhyZWbNm1Tmud+/edd6fcMIJGTlyZPr06ZOzzjorzzzzTO22p59+Ovfff3+dMTfbbLMkqTPuf2b/JP8n2T/NaaedlgULFtQu8+bN+8x9AQAAAAAAAAAAoFR9I6civP766/Pxxx+nXbt2tetqampSXl6eq6++unZdo0aNal8XCoUkybJly1boHAsXLkySXHfddcsVLBs2bFjnfUVFRZ33RxxxRAYPHpy//OUvueeeezJq1KhccsklOf7447Nw4cLsscceufDCC5c75yflzv+d/ZP8n5e9vLw85eXlK3RtAAAAAAAAAAAAUKq+cTNOfvzxx7nppptyySWX5Kmnnqpdnn766bRr1y6/+c1vVmicbt265bHHHquz7tFHH6193bp167Rr1y6zZ89Oly5d6iydO3f+wvHbt2+fo446KnfccUdOOumkXHfddUmSrbfeOs8//3w6deq03Lj/u4AJAAAAAAAAAAAA1K9v3IyTd955Z959990cfvjhadmyZZ1t3//+93P99dfn4osv/sJxfvKTn+TQQw9N796906dPn4wfPz7PP/98Ntpoo9p9zj777Jxwwglp2bJlhgwZkurq6jz++ON59913c+KJJ37m2MOGDcuuu+6arl275t13383999+fbt26JUmOPfbYXHfddTnggAMyfPjwrL322nnllVdyyy23ZMyYMcvNZgkAAAAAAAAAAADUn2/cjJPXX399Bg0atFxpMvl3cfLxxx/PM88884Xj7LfffjnjjDMyfPjwbLPNNnnttddy9NFH19nniCOOyJgxYzJ27Nh07949ffv2zbhx475wxsmlS5fm2GOPTbdu3TJkyJB07do111xzTZKkXbt2mTp1apYuXZrv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WSgU8oc//KHYMQAAAAAAAAAAAIBviNWiOHnooYemUCgstwwZMqTY0VaZT67x0UcfrbO+uro666yzTgqFQiZPnlyccAAAAAAAAAAAALCGKit2gE8MGTIkY8eOrbOuvLx8lZ5z8eLFady48So9x+dp3759xo4dm+2337523e9///s0b94877zzTtFyAQAAAAAAAAAAwJpqtZhxMvl3SbJNmzZ1lrXWWqt2+8svv5ydd945TZo0yeabb5577713uTHmzZuXfffdN61atcraa6+dPffcM3PmzKndfuihh+Z73/tezjvvvLRr1y6bbrppkuSaa67JJptskiZNmqR169bZZ599ao+prq7OCSeckPXXXz9NmjTJTjvtlOnTp9dunzx5cgqFQiZNmpTevXunWbNm2XHHHfPSSy994TUfcsghueWWW/Lhhx/WrrvhhhtyyCGHfKl7BwAAAAAAAAAAAKyY1aY4+XmWLVuWvffeO40bN85jjz2W0aNH52c/+1mdfZYsWZLBgwenRYsWefDBBzN16tQ0b948Q4YMyeLFi2v3mzRpUl566aXce++9ufPOO/P444/nhBNOyDnnnJOXXnopEyZMyM4771y7//Dhw3P77bfnxhtvzBNPPJEuXbpk8ODBy80Iefrpp+eSSy7J448/nrKyshx22GFfeF3bbLNNOnXqlNtvvz1JMnfu3DzwwAM5+OCDv/Q9qq6uTlVVVZ0FAAAAAAAAAAAAqGu1KU7eeeedad68eZ3l/PPPT5Lcd999efHFF3PTTTelZ8+e2XnnnWu3feK3v/1tli1bljFjxqR79+7p1q1bxo4dm7lz52by5Mm1+1VUVGTMmDHZYostssUWW2Tu3LmpqKjI7rvvno4dO6ZXr1454YQTkiQffPBBrr322lx88cXZdddds/nmm+e6665L06ZNc/3119c5/3nnnZe+fftm8803z6mnnpqHH344H3300Rde92GHHZYbbrghSTJu3LjstttuWW+99b70/Rs1alRatmxZu7Rv3/5LjwEAAAAAAAAAAABrutWmONm/f/889dRTdZajjjoqSTJz5sy0b98+7dq1q91/hx12qHP8008/nVdeeSUtWrSoLV6uvfba+eijjzJr1qza/bp3757GjRvXvt9ll13SsWPHbLTRRjn44IMzfvz4LFq0KEkya9asLFmyJH369Kndv1GjRtl2220zc+bMOufv0aNH7eu2bdsmSd58880vvO6DDjoojzzySGbPnp1x48at0EyVn+a0007LggULapd58+at1DgAAAAAAAAAAACwJisrdoBPVFRUpEuXLit9/MKFC7PNNttk/Pjxy237zxkcKyoq6mxr0aJFnnjiiUyePDn33HNPzjzzzIwYMSLTp0//Uudv1KhR7etCoZDk318x/kXWWWed7L777jn88MPz0UcfZdddd83777//pc6dJOXl5SkvL//SxwEAAAAAAAAAAEApWW1mnPw83bp1y7x58zJ//vzadY8++midfbbeeuu8/PLLWX/99dOlS5c6S8uWLT93/LKysgwaNCgXXXRRnnnmmcyZMyd//etfs/HGG6dx48aZOnVq7b5LlizJ9OnTs/nmm9fb9R122GGZPHlyhg4dmoYNG9bbuAAAAAAAAAAAAEBdq82Mk9XV1Xn99dfrrCsrK8u6666bQYMGpWvXrjnkkENy8cUXp6qqKqeffnqdfQ888MBcfPHF2XPPPXPOOedkww03zGuvvZY77rgjw4cPz4Ybbvip573zzjsze/bs7LzzzllrrbVy1113ZdmyZdl0001TUVGRo48+OqecckrWXnvtdOjQIRdddFEWLVqUww8/vN6ufciQIXnrrbdSWVn5mfsMHDgwe+21V4477rh6Oy8AAAAAAAAAAACUmtWmODlhwoS0bdu2zrpNN900L774Yho0aJDf//73Ofzww7PtttumU6dOufLKKzNkyJDafZs1a5YHHnggP/vZz7L33nvn/fffzwYbbJCBAwd+biGxVatWueOOOzJixIh89NFH2WSTTfKb3/wmW2yxRZLkggsuyLJly3LwwQfn/fffT+/evTNx4sSstdZa9XbthUIh66677ufuM2vWrPzrX/+qt3MCAAAAAAAAAABAKSrU1NTUFDsE9a+qqiotW7bMX3bYMRVlq00/FgBWW30fmFLsCAAAAAAAAACr1CedogULFnzuZHSwpmtQ7AAAAAAAAAAAAAAAXxfFSQAAAAAAAAAAAKBkKE4CAAAAAAAAAAAAJUNxEgAAAAAAAAAAACgZipMAAAAAAAAAAABAyVCcBAAAAAAAAAAAAEqG4iQAAAAAAAAAAABQMhQnAQAAAAAAAAAAgJKhOAkAAAAAAAAAAACUjLJiB2DV2mnC3amsrCx2DAAAAAAAAAAAAFgt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z3+ThuVNix0DAD7VjIuHFjsCAAAAAAAAAFBizDgJAAAAAAAAAAAAlAzFSQAAAAAAAAAAAKBkKE4CAAAAAAAAAAAAJUNxEgAAAAAAAAAAACgZipMAAAAAAAAAAABAyVCcBAAAAAAAAAAAAEqG4iQAAAAAAAAAAABQMhQnAQAAAAAAAAAAgJKhOAkAAAAAAAAAAACUDMXJ1VShUMgf/vCHYscAAAAAAAAAAACANYriZD069NBD873vfa/YMQAAAAAAAAAAAIDPoDgJAAAAAAAAAAAAlAzFyVXktttuS/fu3dO0adOss846GTRoUD744IMkyfTp07PLLrtk3XXXTcuWLdO3b9888cQTnzveWWedlbZt2+aZZ575OuIDAAAAAAAAAADAGklxchWYP39+DjjggBx22GGZOXNmJk+enL333js1NTVJkvfffz+HHHJIHnrooTz66KPZZJNNsttuu+X9999fbqyampocf/zxuemmm/Lggw+mR48en3rO6urqVFVV1VkAAAAAAAAAAACAusqKHWBNNH/+/Hz88cfZe++907FjxyRJ9+7da7cPGDCgzv7//d//nVatWmXKlCnZfffda9d//PHHOeigg/Lkk0/moYceygYbbPCZ5xw1alTOPvvser4SAAAAAAAAAAAAWLOYcXIV6NmzZwYOHJju3bvnBz/4Qa677rq8++67tdvfeOONHHnkkdlkk03SsmXLVFZWZuHChZk7d26dcX7605/mscceywMPPPC5pckkOe2007JgwYLaZd68eavk2gAAAAAAAAAAAOCbTHFyFWjYsGHuvffe3H333dl8881z1VVXZdNNN82rr76aJDnkkEPy1FNP5YorrsjDDz+cp556Kuuss04WL15cZ5xddtkl//jHPzJx4sQvPGd5eXkqKyvrLAAAAAAAAAAAAEBdipOrSKFQSJ8+fXL22WfnySefTOPGjfP73/8+STJ16tSccMIJ2W233bLFFlukvLw8//rXv5Yb47/+67/y61//OkcccURuueWWr/sSAAAAAAAAAAAAYI1TVuwAa6LHHnsskyZNyne+852sv/76eeyxx/LWW2+lW7duSZJNNtkkN998c3r37p2qqqqccsopadq06aeOtddee+Xmm2/OwQcfnLKysuyzzz5f56UAAAAAAAAAAADAGkVxchWorKzMAw88kMsvvzxVVVXp2LFjLrnkkuy6665Jkuuvvz4//vGPs/XWW6d9+/Y5//zzc/LJJ3/mePvss0+WLVuWgw8+OA0aNMjee+/9dV0KAAAAAAAAAAAArFEKNTU1NcUOQf2rqqpKy5Yt0/P40WlY/umzWQJAsc24eGixIwAAAAAAAACUjE86RQsWLEhlZWWx40DRNCh2AAAAAAAAAAAAAICvi+IkAAAAAAAAAAAAUDIUJwEAAAAAAAAAAICSoTgJAAAAAAAAAAAAlAzFSQAAAAAAAAAAAKBkKE4CAAAAAAAAAAAAJUNxEgAAAAAAAAAAACgZipMAAAAAAAAAAABAyVCcBAAAAAAAAAAAAEpGWbEDsGo9MPKAVFZWFjsGAAAAAAAAAAAArBbMOAkAAAAAAAAAAACUDMVJAAAAAAAAAAAAoGQoTgIAAAAAAAAAAAAlQ3ESAAAAAAAAAAAAKBmKkwAAAAAAAAAAAEDJUJwEAAAAAAAAAAAASkZZsQOwau0yepeUNfVjBqA4ph4/tdgRAAAAAAAAAADqMOMkAAAAAAAAAAAAUDIUJwEAAAAAAAAAAICSoTgJAAAAAAAAAAAAlAzFSQAAAAAAAAAAAKBkKE4CAAAAAAAAAAAAJUNxEgAAAAAAAAAAACgZipMAAAAAAAAAAABAyVCcBAAAAAAAAAAAAEqG4iQAAAAAAAAAAABQMhQnAQAAAAAAAAAAgJKxxhUnx40bl1atWhU7BgAAAAAAAAAAALAaKmpx8tBDD02hUEihUEjjxo3TpUuXnHPOOfn444+LGeszfZK1UCikZcuW6dOnT/76178WOxYAAAAAAAAAAACwgoo+4+SQIUMyf/78vPzyyznppJMyYsSIXHzxxavsfIsXL/5Kx48dOzbz58/P1KlTs+6662b33XfP7Nmz6y1LTU3NalscBQAAAAAAAAAAgG+6ohcny8vL06ZNm3Ts2DFHH310Bg0alD/96U9Jkurq6px88snZYIMNUlFRke222y6TJ0+uc/y4cePSoUOHNGvWLHvttVfefvvtOttHjBiRrbbaKmPGjEnnzp3TpEmTJMncuXOz5557pnnz5qmsrMy+++6bN9544wvztmrVKm3atMmWW26Za6+9Nh9++GHuvffeJMmUKVOy7bbbpry8PG3bts2pp55apwTZr1+/HHfccRk2bFjWXXfdDB48OJMnT06hUMjdd9+dbbbZJuXl5XnooYdSXV2dE044Ieuvv36aNGmSnXbaKdOnT/8qtxoAAAAAAAAAAABKXtGLk/9b06ZNa2diPO644/LII4/klltuyTPPPJMf/OAHGTJkSF5++eUkyWOPPZbDDz88xx13XJ566qn0798/I0eOXG7MV155JbfffnvuuOOOPPXUU1m2bFn23HPPvPPOO5kyZUruvffezJ49O/vtt9+Xzpr8e+bIf/zjH9ltt93yrW99K08//XSuvfbaXH/99cvlufHGG9O4ceNMnTo1o0ePrl1/6qmn5oILLsjMmTPTo0ePDB8+PLfffntuvPHGPPHEE+nSpUsGDx6cd95551OzVFdXp6qqqs4CAAAAAAAAAAAA1FVW7ACfqKmpyaRJkzJx4sQcf/zxmTt3bsaOHZu5c+emXbt2SZKTTz45EyZMyNixY3P++efniiuuyJAhQzJ8+PAkSdeuXfPwww9nwoQJdcZevHhxbrrppqy33npJknvvvTfPPvtsXn311bRv3z5JctNNN2WLLbbI9OnT861vfesL8y5atCg///nP07Bhw/Tt2zfXXHNN2rdvn6uvvjqFQiGbbbZZ/vnPf+ZnP/tZzjzzzDRo8O+O6iabbJKLLrqodpz58+cnSc4555zssssuSZIPPvgg1157bcaNG5ddd901SXLdddfl3nvvzfXXX59TTjlluTyjRo3K2WefveI3HAAAAAAAAAAAAEpQ0WecvPPOO9O8efM0adIku+66a/bbb7+MGDEizz77bJYuXZquXbumefPmtcuUKVMya9asJMnMmTOz3Xbb1Rlvhx12WO4cHTt2rC1NfnJc+/bta0uTSbL55punVatWmTlz5ufmPeCAA9K8efO0aNEit99+e66//vr06NEjM2fOzA477JBCoVC7b58+fbJw4cL8/e9/r123zTbbfOq4vXv3rn09a9asLFmyJH369Kld16hRo2y77bafme+0007LggULapd58+Z97nUAAAAAAAAAAABAKSr6jJP9+/fPtddem8aNG6ddu3YpK/t3pIULF6Zhw4aZMWNGGjZsWOeY5s2bf6lzVFRU1Fveyy67LIMGDUrLli3rlDG/apavmrG8vDzl5eVfaQwAAAAAAAAAAABY0xW9OFlRUZEuXbost75Xr15ZunRp3nzzzXz729/+1GO7deuWxx57rM66Rx999AvP2a1bt8ybNy/z5s2rnXXy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G2abbbbJuHHjsu+++xY5JbA68EsA8EX222+/HHLIIbnssssycODA2qJ1VVVVJk2alBNPPDEHHHBAkVMCxaYMBawIzxXAivBcAayoI444IkOHDs0ZZ5zxqZNIjBw5Mscff3yRUwLF5tkCWBGeKwBIFCfXGPvtt1/222+/LFmyJP/617+SJOuuu24aNWpU5GTA6sQvAcAXufTSS7Ns2bLsv//++fjjj9O4ceMkyeLFi1NWVpbDDz/cTNaAMhSwQj7ruaK6ujqNGjXyXAEk8VwBrLhzzjknFRUVufjii3PSSSelUCgkSWpqatKmTZv87Gc/y/Dhw4ucEig2zxbAivBcAUCSFGpqamqKHQKAr8+FF16YK664Iq+//vpyvwQMGzbMLwFAkn//Q+KMGTPy+uuvJ0natGmTbbbZpvYfGoHSVl1dnWHDhuWGG274zJL1ZZddZgYHIMm/nysef/zxvPHGG0mS1q1bp3fv3p4rgCSeK4CV8+qrr9b5N4vOnTsXORGwuvBsAXxZnisASpfiJECJ8ksAAPBVKVkDK6Nx48Z5+umn061bt2JHAVYjnisAgPr0v/+Ay7MFAAD/m+IkALXmzZuXs846KzfccEOxowBF9OGHH2bGjBlZe+21s/nmm9fZ9tFHH+XWW2/N0KFDi5QOWF3MnDkzjz76aHbYYYdsttlmefHFF3PFFVekuro6Bx10UAYMGFDsiECRnXjiiZ+6/oorrshBBx2UddZZJ8m/v9Ib4BMffPBBbr311rzyyitp165d9t9//9rPC6C0PfHEE1lrrbVq/wD85ptvzujRozN37tx07Ngxxx13XPbff/8ipwSK7fjjj8++++6bb3/728WOAqzmrr766kybNi277bZb9t9//9x8880ZNWpUli1blr333jvnnHNOysrKih0TgFVIcRKAWk8//XS23nrrLF26tNhRgCL529/+lu985zuZO3duCoVCdtppp/zmN79Ju3btkiRvvPFG2rVr53MCStyECROy5557pnnz5lm0aFF+//vfZ+jQoenZs2eWLVuWKVOm5J577lGehBLXoEGD9OzZM61ataqzfsqUKendu3cqKipSKBTy17/+tTgBgdXC5ptvnoceeihrr7125s2bl5133jnvvvtuunbtmlmzZqWsrCyPPvqob8oA0rNnz1xyySUZNGhQxowZkxNOOCFHHnlkunXrlpdeeiljxozJFVdckcMOO6zYUYEiatCgQQqFQjbeeOMcfvjhOeSQQ9KmTZtixwJWMyNHjsxFF12U73znO5k6dWqGDRuWiy++OD/96U/ToEGDXHbZZTn66KNz9tlnFzsqAKuQ4iRACfnTn/70udtnz56dk046SSEKSthee+2VJUuWZNy4cXnvvfcybNiwvPDCC5k8eXI6dOigOAkkSXbccccMGDAgI0eOzC233JJjjjkmRx99dM4777wkyWmnnZYZM2bknnvuKXJSoJguuOCC/Pd//3fGjBlTp0jdqFGjPP3008vNbA2UpgYNGuT111/P+uuvn4MOOiivvvpq7rrrrrRs2TILFy7MXnvtlfXWWy+//vWvix0VKLJmzZpl5syZ6dixY7beeuscffTROfLII2u3//rXv855552X559/vogpgWJr0KBB7r333vz5z3/O+PHjs2DBguy666458sgjs9tuu6VBgwbFjgisBrp06ZKLLrooe++9d55++ulss802ufHGG3PggQcmSX7/+99n+PDhefnll4ucFIBVSXESoIR88peWn/fRXygUFKKghLVu3Tr33XdfunfvniSpqanJMccck7vuuiv3339/KioqFCeBtGzZMjNmzEiXLl2ybNmylJeXZ9q0aenVq1eS5LnnnsugQYPy+uuvFzkpUGzTp0/PQQcdlD322COjRo1Ko0aNFCeBOv6zOLnxxhtn9OjR2WWXXWq3P/zww9l///0zd+7cIqYEVgfrrrtuJk6cmG222SatW7fOPffck549e9ZunzVrVrp3755FixYVMSVQbP/5bLFkyZL8/ve/zw033JD77rsvrVu3zqGHHpof/ehH6dKlS7GjAkXUrFmzvPjii+nQoUOSpHHjxnnyySezxRZbJElee+21bL755vnggw+KGROAVcyf1ACUkLZt2+aOO+7IsmXLPnV54oknih0RKLIPP/wwZWVlte8LhUKuvfba7LHHHunbt2/+9re/FTEdsDopFApJ/v0fJJo0aZKWLVvWbmvRokUWLFhQrGjAauRb3/pWZsyYkbfeeiu9e/fOc889V/v5AfCJTz4XPvroo7Rt27bOtg022CBvvfVWMWIBq5ldd9011157bZKkb9++ue222+psv/XWWxWhgDoaNWqUfffdNxMmTMjs2bNz5JFHZvz48dl0002LHQ0osjZt2uSFF15Ikrz88stZunRp7fskef7557P++usXKx4AX5OyL94FgDXFNttskxkzZmTPPff81O1fNBslsObbbLPN8vjjj6dbt2511l999dVJkv/6r/8qRixgNdOpU6e8/PLL2XjjjZMkjzzySO1fZyfJ3Llzlys9AKWrefPmufHGG3PLLbdk0KBBZq4GljNw4MCUlZWlqqoqL730Urbccsvaba+99lrWWWedIqYDVhcXXnhh+vTpk759+6Z379655JJLMnny5HTr1i0vvfRSHn300fz+978vdkxgNdWhQ4eMGDEiZ511Vu67775ixwGK7MADD8zQoUOz5557ZtKkSRk+fHhOPvnkvP322ykUCjnvvPOyzz77FDsmAKuY4iRACTnllFM+d0r5Ll265P777/8aEwGrm7322iu/+c1vcvDBBy+37eqrr86yZcsyevToIiQDVidHH310neLTf5YbkuTuu+/OgAEDvu5YwGpu//33z0477ZQZM2akY8eOxY4DrCbOOuusOu+bN29e5/2f//znfPvb3/46IwGrqXbt2uXJJ5/MBRdckD//+c+pqanJtGnTMm/evPTp0ydTp05N7969ix0TKLKOHTumYcOGn7m9UChkl112+RoTAaujs88+O02bNs0jjzySI488Mqeeemp69uyZ4cOHZ9GiRdljjz1y7rnnFjsmAKtYocbUYgAAAAAAAAAAAECJaFDsAAAAAAAAAAAAAABfF8VJAAAAAAAAAAAAoGQoTgIAAAAAAAAAAAAlQ3ESAAAAAJLMmTMnhUIhTz31VLGjLOfLZJs8eXIKhULee++9VZ4LAAAAAOCbSHESAAAAAFaB1bmIWcrGjRuXVq1aFTsGAAAAAFBEipMAAAAAQNEtXry42BEAAAAAgBKhOAkAAADAGuW2225L9+7d07Rp06yzzjoZNGhQPvjggyTJmDFj0q1btzRp0iSbbbZZrrnmms8d67nnnsuuu+6a5s2bp3Xr1jn44IPzr3/9q3b7smXLctFFF6VLly4pLy9Phw4dct555yVJOnfunCTp1atXCoVC+vXrV3vcF+WYNm1aevXqlSZNmqR379558sknv/R9mDp1anr06JEmTZpk++23z3PPPZck+eCDD1JZWZnbbrutzv5/+MMfUlFRkffff/9zx/1kJs1bbrklO+64Y5o0aZItt9wyU6ZMqbPfF927fv365bjjjsuw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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltablexGxGc = epltable.drop(columns=[\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltablexGxGc= epltablexGxGc.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltablexGxGc= epltablexGxGc.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leeds United','Leeds')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leicester City','Leicester')\n",
        "epltablexGxGc= epltablexGxGc.replace('Manchester Utd','Manchester United')\n",
        "epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltablexGxGc= epltablexGxGc.replace('Nottham Forest','Nottingham Forest')\n",
        "epltablexGxGc['xCSP'] = (4 - (epltablexGxGc.xGA * 4/23))\n",
        "epltablexGxGc.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "epltablexGxGc['xG/90'] = (epltablexGxGc.xG / epltablexGxGc.MP)\n",
        "epltablexGxGc['xGA/90'] = (epltablexGxGc.xGA / epltablexGxGc.MP)\n",
        "epltablexGxGc"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "D8nuKObbLt5s",
        "outputId": "1b74660b-4d90-49a3-c84d-fb886b406641"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-60-f34def3770e4>:14: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Rk                     team  MP   W  D   L  GF  GA  GD  Pts  Pts/MP    xG  \\\n",
              "0    1                Liverpool  16  11  4   1  36  15  21   37    2.31  32.1   \n",
              "1    2                  Arsenal  16  11  3   2  33  15  18   36    2.25  29.0   \n",
              "2    3              Aston Villa  16  11  2   3  35  20  15   35    2.19  28.8   \n",
              "3    4          Manchester City  16  10  3   3  38  18  20   33    2.06  30.6   \n",
              "4    5                Tottenham  16   9  3   4  33  23  10   30    1.88  27.5   \n",
              "5    6        Manchester United  16   9  0   7  18  21  -3   27    1.69  25.5   \n",
              "6    7         Newcastle United  16   8  2   6  33  21  12   26    1.63  31.3   \n",
              "7    8                 Brighton  16   7  5   4  33  28   5   26    1.63  27.5   \n",
              "8    9                 West Ham  16   7  3   6  26  30  -4   24    1.50  23.2   \n",
              "9   10                   Fulham  16   6  3   7  26  26   0   21    1.31  21.3   \n",
              "10  11                Brentford  16   5  4   7  23  22   1   19    1.19  28.5   \n",
              "11  12                  Chelsea  16   5  4   7  26  26   0   19    1.19  30.3   \n",
              "12  13  Wolverhampton Wanderers  16   5  4   7  21  26  -5   19    1.19  20.4   \n",
              "13  14              Bournemouth  16   5  4   7  21  30  -9   19    1.19  22.0   \n",
              "14  15           Crystal Palace  16   4  4   8  15  23  -8   16    1.00  19.4   \n",
              "15  16        Nottingham Forest  16   3  5   8  17  28 -11   14    0.88  17.4   \n",
              "16  17                  Everton  16   7  2   7  20  20   0   13    0.81  25.5   \n",
              "17  18               Luton Town  16   2  3  11  17  32 -15    9    0.56  14.9   \n",
              "18  19                  Burnley  16   2  2  12  16  34 -18    8    0.50  14.4   \n",
              "19  20            Sheffield Utd  16   2  2  12  12  41 -29    8    0.50  12.6   \n",
              "\n",
              "     xGA   xGD  xGD/90      xCSP    xG/90   xGA/90  \n",
              "0   19.7  12.4    0.77  0.573913  2.00625  1.23125  \n",
              "1   12.1  16.9    1.06  1.895652  1.81250  0.75625  \n",
              "2   22.2   6.6    0.41  0.139130  1.80000  1.38750  \n",
              "3   14.7  15.8    0.99  1.443478  1.91250  0.91875  \n",
              "4   26.8   0.7    0.05 -0.660870  1.71875  1.67500  \n",
              "5   26.6  -1.1   -0.07 -0.626087  1.59375  1.66250  \n",
              "6   21.3  10.0    0.62  0.295652  1.95625  1.33125  \n",
              "7   23.0   4.6    0.29  0.000000  1.71875  1.43750  \n",
              "8   28.5  -5.3   -0.33 -0.956522  1.45000  1.78125  \n",
              "9   27.0  -5.8   -0.36 -0.695652  1.33125  1.68750  \n",
              "10  20.5   8.0    0.50  0.434783  1.78125  1.28125  \n",
              "11  23.8   6.4    0.40 -0.139130  1.89375  1.48750  \n",
              "12  27.3  -6.9   -0.43 -0.747826  1.27500  1.70625  \n",
              "13  27.8  -5.8   -0.36 -0.834783  1.37500  1.73750  \n",
              "14  21.8  -2.5   -0.15  0.208696  1.21250  1.36250  \n",
              "15  24.5  -7.2   -0.45 -0.260870  1.08750  1.53125  \n",
              "16  21.2   4.3    0.27  0.313043  1.59375  1.32500  \n",
              "17  33.2 -18.3   -1.15 -1.773913  0.93125  2.07500  \n",
              "18  26.7 -12.3   -0.77 -0.643478  0.90000  1.66875  \n",
              "19  33.2 -20.6   -1.29 -1.773913  0.78750  2.07500  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c3a05025-2227-4717-a655-65b44b3a3fa8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rk</th>\n",
              "      <th>team</th>\n",
              "      <th>MP</th>\n",
              "      <th>W</th>\n",
              "      <th>D</th>\n",
              "      <th>L</th>\n",
              "      <th>GF</th>\n",
              "      <th>GA</th>\n",
              "      <th>GD</th>\n",
              "      <th>Pts</th>\n",
              "      <th>Pts/MP</th>\n",
              "      <th>xG</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xGD</th>\n",
              "      <th>xGD/90</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>xG/90</th>\n",
              "      <th>xGA/90</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>16</td>\n",
              "      <td>11</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>36</td>\n",
              "      <td>15</td>\n",
              "      <td>21</td>\n",
              "      <td>37</td>\n",
              "      <td>2.31</td>\n",
              "      <td>32.1</td>\n",
              "      <td>19.7</td>\n",
              "      <td>12.4</td>\n",
              "      <td>0.77</td>\n",
              "      <td>0.573913</td>\n",
              "      <td>2.00625</td>\n",
              "      <td>1.23125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>16</td>\n",
              "      <td>11</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>33</td>\n",
              "      <td>15</td>\n",
              "      <td>18</td>\n",
              "      <td>36</td>\n",
              "      <td>2.25</td>\n",
              "      <td>29.0</td>\n",
              "      <td>12.1</td>\n",
              "      <td>16.9</td>\n",
              "      <td>1.06</td>\n",
              "      <td>1.895652</td>\n",
              "      <td>1.81250</td>\n",
              "      <td>0.75625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>16</td>\n",
              "      <td>11</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>35</td>\n",
              "      <td>20</td>\n",
              "      <td>15</td>\n",
              "      <td>35</td>\n",
              "      <td>2.19</td>\n",
              "      <td>28.8</td>\n",
              "      <td>22.2</td>\n",
              "      <td>6.6</td>\n",
              "      <td>0.41</td>\n",
              "      <td>0.139130</td>\n",
              "      <td>1.80000</td>\n",
              "      <td>1.38750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>16</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>38</td>\n",
              "      <td>18</td>\n",
              "      <td>20</td>\n",
              "      <td>33</td>\n",
              "      <td>2.06</td>\n",
              "      <td>30.6</td>\n",
              "      <td>14.7</td>\n",
              "      <td>15.8</td>\n",
              "      <td>0.99</td>\n",
              "      <td>1.443478</td>\n",
              "      <td>1.91250</td>\n",
              "      <td>0.91875</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>16</td>\n",
              "      <td>9</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>33</td>\n",
              "      <td>23</td>\n",
              "      <td>10</td>\n",
              "      <td>30</td>\n",
              "      <td>1.88</td>\n",
              "      <td>27.5</td>\n",
              "      <td>26.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.05</td>\n",
              "      <td>-0.660870</td>\n",
              "      <td>1.71875</td>\n",
              "      <td>1.67500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>16</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>18</td>\n",
              "      <td>21</td>\n",
              "      <td>-3</td>\n",
              "      <td>27</td>\n",
              "      <td>1.69</td>\n",
              "      <td>25.5</td>\n",
              "      <td>26.6</td>\n",
              "      <td>-1.1</td>\n",
              "      <td>-0.07</td>\n",
              "      <td>-0.626087</td>\n",
              "      <td>1.59375</td>\n",
              "      <td>1.66250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>16</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>33</td>\n",
              "      <td>21</td>\n",
              "      <td>12</td>\n",
              "      <td>26</td>\n",
              "      <td>1.63</td>\n",
              "      <td>31.3</td>\n",
              "      <td>21.3</td>\n",
              "      <td>10.0</td>\n",
              "      <td>0.62</td>\n",
              "      <td>0.295652</td>\n",
              "      <td>1.95625</td>\n",
              "      <td>1.33125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>16</td>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>33</td>\n",
              "      <td>28</td>\n",
              "      <td>5</td>\n",
              "      <td>26</td>\n",
              "      <td>1.63</td>\n",
              "      <td>27.5</td>\n",
              "      <td>23.0</td>\n",
              "      <td>4.6</td>\n",
              "      <td>0.29</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.71875</td>\n",
              "      <td>1.43750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>16</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>26</td>\n",
              "      <td>30</td>\n",
              "      <td>-4</td>\n",
              "      <td>24</td>\n",
              "      <td>1.50</td>\n",
              "      <td>23.2</td>\n",
              "      <td>28.5</td>\n",
              "      <td>-5.3</td>\n",
              "      <td>-0.33</td>\n",
              "      <td>-0.956522</td>\n",
              "      <td>1.45000</td>\n",
              "      <td>1.78125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>16</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>26</td>\n",
              "      <td>26</td>\n",
              "      <td>0</td>\n",
              "      <td>21</td>\n",
              "      <td>1.31</td>\n",
              "      <td>21.3</td>\n",
              "      <td>27.0</td>\n",
              "      <td>-5.8</td>\n",
              "      <td>-0.36</td>\n",
              "      <td>-0.695652</td>\n",
              "      <td>1.33125</td>\n",
              "      <td>1.68750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>16</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>23</td>\n",
              "      <td>22</td>\n",
              "      <td>1</td>\n",
              "      <td>19</td>\n",
              "      <td>1.19</td>\n",
              "      <td>28.5</td>\n",
              "      <td>20.5</td>\n",
              "      <td>8.0</td>\n",
              "      <td>0.50</td>\n",
              "      <td>0.434783</td>\n",
              "      <td>1.78125</td>\n",
              "      <td>1.28125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>16</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>26</td>\n",
              "      <td>26</td>\n",
              "      <td>0</td>\n",
              "      <td>19</td>\n",
              "      <td>1.19</td>\n",
              "      <td>30.3</td>\n",
              "      <td>23.8</td>\n",
              "      <td>6.4</td>\n",
              "      <td>0.40</td>\n",
              "      <td>-0.139130</td>\n",
              "      <td>1.89375</td>\n",
              "      <td>1.48750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>16</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>21</td>\n",
              "      <td>26</td>\n",
              "      <td>-5</td>\n",
              "      <td>19</td>\n",
              "      <td>1.19</td>\n",
              "      <td>20.4</td>\n",
              "      <td>27.3</td>\n",
              "      <td>-6.9</td>\n",
              "      <td>-0.43</td>\n",
              "      <td>-0.747826</td>\n",
              "      <td>1.27500</td>\n",
              "      <td>1.70625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>16</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>21</td>\n",
              "      <td>30</td>\n",
              "      <td>-9</td>\n",
              "      <td>19</td>\n",
              "      <td>1.19</td>\n",
              "      <td>22.0</td>\n",
              "      <td>27.8</td>\n",
              "      <td>-5.8</td>\n",
              "      <td>-0.36</td>\n",
              "      <td>-0.834783</td>\n",
              "      <td>1.37500</td>\n",
              "      <td>1.73750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>15</td>\n",
              "      <td>23</td>\n",
              "      <td>-8</td>\n",
              "      <td>16</td>\n",
              "      <td>1.00</td>\n",
              "      <td>19.4</td>\n",
              "      <td>21.8</td>\n",
              "      <td>-2.5</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>0.208696</td>\n",
              "      <td>1.21250</td>\n",
              "      <td>1.36250</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>16</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>16</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>17</td>\n",
              "      <td>28</td>\n",
              "      <td>-11</td>\n",
              "      <td>14</td>\n",
              "      <td>0.88</td>\n",
              "      <td>17.4</td>\n",
              "      <td>24.5</td>\n",
              "      <td>-7.2</td>\n",
              "      <td>-0.45</td>\n",
              "      <td>-0.260870</td>\n",
              "      <td>1.08750</td>\n",
              "      <td>1.53125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>Everton</td>\n",
              "      <td>16</td>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>20</td>\n",
              "      <td>20</td>\n",
              "      <td>0</td>\n",
              "      <td>13</td>\n",
              "      <td>0.81</td>\n",
              "      <td>25.5</td>\n",
              "      <td>21.2</td>\n",
              "      <td>4.3</td>\n",
              "      <td>0.27</td>\n",
              "      <td>0.313043</td>\n",
              "      <td>1.59375</td>\n",
              "      <td>1.32500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>16</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>11</td>\n",
              "      <td>17</td>\n",
              "      <td>32</td>\n",
              "      <td>-15</td>\n",
              "      <td>9</td>\n",
              "      <td>0.56</td>\n",
              "      <td>14.9</td>\n",
              "      <td>33.2</td>\n",
              "      <td>-18.3</td>\n",
              "      <td>-1.15</td>\n",
              "      <td>-1.773913</td>\n",
              "      <td>0.93125</td>\n",
              "      <td>2.07500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>16</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>12</td>\n",
              "      <td>16</td>\n",
              "      <td>34</td>\n",
              "      <td>-18</td>\n",
              "      <td>8</td>\n",
              "      <td>0.50</td>\n",
              "      <td>14.4</td>\n",
              "      <td>26.7</td>\n",
              "      <td>-12.3</td>\n",
              "      <td>-0.77</td>\n",
              "      <td>-0.643478</td>\n",
              "      <td>0.90000</td>\n",
              "      <td>1.66875</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>Sheffield Utd</td>\n",
              "      <td>16</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "      <td>41</td>\n",
              "      <td>-29</td>\n",
              "      <td>8</td>\n",
              "      <td>0.50</td>\n",
              "      <td>12.6</td>\n",
              "      <td>33.2</td>\n",
              "      <td>-20.6</td>\n",
              "      <td>-1.29</td>\n",
              "      <td>-1.773913</td>\n",
              "      <td>0.78750</td>\n",
              "      <td>2.07500</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c3a05025-2227-4717-a655-65b44b3a3fa8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c3a05025-2227-4717-a655-65b44b3a3fa8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c3a05025-2227-4717-a655-65b44b3a3fa8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-817a8d1c-b51e-4377-a211-ca24df3a2b58\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-817a8d1c-b51e-4377-a211-ca24df3a2b58')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-817a8d1c-b51e-4377-a211-ca24df3a2b58 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=epltablexGxGc['xG/90'],y=epltablexGxGc['xGA/90'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('xG/90')\n",
        "ax.set_ylabel('xGA/90')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in epltablexGxGc.iterrows():\n",
        "    ax.annotate(row['team'], (row['xG/90'], row['xGA/90']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "id": "TYn5yVsCNlLv",
        "outputId": "49505169-cd77-429e-8cf4-54215880580e"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 635
        },
        "id": "wrjHrDmJ8OlM",
        "outputId": "3534169b-8825-458e-a23e-5edfa3a8417d"
      },
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id            player_name games_x time_x goals_1wks_x  \\\n",
              "0     8260         Erling Haaland      15   1305           14   \n",
              "1     1250          Mohamed Salah      16   1408           11   \n",
              "2      453          Son Heung-Min      16   1379           10   \n",
              "3     1776           Jarrod Bowen      15   1350            9   \n",
              "4     1679        Dominic Solanke      16   1438            8   \n",
              "..     ...                    ...     ...    ...          ...   \n",
              "488  12199            Alex Murphy       1      1            0   \n",
              "489  12200          Amadou Diallo       1      1            0   \n",
              "490  12204  Benicio Baker-Boaitey       2      2            0   \n",
              "491  12215        Michael Ndiweni       1      1            0   \n",
              "492  12251             Sydie Peck       1      6            0   \n",
              "\n",
              "              xG_1wks_x assists_1wks_x           xA_1wks_x shots_1wks_x  \\\n",
              "0    16.727499932050705              4  3.2472310978919268           58   \n",
              "1    10.425881922245026              7   7.183804210275412           47   \n",
              "2     6.462784752249718              4  5.8401824198663235           39   \n",
              "3     6.948418594896793              1  2.2795576956123114           40   \n",
              "4     9.721119590103626              1  0.9574757218360901           48   \n",
              "..                  ...            ...                 ...          ...   \n",
              "488                   0              0                   0            0   \n",
              "489                   0              0                   0            0   \n",
              "490                   0              0                   0            0   \n",
              "491                   0              0                   0            0   \n",
              "492                   0              0                   0            0   \n",
              "\n",
              "    key_passes_1wks_x  ... shots_1wks_y key_passes_1wks_y yellow_cards  \\\n",
              "0                  16  ...           58                16            1   \n",
              "1                  36  ...           47                36            1   \n",
              "2                  31  ...           39                31            0   \n",
              "3                  11  ...           40                11            1   \n",
              "4                  13  ...           48                13            1   \n",
              "..                ...  ...          ...               ...          ...   \n",
              "488                 0  ...            0                 0            0   \n",
              "489                 0  ...            0                 0            0   \n",
              "490                 0  ...            0                 0            0   \n",
              "491                 0  ...            0                 0            0   \n",
              "492                 0  ...            0                 0            0   \n",
              "\n",
              "    red_cards position_y      team_title_y npg_1wks_y         npxG_1wks_y  \\\n",
              "0           0          F   Manchester City         11   13.68282476067543   \n",
              "1           0          F         Liverpool          8   7.381280824542046   \n",
              "2           0        F M         Tottenham          9  5.7016159147024155   \n",
              "3           0        F M          West Ham          9   6.948418594896793   \n",
              "4           0          F       Bournemouth          8   9.721119590103626   \n",
              "..        ...        ...               ...        ...                 ...   \n",
              "488         0          S  Newcastle United          0                   0   \n",
              "489         0          S  Newcastle United          0                   0   \n",
              "490         0          S          Brighton          0                   0   \n",
              "491         0          S  Newcastle United          0                   0   \n",
              "492         0          S  Sheffield United          0                   0   \n",
              "\n",
              "                xGChain           xGBuildup  \n",
              "0    16.214465029537678  1.3705047406256199  \n",
              "1    14.105848833918571  3.6903739869594574  \n",
              "2     13.83394755423069   4.277155740186572  \n",
              "3     7.912498477846384  1.4770999029278755  \n",
              "4    10.837209552526474  1.8425600491464138  \n",
              "..                  ...                 ...  \n",
              "488                   0                   0  \n",
              "489                   0                   0  \n",
              "490  0.1531512588262558  0.1531512588262558  \n",
              "491                   0                   0  \n",
              "492                   0                   0  \n",
              "\n",
              "[493 rows x 48 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e2b9df03-a188-4ef9-9636-d747dcee615b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727499932050705</td>\n",
              "      <td>4</td>\n",
              "      <td>3.2472310978919268</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>16</td>\n",
              "      <td>1408</td>\n",
              "      <td>11</td>\n",
              "      <td>10.425881922245026</td>\n",
              "      <td>7</td>\n",
              "      <td>7.183804210275412</td>\n",
              "      <td>47</td>\n",
              "      <td>36</td>\n",
              "      <td>...</td>\n",
              "      <td>47</td>\n",
              "      <td>36</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>8</td>\n",
              "      <td>7.381280824542046</td>\n",
              "      <td>14.105848833918571</td>\n",
              "      <td>3.6903739869594574</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>16</td>\n",
              "      <td>1379</td>\n",
              "      <td>10</td>\n",
              "      <td>6.462784752249718</td>\n",
              "      <td>4</td>\n",
              "      <td>5.8401824198663235</td>\n",
              "      <td>39</td>\n",
              "      <td>31</td>\n",
              "      <td>...</td>\n",
              "      <td>39</td>\n",
              "      <td>31</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>9</td>\n",
              "      <td>5.7016159147024155</td>\n",
              "      <td>13.83394755423069</td>\n",
              "      <td>4.277155740186572</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>15</td>\n",
              "      <td>1350</td>\n",
              "      <td>9</td>\n",
              "      <td>6.948418594896793</td>\n",
              "      <td>1</td>\n",
              "      <td>2.2795576956123114</td>\n",
              "      <td>40</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>40</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>9</td>\n",
              "      <td>6.948418594896793</td>\n",
              "      <td>7.912498477846384</td>\n",
              "      <td>1.4770999029278755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>16</td>\n",
              "      <td>1438</td>\n",
              "      <td>8</td>\n",
              "      <td>9.721119590103626</td>\n",
              "      <td>1</td>\n",
              "      <td>0.9574757218360901</td>\n",
              "      <td>48</td>\n",
              "      <td>13</td>\n",
              "      <td>...</td>\n",
              "      <td>48</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>8</td>\n",
              "      <td>9.721119590103626</td>\n",
              "      <td>10.837209552526474</td>\n",
              "      <td>1.8425600491464138</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>488</th>\n",
              "      <td>12199</td>\n",
              "      <td>Alex Murphy</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>489</th>\n",
              "      <td>12200</td>\n",
              "      <td>Amadou Diallo</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>490</th>\n",
              "      <td>12204</td>\n",
              "      <td>Benicio Baker-Boaitey</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.1531512588262558</td>\n",
              "      <td>0.1531512588262558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>491</th>\n",
              "      <td>12215</td>\n",
              "      <td>Michael Ndiweni</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492</th>\n",
              "      <td>12251</td>\n",
              "      <td>Sydie Peck</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>S</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>493 rows × 48 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e2b9df03-a188-4ef9-9636-d747dcee615b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e2b9df03-a188-4ef9-9636-d747dcee615b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e2b9df03-a188-4ef9-9636-d747dcee615b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-34659a4c-272e-4a9e-af69-38ff986e9427\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-34659a4c-272e-4a9e-af69-38ff986e9427')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-34659a4c-272e-4a9e-af69-38ff986e9427 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 62
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['goals'] = EPL_player_df['goals_1wks_x'].astype(int)\n",
        "top25goals = EPL_player_df.nlargest(20, 'goals')\n",
        "top25goals"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "3H-vTRXF8VDs",
        "outputId": "4dc1edc3-0579-47a3-a9d1-1c32d389753b"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id         player_name games_x time_x goals_1wks_x           xG_1wks_x  \\\n",
              "0    8260      Erling Haaland      15   1305           14  16.727499932050705   \n",
              "1    1250       Mohamed Salah      16   1408           11  10.425881922245026   \n",
              "2     453       Son Heung-Min      16   1379           10   6.462784752249718   \n",
              "3    1776        Jarrod Bowen      15   1350            9   6.948418594896793   \n",
              "4    1679     Dominic Solanke      16   1438            8   9.721119590103626   \n",
              "5    8845      Hee-Chan Hwang      16   1145            8   5.167933830991387   \n",
              "6    8865       Ollie Watkins      16   1419            8   9.932601034641266   \n",
              "7     468       Callum Wilson      11    498            7   7.439524449408054   \n",
              "8    5232      Alexander Isak      12    838            7   7.864541232585907   \n",
              "9    6552        Bryan Mbeumo      15   1289            7   7.574615128338337   \n",
              "10   1726  Abdoulaye Doucouré      16   1410            6   7.047202989459038   \n",
              "11   3697     Odsonne Edouard      15   1270            6   6.131767854094505   \n",
              "12   8150      Anthony Gordon      15   1255            6   4.724739629775286   \n",
              "13  10048     Nicolas Jackson      15   1107            6    9.31232613697648   \n",
              "14  10177       Evan Ferguson      15    875            6  2.8043092247098684   \n",
              "15    618     Raheem Sterling      16   1275            5   4.472376704216003   \n",
              "16   5221         Leon Bailey      14    596            5     2.9558798186481   \n",
              "17   5560     Scott McTominay      13    881            5   3.840136418119073   \n",
              "18   6122        Douglas Luiz      16   1408            5   4.341398486867547   \n",
              "19   6482       Eddie Nketiah      15    832            5  4.2830213233828545   \n",
              "\n",
              "   assists_1wks_x            xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0               4   3.2472310978919268           58                16  ...   \n",
              "1               7    7.183804210275412           47                36  ...   \n",
              "2               4   5.8401824198663235           39                31  ...   \n",
              "3               1   2.2795576956123114           40                11  ...   \n",
              "4               1   0.9574757218360901           48                13  ...   \n",
              "5               2   2.0973425544798374           26                12  ...   \n",
              "6               6   3.4174556974321604           48                24  ...   \n",
              "7               1   0.3291513491421938           22                 3  ...   \n",
              "8               0   1.0154497548937798           25                 6  ...   \n",
              "9               3   2.8948017433285713           41                22  ...   \n",
              "10              0    2.036896336823702           28                22  ...   \n",
              "11              0    0.864791008643806           39                13  ...   \n",
              "12              3   3.1860481295734644           31                15  ...   \n",
              "13              1   1.3103883396834135           38                10  ...   \n",
              "14              0   0.6063905879855156           23                 5  ...   \n",
              "15              1   2.4758105259388685           27                18  ...   \n",
              "16              4   3.3729121387004852           21                14  ...   \n",
              "17              0  0.03688819333910942           25                 1  ...   \n",
              "18              2   2.0042906496673822           30                22  ...   \n",
              "19              0  0.34161655977368355           28                 6  ...   \n",
              "\n",
              "   key_passes_1wks_y yellow_cards red_cards position_y  \\\n",
              "0                 16            1         0          F   \n",
              "1                 36            1         0          F   \n",
              "2                 31            0         0        F M   \n",
              "3                 11            1         0        F M   \n",
              "4                 13            1         0          F   \n",
              "5                 12            4         0      F M S   \n",
              "6                 24            3         0          F   \n",
              "7                  3            1         0        F S   \n",
              "8                  6            0         0        F S   \n",
              "9                 22            1         0          F   \n",
              "10                22            4         0          M   \n",
              "11                13            3         0          F   \n",
              "12                15            6         0        F S   \n",
              "13                10            7         0        F S   \n",
              "14                 5            1         0        F S   \n",
              "15                18            4         0      F M S   \n",
              "16                14            1         0        M S   \n",
              "17                 1            0         0        M S   \n",
              "18                22            5         0          M   \n",
              "19                 6            2         0        F S   \n",
              "\n",
              "               team_title_y npg_1wks_y         npxG_1wks_y  \\\n",
              "0           Manchester City         11   13.68282476067543   \n",
              "1                 Liverpool          8   7.381280824542046   \n",
              "2                 Tottenham          9  5.7016159147024155   \n",
              "3                  West Ham          9   6.948418594896793   \n",
              "4               Bournemouth          8   9.721119590103626   \n",
              "5   Wolverhampton Wanderers          7   4.406764963641763   \n",
              "6               Aston Villa          8   9.932601034641266   \n",
              "7          Newcastle United          5   5.917186878621578   \n",
              "8          Newcastle United          6   7.103372395038605   \n",
              "9                 Brentford          4   5.291108556091785   \n",
              "10                  Everton          6   7.047202989459038   \n",
              "11           Crystal Palace          6   6.131767854094505   \n",
              "12         Newcastle United          6   4.724739629775286   \n",
              "13                  Chelsea          6    9.31232613697648   \n",
              "14                 Brighton          6  2.8043092247098684   \n",
              "15                  Chelsea          5   4.472376704216003   \n",
              "16              Aston Villa          5     2.9558798186481   \n",
              "17        Manchester United          5   3.840136418119073   \n",
              "18              Aston Villa          2  2.0578919518738985   \n",
              "19                  Arsenal          5  4.2830213233828545   \n",
              "\n",
              "               xGChain           xGBuildup goals  \n",
              "0   16.214465029537678  1.3705047406256199    14  \n",
              "1   14.105848833918571  3.6903739869594574    11  \n",
              "2    13.83394755423069   4.277155740186572    10  \n",
              "3    7.912498477846384  1.4770999029278755     9  \n",
              "4   10.837209552526474  1.8425600491464138     8  \n",
              "5   6.8267247984185815  1.8678752081468701     8  \n",
              "6   14.037970393896103  1.9158685617148876     8  \n",
              "7    6.845077158883214  0.8389131352305412     7  \n",
              "8    8.848422676324844    2.38386919349432     7  \n",
              "9    9.410030841827393  3.1749180927872658     7  \n",
              "10   9.332841705530882   3.605826772749424     6  \n",
              "11    6.33973165974021   1.469034243375063     6  \n",
              "12  10.928396344184875  4.4085561744868755     6  \n",
              "13  10.213443983346224   1.306454386562109     6  \n",
              "14   5.259531259536743  1.9688059650361538     6  \n",
              "15  10.706219838932157    4.83285385556519     5  \n",
              "16  7.1493696346879005   2.416896268725395     5  \n",
              "17   3.959744928404689  0.7728553749620914     5  \n",
              "18   9.534928295761347   7.547718802466989     5  \n",
              "19  4.2082823775708675  0.5830877497792244     5  \n",
              "\n",
              "[20 rows x 49 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2ff34417-cef2-45cf-9ed0-d118e5227269\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727499932050705</td>\n",
              "      <td>4</td>\n",
              "      <td>3.2472310978919268</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>16</td>\n",
              "      <td>1408</td>\n",
              "      <td>11</td>\n",
              "      <td>10.425881922245026</td>\n",
              "      <td>7</td>\n",
              "      <td>7.183804210275412</td>\n",
              "      <td>47</td>\n",
              "      <td>36</td>\n",
              "      <td>...</td>\n",
              "      <td>36</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>8</td>\n",
              "      <td>7.381280824542046</td>\n",
              "      <td>14.105848833918571</td>\n",
              "      <td>3.6903739869594574</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>16</td>\n",
              "      <td>1379</td>\n",
              "      <td>10</td>\n",
              "      <td>6.462784752249718</td>\n",
              "      <td>4</td>\n",
              "      <td>5.8401824198663235</td>\n",
              "      <td>39</td>\n",
              "      <td>31</td>\n",
              "      <td>...</td>\n",
              "      <td>31</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>9</td>\n",
              "      <td>5.7016159147024155</td>\n",
              "      <td>13.83394755423069</td>\n",
              "      <td>4.277155740186572</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>15</td>\n",
              "      <td>1350</td>\n",
              "      <td>9</td>\n",
              "      <td>6.948418594896793</td>\n",
              "      <td>1</td>\n",
              "      <td>2.2795576956123114</td>\n",
              "      <td>40</td>\n",
              "      <td>11</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>9</td>\n",
              "      <td>6.948418594896793</td>\n",
              "      <td>7.912498477846384</td>\n",
              "      <td>1.4770999029278755</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>16</td>\n",
              "      <td>1438</td>\n",
              "      <td>8</td>\n",
              "      <td>9.721119590103626</td>\n",
              "      <td>1</td>\n",
              "      <td>0.9574757218360901</td>\n",
              "      <td>48</td>\n",
              "      <td>13</td>\n",
              "      <td>...</td>\n",
              "      <td>13</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>8</td>\n",
              "      <td>9.721119590103626</td>\n",
              "      <td>10.837209552526474</td>\n",
              "      <td>1.8425600491464138</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>8845</td>\n",
              "      <td>Hee-Chan Hwang</td>\n",
              "      <td>16</td>\n",
              "      <td>1145</td>\n",
              "      <td>8</td>\n",
              "      <td>5.167933830991387</td>\n",
              "      <td>2</td>\n",
              "      <td>2.0973425544798374</td>\n",
              "      <td>26</td>\n",
              "      <td>12</td>\n",
              "      <td>...</td>\n",
              "      <td>12</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>7</td>\n",
              "      <td>4.406764963641763</td>\n",
              "      <td>6.8267247984185815</td>\n",
              "      <td>1.8678752081468701</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>16</td>\n",
              "      <td>1419</td>\n",
              "      <td>8</td>\n",
              "      <td>9.932601034641266</td>\n",
              "      <td>6</td>\n",
              "      <td>3.4174556974321604</td>\n",
              "      <td>48</td>\n",
              "      <td>24</td>\n",
              "      <td>...</td>\n",
              "      <td>24</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>8</td>\n",
              "      <td>9.932601034641266</td>\n",
              "      <td>14.037970393896103</td>\n",
              "      <td>1.9158685617148876</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>11</td>\n",
              "      <td>498</td>\n",
              "      <td>7</td>\n",
              "      <td>7.439524449408054</td>\n",
              "      <td>1</td>\n",
              "      <td>0.3291513491421938</td>\n",
              "      <td>22</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>5</td>\n",
              "      <td>5.917186878621578</td>\n",
              "      <td>6.845077158883214</td>\n",
              "      <td>0.8389131352305412</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>12</td>\n",
              "      <td>838</td>\n",
              "      <td>7</td>\n",
              "      <td>7.864541232585907</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0154497548937798</td>\n",
              "      <td>25</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>6</td>\n",
              "      <td>7.103372395038605</td>\n",
              "      <td>8.848422676324844</td>\n",
              "      <td>2.38386919349432</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>15</td>\n",
              "      <td>1289</td>\n",
              "      <td>7</td>\n",
              "      <td>7.574615128338337</td>\n",
              "      <td>3</td>\n",
              "      <td>2.8948017433285713</td>\n",
              "      <td>41</td>\n",
              "      <td>22</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>4</td>\n",
              "      <td>5.291108556091785</td>\n",
              "      <td>9.410030841827393</td>\n",
              "      <td>3.1749180927872658</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>1726</td>\n",
              "      <td>Abdoulaye Doucouré</td>\n",
              "      <td>16</td>\n",
              "      <td>1410</td>\n",
              "      <td>6</td>\n",
              "      <td>7.047202989459038</td>\n",
              "      <td>0</td>\n",
              "      <td>2.036896336823702</td>\n",
              "      <td>28</td>\n",
              "      <td>22</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Everton</td>\n",
              "      <td>6</td>\n",
              "      <td>7.047202989459038</td>\n",
              "      <td>9.332841705530882</td>\n",
              "      <td>3.605826772749424</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>15</td>\n",
              "      <td>1270</td>\n",
              "      <td>6</td>\n",
              "      <td>6.131767854094505</td>\n",
              "      <td>0</td>\n",
              "      <td>0.864791008643806</td>\n",
              "      <td>39</td>\n",
              "      <td>13</td>\n",
              "      <td>...</td>\n",
              "      <td>13</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>6</td>\n",
              "      <td>6.131767854094505</td>\n",
              "      <td>6.33973165974021</td>\n",
              "      <td>1.469034243375063</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>8150</td>\n",
              "      <td>Anthony Gordon</td>\n",
              "      <td>15</td>\n",
              "      <td>1255</td>\n",
              "      <td>6</td>\n",
              "      <td>4.724739629775286</td>\n",
              "      <td>3</td>\n",
              "      <td>3.1860481295734644</td>\n",
              "      <td>31</td>\n",
              "      <td>15</td>\n",
              "      <td>...</td>\n",
              "      <td>15</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>6</td>\n",
              "      <td>4.724739629775286</td>\n",
              "      <td>10.928396344184875</td>\n",
              "      <td>4.4085561744868755</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>10048</td>\n",
              "      <td>Nicolas Jackson</td>\n",
              "      <td>15</td>\n",
              "      <td>1107</td>\n",
              "      <td>6</td>\n",
              "      <td>9.31232613697648</td>\n",
              "      <td>1</td>\n",
              "      <td>1.3103883396834135</td>\n",
              "      <td>38</td>\n",
              "      <td>10</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>6</td>\n",
              "      <td>9.31232613697648</td>\n",
              "      <td>10.213443983346224</td>\n",
              "      <td>1.306454386562109</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>10177</td>\n",
              "      <td>Evan Ferguson</td>\n",
              "      <td>15</td>\n",
              "      <td>875</td>\n",
              "      <td>6</td>\n",
              "      <td>2.8043092247098684</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6063905879855156</td>\n",
              "      <td>23</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>6</td>\n",
              "      <td>2.8043092247098684</td>\n",
              "      <td>5.259531259536743</td>\n",
              "      <td>1.9688059650361538</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>618</td>\n",
              "      <td>Raheem Sterling</td>\n",
              "      <td>16</td>\n",
              "      <td>1275</td>\n",
              "      <td>5</td>\n",
              "      <td>4.472376704216003</td>\n",
              "      <td>1</td>\n",
              "      <td>2.4758105259388685</td>\n",
              "      <td>27</td>\n",
              "      <td>18</td>\n",
              "      <td>...</td>\n",
              "      <td>18</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>5</td>\n",
              "      <td>4.472376704216003</td>\n",
              "      <td>10.706219838932157</td>\n",
              "      <td>4.83285385556519</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>5221</td>\n",
              "      <td>Leon Bailey</td>\n",
              "      <td>14</td>\n",
              "      <td>596</td>\n",
              "      <td>5</td>\n",
              "      <td>2.9558798186481</td>\n",
              "      <td>4</td>\n",
              "      <td>3.3729121387004852</td>\n",
              "      <td>21</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>5</td>\n",
              "      <td>2.9558798186481</td>\n",
              "      <td>7.1493696346879005</td>\n",
              "      <td>2.416896268725395</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>5560</td>\n",
              "      <td>Scott McTominay</td>\n",
              "      <td>13</td>\n",
              "      <td>881</td>\n",
              "      <td>5</td>\n",
              "      <td>3.840136418119073</td>\n",
              "      <td>0</td>\n",
              "      <td>0.03688819333910942</td>\n",
              "      <td>25</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>5</td>\n",
              "      <td>3.840136418119073</td>\n",
              "      <td>3.959744928404689</td>\n",
              "      <td>0.7728553749620914</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>6122</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>16</td>\n",
              "      <td>1408</td>\n",
              "      <td>5</td>\n",
              "      <td>4.341398486867547</td>\n",
              "      <td>2</td>\n",
              "      <td>2.0042906496673822</td>\n",
              "      <td>30</td>\n",
              "      <td>22</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>2.0578919518738985</td>\n",
              "      <td>9.534928295761347</td>\n",
              "      <td>7.547718802466989</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>6482</td>\n",
              "      <td>Eddie Nketiah</td>\n",
              "      <td>15</td>\n",
              "      <td>832</td>\n",
              "      <td>5</td>\n",
              "      <td>4.2830213233828545</td>\n",
              "      <td>0</td>\n",
              "      <td>0.34161655977368355</td>\n",
              "      <td>28</td>\n",
              "      <td>6</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>5</td>\n",
              "      <td>4.2830213233828545</td>\n",
              "      <td>4.2082823775708675</td>\n",
              "      <td>0.5830877497792244</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 49 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2ff34417-cef2-45cf-9ed0-d118e5227269')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2ff34417-cef2-45cf-9ed0-d118e5227269 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2ff34417-cef2-45cf-9ed0-d118e5227269');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-67cb17b8-c8b2-4f51-b0e2-d8fa9aee3ff3\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-67cb17b8-c8b2-4f51-b0e2-d8fa9aee3ff3')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-67cb17b8-c8b2-4f51-b0e2-d8fa9aee3ff3 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['assists'] = EPL_player_df['assists_1wks_x'].astype(int)\n",
        "top25assists = EPL_player_df.nlargest(20, 'assists')\n",
        "top25assists"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 986
        },
        "id": "QhNKarUM-fT7",
        "outputId": "d986cebf-e09f-403a-bb64-57d8fee1d6ff"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id        player_name games_x time_x goals_1wks_x  \\\n",
              "1     1250      Mohamed Salah      16   1408           11   \n",
              "136   6382         Pedro Neto      10    894            1   \n",
              "226    652    Kieran Trippier      16   1409            0   \n",
              "6     8865      Ollie Watkins      16   1419            8   \n",
              "21    7322        Bukayo Saka      15   1322            5   \n",
              "34   10720       Darwin Núñez      15    865            4   \n",
              "35   10846     Julián Álvarez      16   1351            4   \n",
              "38     239        Pascal Groß      14   1190            3   \n",
              "40     843  James Ward-Prowse      15   1338            3   \n",
              "51    6818     James Maddison      11    909            3   \n",
              "92    8981        Jéremy Doku      11    721            2   \n",
              "312   6912        Pedro Porro      15   1350            0   \n",
              "370   8965    Vladimir Coufal      16   1439            0   \n",
              "0     8260     Erling Haaland      15   1305           14   \n",
              "2      453      Son Heung-Min      16   1379           10   \n",
              "16    5221        Leon Bailey      14    596            5   \n",
              "50    6556       Moussa Diaby      16   1093            3   \n",
              "60   10806       Kaoru Mitoma      15   1133            3   \n",
              "117    922    Andreas Pereira      16   1155            1   \n",
              "372   9040    Conor Gallagher      15   1257            0   \n",
              "\n",
              "                xG_1wks_x assists_1wks_x           xA_1wks_x shots_1wks_x  \\\n",
              "1      10.425881922245026              7   7.183804210275412           47   \n",
              "136    1.8730668723583221              7  3.4589802250266075           18   \n",
              "226    0.2488715760409832              7  6.4790212493389845            6   \n",
              "6       9.932601034641266              6  3.4174556974321604           48   \n",
              "21      5.627942029386759              6   5.074382349848747           31   \n",
              "34      8.947864645160735              5  2.7180760046467185           45   \n",
              "35      4.567227751016617              5  3.6646715523675084           40   \n",
              "38     2.2026415579020977              5   2.825252170674503           26   \n",
              "40       2.74514602124691              5  3.9683945141732693           19   \n",
              "51      2.944616189226508              5  3.4641558043658733           27   \n",
              "92     1.2312334701418877              5   3.068725273013115           22   \n",
              "312    1.4986615888774395              5  3.7257282603532076           26   \n",
              "370  0.014404140412807465              5  2.1209874330088496            1   \n",
              "0      16.727499932050705              4  3.2472310978919268           58   \n",
              "2       6.462784752249718              4  5.8401824198663235           39   \n",
              "16        2.9558798186481              4  3.3729121387004852           21   \n",
              "50       2.77720919623971              4   5.130432341247797           26   \n",
              "60      4.068928558379412              4   2.458461131900549           29   \n",
              "117    1.1807676712051034              4   3.847511535510421           15   \n",
              "372    1.0845018364489079              4   2.429527362808585           15   \n",
              "\n",
              "    key_passes_1wks_x  ... yellow_cards red_cards position_y  \\\n",
              "1                  36  ...            1         0          F   \n",
              "136                24  ...            3         0        F M   \n",
              "226                46  ...            5         0          D   \n",
              "6                  24  ...            3         0          F   \n",
              "21                 37  ...            1         0          F   \n",
              "34                 10  ...            3         0        F S   \n",
              "35                 37  ...            2         0        F M   \n",
              "38                 35  ...            2         0      D M S   \n",
              "40                 31  ...            3         0          M   \n",
              "51                 31  ...            2         0          M   \n",
              "92                 19  ...            2         0      D M S   \n",
              "312                27  ...            3         0          D   \n",
              "370                19  ...            3         0          D   \n",
              "0                  16  ...            1         0          F   \n",
              "2                  31  ...            0         0        F M   \n",
              "16                 14  ...            1         0        M S   \n",
              "50                 26  ...            0         0      F M S   \n",
              "60                 22  ...            3         0    D F M S   \n",
              "117                35  ...            3         0        M S   \n",
              "372                22  ...            1         1          M   \n",
              "\n",
              "                team_title_y npg_1wks_y           npxG_1wks_y  \\\n",
              "1                  Liverpool          8     7.381280824542046   \n",
              "136  Wolverhampton Wanderers          1    1.8730668723583221   \n",
              "226         Newcastle United          0    0.2488715760409832   \n",
              "6                Aston Villa          8     9.932601034641266   \n",
              "21                   Arsenal          3    4.1056044064462185   \n",
              "34                 Liverpool          4     8.947864645160735   \n",
              "35           Manchester City          4     4.567227751016617   \n",
              "38                  Brighton          3    2.2026415579020977   \n",
              "40                  West Ham          3      2.74514602124691   \n",
              "51                 Tottenham          3     2.944616189226508   \n",
              "92           Manchester City          2    1.2312334701418877   \n",
              "312                Tottenham          0    1.4986615888774395   \n",
              "370                 West Ham          0  0.014404140412807465   \n",
              "0            Manchester City         11     13.68282476067543   \n",
              "2                  Tottenham          9    5.7016159147024155   \n",
              "16               Aston Villa          5       2.9558798186481   \n",
              "50               Aston Villa          3      2.77720919623971   \n",
              "60                  Brighton          3     4.068928558379412   \n",
              "117                   Fulham          1    1.1807676712051034   \n",
              "372                  Chelsea          0    1.0845018364489079   \n",
              "\n",
              "                xGChain           xGBuildup goals assists  \n",
              "1    14.105848833918571  3.6903739869594574    11       7  \n",
              "136   4.809771712869406  1.1124582178890705     1       7  \n",
              "226  11.438116792589426   8.551653895527124     0       7  \n",
              "6    14.037970393896103  1.9158685617148876     8       6  \n",
              "21   11.831160604953766    5.27845748886466     5       6  \n",
              "34   11.674425162374973  1.7612568065524101     4       5  \n",
              "35   13.038907699286938  7.6839520782232285     4       5  \n",
              "38   10.106509327888489   8.090802012011409     3       5  \n",
              "40    7.606547981500626   4.921757174655795     3       5  \n",
              "51     9.78583274781704   5.331316661089659     3       5  \n",
              "92    5.178026407957077  2.0440204814076424     2       5  \n",
              "312   9.831458315253258    7.68720106780529     0       5  \n",
              "370   4.876112636178732   4.039915576577187     0       5  \n",
              "0    16.214465029537678  1.3705047406256199    14       4  \n",
              "2     13.83394755423069   4.277155740186572    10       4  \n",
              "16   7.1493696346879005   2.416896268725395     5       4  \n",
              "50   10.366490062326193   4.891134088858962     3       4  \n",
              "60   11.570604890584946   6.752708543092012     3       4  \n",
              "117  7.2560258051380515  4.4313116585835814     1       4  \n",
              "372   8.192781055346131   6.232454540207982     0       4  \n",
              "\n",
              "[20 rows x 50 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1685cf36-1094-4d15-8e94-94faf1f5fd3e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>position_y</th>\n",
              "      <th>team_title_y</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>16</td>\n",
              "      <td>1408</td>\n",
              "      <td>11</td>\n",
              "      <td>10.425881922245026</td>\n",
              "      <td>7</td>\n",
              "      <td>7.183804210275412</td>\n",
              "      <td>47</td>\n",
              "      <td>36</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>8</td>\n",
              "      <td>7.381280824542046</td>\n",
              "      <td>14.105848833918571</td>\n",
              "      <td>3.6903739869594574</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>136</th>\n",
              "      <td>6382</td>\n",
              "      <td>Pedro Neto</td>\n",
              "      <td>10</td>\n",
              "      <td>894</td>\n",
              "      <td>1</td>\n",
              "      <td>1.8730668723583221</td>\n",
              "      <td>7</td>\n",
              "      <td>3.4589802250266075</td>\n",
              "      <td>18</td>\n",
              "      <td>24</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1</td>\n",
              "      <td>1.8730668723583221</td>\n",
              "      <td>4.809771712869406</td>\n",
              "      <td>1.1124582178890705</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>226</th>\n",
              "      <td>652</td>\n",
              "      <td>Kieran Trippier</td>\n",
              "      <td>16</td>\n",
              "      <td>1409</td>\n",
              "      <td>0</td>\n",
              "      <td>0.2488715760409832</td>\n",
              "      <td>7</td>\n",
              "      <td>6.4790212493389845</td>\n",
              "      <td>6</td>\n",
              "      <td>46</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0</td>\n",
              "      <td>0.2488715760409832</td>\n",
              "      <td>11.438116792589426</td>\n",
              "      <td>8.551653895527124</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>16</td>\n",
              "      <td>1419</td>\n",
              "      <td>8</td>\n",
              "      <td>9.932601034641266</td>\n",
              "      <td>6</td>\n",
              "      <td>3.4174556974321604</td>\n",
              "      <td>48</td>\n",
              "      <td>24</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>8</td>\n",
              "      <td>9.932601034641266</td>\n",
              "      <td>14.037970393896103</td>\n",
              "      <td>1.9158685617148876</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>7322</td>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>15</td>\n",
              "      <td>1322</td>\n",
              "      <td>5</td>\n",
              "      <td>5.627942029386759</td>\n",
              "      <td>6</td>\n",
              "      <td>5.074382349848747</td>\n",
              "      <td>31</td>\n",
              "      <td>37</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>3</td>\n",
              "      <td>4.1056044064462185</td>\n",
              "      <td>11.831160604953766</td>\n",
              "      <td>5.27845748886466</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>10720</td>\n",
              "      <td>Darwin Núñez</td>\n",
              "      <td>15</td>\n",
              "      <td>865</td>\n",
              "      <td>4</td>\n",
              "      <td>8.947864645160735</td>\n",
              "      <td>5</td>\n",
              "      <td>2.7180760046467185</td>\n",
              "      <td>45</td>\n",
              "      <td>10</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>F S</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>4</td>\n",
              "      <td>8.947864645160735</td>\n",
              "      <td>11.674425162374973</td>\n",
              "      <td>1.7612568065524101</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>10846</td>\n",
              "      <td>Julián Álvarez</td>\n",
              "      <td>16</td>\n",
              "      <td>1351</td>\n",
              "      <td>4</td>\n",
              "      <td>4.567227751016617</td>\n",
              "      <td>5</td>\n",
              "      <td>3.6646715523675084</td>\n",
              "      <td>40</td>\n",
              "      <td>37</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>4</td>\n",
              "      <td>4.567227751016617</td>\n",
              "      <td>13.038907699286938</td>\n",
              "      <td>7.6839520782232285</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>239</td>\n",
              "      <td>Pascal Groß</td>\n",
              "      <td>14</td>\n",
              "      <td>1190</td>\n",
              "      <td>3</td>\n",
              "      <td>2.2026415579020977</td>\n",
              "      <td>5</td>\n",
              "      <td>2.825252170674503</td>\n",
              "      <td>26</td>\n",
              "      <td>35</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D M S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>2.2026415579020977</td>\n",
              "      <td>10.106509327888489</td>\n",
              "      <td>8.090802012011409</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>843</td>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>15</td>\n",
              "      <td>1338</td>\n",
              "      <td>3</td>\n",
              "      <td>2.74514602124691</td>\n",
              "      <td>5</td>\n",
              "      <td>3.9683945141732693</td>\n",
              "      <td>19</td>\n",
              "      <td>31</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>3</td>\n",
              "      <td>2.74514602124691</td>\n",
              "      <td>7.606547981500626</td>\n",
              "      <td>4.921757174655795</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>6818</td>\n",
              "      <td>James Maddison</td>\n",
              "      <td>11</td>\n",
              "      <td>909</td>\n",
              "      <td>3</td>\n",
              "      <td>2.944616189226508</td>\n",
              "      <td>5</td>\n",
              "      <td>3.4641558043658733</td>\n",
              "      <td>27</td>\n",
              "      <td>31</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>3</td>\n",
              "      <td>2.944616189226508</td>\n",
              "      <td>9.78583274781704</td>\n",
              "      <td>5.331316661089659</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>92</th>\n",
              "      <td>8981</td>\n",
              "      <td>Jéremy Doku</td>\n",
              "      <td>11</td>\n",
              "      <td>721</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2312334701418877</td>\n",
              "      <td>5</td>\n",
              "      <td>3.068725273013115</td>\n",
              "      <td>22</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>D M S</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2312334701418877</td>\n",
              "      <td>5.178026407957077</td>\n",
              "      <td>2.0440204814076424</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>312</th>\n",
              "      <td>6912</td>\n",
              "      <td>Pedro Porro</td>\n",
              "      <td>15</td>\n",
              "      <td>1350</td>\n",
              "      <td>0</td>\n",
              "      <td>1.4986615888774395</td>\n",
              "      <td>5</td>\n",
              "      <td>3.7257282603532076</td>\n",
              "      <td>26</td>\n",
              "      <td>27</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0</td>\n",
              "      <td>1.4986615888774395</td>\n",
              "      <td>9.831458315253258</td>\n",
              "      <td>7.68720106780529</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>370</th>\n",
              "      <td>8965</td>\n",
              "      <td>Vladimir Coufal</td>\n",
              "      <td>16</td>\n",
              "      <td>1439</td>\n",
              "      <td>0</td>\n",
              "      <td>0.014404140412807465</td>\n",
              "      <td>5</td>\n",
              "      <td>2.1209874330088496</td>\n",
              "      <td>1</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>D</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>0</td>\n",
              "      <td>0.014404140412807465</td>\n",
              "      <td>4.876112636178732</td>\n",
              "      <td>4.039915576577187</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>15</td>\n",
              "      <td>1305</td>\n",
              "      <td>14</td>\n",
              "      <td>16.727499932050705</td>\n",
              "      <td>4</td>\n",
              "      <td>3.2472310978919268</td>\n",
              "      <td>58</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>F</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>11</td>\n",
              "      <td>13.68282476067543</td>\n",
              "      <td>16.214465029537678</td>\n",
              "      <td>1.3705047406256199</td>\n",
              "      <td>14</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>453</td>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>16</td>\n",
              "      <td>1379</td>\n",
              "      <td>10</td>\n",
              "      <td>6.462784752249718</td>\n",
              "      <td>4</td>\n",
              "      <td>5.8401824198663235</td>\n",
              "      <td>39</td>\n",
              "      <td>31</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>9</td>\n",
              "      <td>5.7016159147024155</td>\n",
              "      <td>13.83394755423069</td>\n",
              "      <td>4.277155740186572</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>5221</td>\n",
              "      <td>Leon Bailey</td>\n",
              "      <td>14</td>\n",
              "      <td>596</td>\n",
              "      <td>5</td>\n",
              "      <td>2.9558798186481</td>\n",
              "      <td>4</td>\n",
              "      <td>3.3729121387004852</td>\n",
              "      <td>21</td>\n",
              "      <td>14</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>5</td>\n",
              "      <td>2.9558798186481</td>\n",
              "      <td>7.1493696346879005</td>\n",
              "      <td>2.416896268725395</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>6556</td>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>16</td>\n",
              "      <td>1093</td>\n",
              "      <td>3</td>\n",
              "      <td>2.77720919623971</td>\n",
              "      <td>4</td>\n",
              "      <td>5.130432341247797</td>\n",
              "      <td>26</td>\n",
              "      <td>26</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>F M S</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>3</td>\n",
              "      <td>2.77720919623971</td>\n",
              "      <td>10.366490062326193</td>\n",
              "      <td>4.891134088858962</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>10806</td>\n",
              "      <td>Kaoru Mitoma</td>\n",
              "      <td>15</td>\n",
              "      <td>1133</td>\n",
              "      <td>3</td>\n",
              "      <td>4.068928558379412</td>\n",
              "      <td>4</td>\n",
              "      <td>2.458461131900549</td>\n",
              "      <td>29</td>\n",
              "      <td>22</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>D F M S</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>3</td>\n",
              "      <td>4.068928558379412</td>\n",
              "      <td>11.570604890584946</td>\n",
              "      <td>6.752708543092012</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>922</td>\n",
              "      <td>Andreas Pereira</td>\n",
              "      <td>16</td>\n",
              "      <td>1155</td>\n",
              "      <td>1</td>\n",
              "      <td>1.1807676712051034</td>\n",
              "      <td>4</td>\n",
              "      <td>3.847511535510421</td>\n",
              "      <td>15</td>\n",
              "      <td>35</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>M S</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>1</td>\n",
              "      <td>1.1807676712051034</td>\n",
              "      <td>7.2560258051380515</td>\n",
              "      <td>4.4313116585835814</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>372</th>\n",
              "      <td>9040</td>\n",
              "      <td>Conor Gallagher</td>\n",
              "      <td>15</td>\n",
              "      <td>1257</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0845018364489079</td>\n",
              "      <td>4</td>\n",
              "      <td>2.429527362808585</td>\n",
              "      <td>15</td>\n",
              "      <td>22</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>M</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0845018364489079</td>\n",
              "      <td>8.192781055346131</td>\n",
              "      <td>6.232454540207982</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 50 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1685cf36-1094-4d15-8e94-94faf1f5fd3e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1685cf36-1094-4d15-8e94-94faf1f5fd3e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1685cf36-1094-4d15-8e94-94faf1f5fd3e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-48d9c120-80da-4abb-8d9b-a1fc22819160\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-48d9c120-80da-4abb-8d9b-a1fc22819160')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-48d9c120-80da-4abb-8d9b-a1fc22819160 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import plotly.graph_objects as go"
      ],
      "metadata": {
        "id": "t81EQEbg_2jQ"
      },
      "execution_count": 65,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig3= go.Figure()\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"goals\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'goals'))\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"xG_1wks_x\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xG'))\n",
        "for i in range(0, len(top25goals)):\n",
        "               fig3.add_shape(type='line',\n",
        "                              x0 = top25goals[\"goals\"][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top25goals[\"xG_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig3.update_layout(title_text =\n",
        "                    \"Goals vs xG\",\n",
        "                    title_font_size = 30)\n",
        "fig3.update_xaxes(range=[0, 30])\n",
        "fig3.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "pCjmRmyw-6sd",
        "outputId": "b2e21908-601f-4c55-d430-b5f84fa9cec4"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"e02bb971-a164-4d0e-a72d-90cf80074710\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"e02bb971-a164-4d0e-a72d-90cf80074710\")) {                    Plotly.newPlot(                        \"e02bb971-a164-4d0e-a72d-90cf80074710\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"goals\",\"x\":[14,11,10,9,8,8,8,7,7,7,6,6,6,6,6,5,5,5,5,5],\"y\":[\"Erling Haaland\",\"Mohamed Salah\",\"Son Heung-Min\",\"Jarrod Bowen\",\"Dominic Solanke\",\"Hee-Chan Hwang\",\"Ollie Watkins\",\"Callum Wilson\",\"Alexander Isak\",\"Bryan Mbeumo\",\"Abdoulaye Doucour\\u00e9\",\"Odsonne Edouard\",\"Anthony Gordon\",\"Nicolas Jackson\",\"Evan Ferguson\",\"Raheem Sterling\",\"Leon Bailey\",\"Scott McTominay\",\"Douglas Luiz\",\"Eddie Nketiah\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xG\",\"x\":[\"16.727499932050705\",\"10.425881922245026\",\"6.462784752249718\",\"6.948418594896793\",\"9.721119590103626\",\"5.167933830991387\",\"9.932601034641266\",\"7.439524449408054\",\"7.864541232585907\",\"7.574615128338337\",\"7.047202989459038\",\"6.131767854094505\",\"4.724739629775286\",\"9.31232613697648\",\"2.8043092247098684\",\"4.472376704216003\",\"2.9558798186481\",\"3.840136418119073\",\"4.341398486867547\",\"4.2830213233828545\"],\"y\":[\"Erling Haaland\",\"Mohamed Salah\",\"Son Heung-Min\",\"Jarrod Bowen\",\"Dominic Solanke\",\"Hee-Chan Hwang\",\"Ollie Watkins\",\"Callum Wilson\",\"Alexander Isak\",\"Bryan Mbeumo\",\"Abdoulaye Doucour\\u00e9\",\"Odsonne Edouard\",\"Anthony Gordon\",\"Nicolas Jackson\",\"Evan Ferguson\",\"Raheem Sterling\",\"Leon Bailey\",\"Scott McTominay\",\"Douglas Luiz\",\"Eddie Nketiah\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":14,\"x1\":\"16.727499932050705\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":11,\"x1\":\"10.425881922245026\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":10,\"x1\":\"6.462784752249718\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":9,\"x1\":\"6.948418594896793\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":8,\"x1\":\"9.721119590103626\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":8,\"x1\":\"5.167933830991387\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":8,\"x1\":\"9.932601034641266\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"7.439524449408054\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"7.864541232585907\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"7.574615128338337\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"7.047202989459038\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"6.131767854094505\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"4.724739629775286\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"9.31232613697648\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"2.8043092247098684\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"4.472376704216003\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"2.9558798186481\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.840136418119073\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"4.341398486867547\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"4.2830213233828545\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":30},\"text\":\"Goals vs xG\"},\"xaxis\":{\"range\":[0,30]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('e02bb971-a164-4d0e-a72d-90cf80074710');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])"
      ],
      "metadata": {
        "id": "zxhwefRPFQDN"
      },
      "execution_count": 67,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "top25assists.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wSmCXk6YFSz5",
        "outputId": "74180e5b-00c4-4ae7-ee63-7e36ac2dd5e3"
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['id', 'player_name', 'games_x', 'time_x', 'goals_1wks_x', 'xG_1wks_x',\n",
              "       'assists_1wks_x', 'xA_1wks_x', 'shots_1wks_x', 'key_passes_1wks_x',\n",
              "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
              "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
              "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
              "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
              "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
              "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
              "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
              "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
              "       'xGBuildup', 'goals', 'assists'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "top20assists = top25assists.drop(columns=[ 'shots_1wks_x', 'key_passes_1wks_x',\n",
        "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
        "       'npg_1wks_x', 'npxG_1wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
        "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
        "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
        "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
        "       'time', 'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
        "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
        "       'position_y', 'team_title_y', 'npg_1wks_y', 'npxG_1wks_y', 'xGChain',\n",
        "       'xGBuildup', 'assists_1wks_x', 'games_x', 'time_x', 'goals_1wks_x', 'id' ])\n",
        "\n",
        "top20assists.reset_index(inplace = True,drop = True)\n",
        "top20assists"
      ],
      "metadata": {
        "id": "_Xn659fiFXvb",
        "outputId": "c2123ca0-0085-479a-8282-4051d4b118bb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        }
      },
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          player_name             xG_1wks_x           xA_1wks_x  goals  \\\n",
              "0       Mohamed Salah    10.425881922245026   7.183804210275412     11   \n",
              "1          Pedro Neto    1.8730668723583221  3.4589802250266075      1   \n",
              "2     Kieran Trippier    0.2488715760409832  6.4790212493389845      0   \n",
              "3       Ollie Watkins     9.932601034641266  3.4174556974321604      8   \n",
              "4         Bukayo Saka     5.627942029386759   5.074382349848747      5   \n",
              "5        Darwin Núñez     8.947864645160735  2.7180760046467185      4   \n",
              "6      Julián Álvarez     4.567227751016617  3.6646715523675084      4   \n",
              "7         Pascal Groß    2.2026415579020977   2.825252170674503      3   \n",
              "8   James Ward-Prowse      2.74514602124691  3.9683945141732693      3   \n",
              "9      James Maddison     2.944616189226508  3.4641558043658733      3   \n",
              "10        Jéremy Doku    1.2312334701418877   3.068725273013115      2   \n",
              "11        Pedro Porro    1.4986615888774395  3.7257282603532076      0   \n",
              "12    Vladimir Coufal  0.014404140412807465  2.1209874330088496      0   \n",
              "13     Erling Haaland    16.727499932050705  3.2472310978919268     14   \n",
              "14      Son Heung-Min     6.462784752249718  5.8401824198663235     10   \n",
              "15        Leon Bailey       2.9558798186481  3.3729121387004852      5   \n",
              "16       Moussa Diaby      2.77720919623971   5.130432341247797      3   \n",
              "17       Kaoru Mitoma     4.068928558379412   2.458461131900549      3   \n",
              "18    Andreas Pereira    1.1807676712051034   3.847511535510421      1   \n",
              "19    Conor Gallagher    1.0845018364489079   2.429527362808585      0   \n",
              "\n",
              "    assists  \n",
              "0         7  \n",
              "1         7  \n",
              "2         7  \n",
              "3         6  \n",
              "4         6  \n",
              "5         5  \n",
              "6         5  \n",
              "7         5  \n",
              "8         5  \n",
              "9         5  \n",
              "10        5  \n",
              "11        5  \n",
              "12        5  \n",
              "13        4  \n",
              "14        4  \n",
              "15        4  \n",
              "16        4  \n",
              "17        4  \n",
              "18        4  \n",
              "19        4  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8a5c8a09-77f2-4579-b60a-bd0bd9461664\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>player_name</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>10.425881922245026</td>\n",
              "      <td>7.183804210275412</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Pedro Neto</td>\n",
              "      <td>1.8730668723583221</td>\n",
              "      <td>3.4589802250266075</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Kieran Trippier</td>\n",
              "      <td>0.2488715760409832</td>\n",
              "      <td>6.4790212493389845</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>9.932601034641266</td>\n",
              "      <td>3.4174556974321604</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>5.627942029386759</td>\n",
              "      <td>5.074382349848747</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Darwin Núñez</td>\n",
              "      <td>8.947864645160735</td>\n",
              "      <td>2.7180760046467185</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Julián Álvarez</td>\n",
              "      <td>4.567227751016617</td>\n",
              "      <td>3.6646715523675084</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Pascal Groß</td>\n",
              "      <td>2.2026415579020977</td>\n",
              "      <td>2.825252170674503</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>2.74514602124691</td>\n",
              "      <td>3.9683945141732693</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>James Maddison</td>\n",
              "      <td>2.944616189226508</td>\n",
              "      <td>3.4641558043658733</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Jéremy Doku</td>\n",
              "      <td>1.2312334701418877</td>\n",
              "      <td>3.068725273013115</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Pedro Porro</td>\n",
              "      <td>1.4986615888774395</td>\n",
              "      <td>3.7257282603532076</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Vladimir Coufal</td>\n",
              "      <td>0.014404140412807465</td>\n",
              "      <td>2.1209874330088496</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>16.727499932050705</td>\n",
              "      <td>3.2472310978919268</td>\n",
              "      <td>14</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Son Heung-Min</td>\n",
              "      <td>6.462784752249718</td>\n",
              "      <td>5.8401824198663235</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Leon Bailey</td>\n",
              "      <td>2.9558798186481</td>\n",
              "      <td>3.3729121387004852</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Moussa Diaby</td>\n",
              "      <td>2.77720919623971</td>\n",
              "      <td>5.130432341247797</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Kaoru Mitoma</td>\n",
              "      <td>4.068928558379412</td>\n",
              "      <td>2.458461131900549</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Andreas Pereira</td>\n",
              "      <td>1.1807676712051034</td>\n",
              "      <td>3.847511535510421</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Conor Gallagher</td>\n",
              "      <td>1.0845018364489079</td>\n",
              "      <td>2.429527362808585</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a5c8a09-77f2-4579-b60a-bd0bd9461664')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8a5c8a09-77f2-4579-b60a-bd0bd9461664 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8a5c8a09-77f2-4579-b60a-bd0bd9461664');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4ad08335-81be-4dd0-972e-7117b14c2ff6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4ad08335-81be-4dd0-972e-7117b14c2ff6')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4ad08335-81be-4dd0-972e-7117b14c2ff6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig4= go.Figure()\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"assists\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'assists'))\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"xA_1wks_x\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xA'))\n",
        "for i in range(0, len(top20assists)):\n",
        "               fig4.add_shape(type='line',\n",
        "                              x0 = top20assists['assists'][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top20assists[\"xA_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig4.update_layout(title_text =\n",
        "                    \"assists vs xG\",\n",
        "                    title_font_size = 15)\n",
        "fig4.update_xaxes(range=[0, 15])\n",
        "fig4.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "P6oVjqCSF4Pw",
        "outputId": "c593dbe4-2467-4ba3-a3fe-d2e59581f9ed"
      },
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"4d4d4225-5935-4c01-935d-6f1f605271d1\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"4d4d4225-5935-4c01-935d-6f1f605271d1\")) {                    Plotly.newPlot(                        \"4d4d4225-5935-4c01-935d-6f1f605271d1\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"assists\",\"x\":[7,7,7,6,6,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4],\"y\":[\"Mohamed Salah\",\"Pedro Neto\",\"Kieran Trippier\",\"Ollie Watkins\",\"Bukayo Saka\",\"Darwin N\\u00fa\\u00f1ez\",\"Juli\\u00e1n \\u00c1lvarez\",\"Pascal Gro\\u00df\",\"James Ward-Prowse\",\"James Maddison\",\"J\\u00e9remy Doku\",\"Pedro Porro\",\"Vladimir Coufal\",\"Erling Haaland\",\"Son Heung-Min\",\"Leon Bailey\",\"Moussa Diaby\",\"Kaoru Mitoma\",\"Andreas Pereira\",\"Conor Gallagher\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xA\",\"x\":[\"7.183804210275412\",\"3.4589802250266075\",\"6.4790212493389845\",\"3.4174556974321604\",\"5.074382349848747\",\"2.7180760046467185\",\"3.6646715523675084\",\"2.825252170674503\",\"3.9683945141732693\",\"3.4641558043658733\",\"3.068725273013115\",\"3.7257282603532076\",\"2.1209874330088496\",\"3.2472310978919268\",\"5.8401824198663235\",\"3.3729121387004852\",\"5.130432341247797\",\"2.458461131900549\",\"3.847511535510421\",\"2.429527362808585\"],\"y\":[\"Mohamed Salah\",\"Pedro Neto\",\"Kieran Trippier\",\"Ollie Watkins\",\"Bukayo Saka\",\"Darwin N\\u00fa\\u00f1ez\",\"Juli\\u00e1n \\u00c1lvarez\",\"Pascal Gro\\u00df\",\"James Ward-Prowse\",\"James Maddison\",\"J\\u00e9remy Doku\",\"Pedro Porro\",\"Vladimir Coufal\",\"Erling Haaland\",\"Son Heung-Min\",\"Leon Bailey\",\"Moussa Diaby\",\"Kaoru Mitoma\",\"Andreas Pereira\",\"Conor Gallagher\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"7.183804210275412\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"3.4589802250266075\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":7,\"x1\":\"6.4790212493389845\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"3.4174556974321604\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":6,\"x1\":\"5.074382349848747\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"2.7180760046467185\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.6646715523675084\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"2.825252170674503\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.9683945141732693\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.4641558043658733\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.068725273013115\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"3.7257282603532076\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":5,\"x1\":\"2.1209874330088496\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"3.2472310978919268\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"5.8401824198663235\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"3.3729121387004852\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"5.130432341247797\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"2.458461131900549\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"3.847511535510421\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":4,\"x1\":\"2.429527362808585\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":15},\"text\":\"assists vs xG\"},\"xaxis\":{\"range\":[0,15]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('4d4d4225-5935-4c01-935d-6f1f605271d1');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Plotting the bar charts\n",
        "plt.figure(figsize=(12, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.subplot(131)\n",
        "plt.bar(midfielders['name'][:10], midfielders['5GW Total'][:10])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Forwards chart\n",
        "plt.subplot(132)\n",
        "plt.bar(forwards['name'][:10], forwards['5GW Total'][:10])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Defenders chart\n",
        "plt.subplot(133)\n",
        "plt.bar(defenders['name'][:10], defenders['5GW Total'][:10])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "FN06IYwSKGLw",
        "outputId": "532e546a-6803-4559-ce16-ec755eda1ad6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 601
        }
      },
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'Top50'\n",
        "\n",
        "# Filter the DataFrame by position type\n",
        "midfielders = Top50[Top50['pos'] == 'M']\n",
        "forwards = Top50[Top50['pos'] == 'F']\n",
        "defenders = Top50[Top50['pos'] == 'D']\n",
        "\n",
        "# Sort the filtered DataFrames by '5GW Total' in descending order\n",
        "midfielders = midfielders.sort_values(by='5GW Total', ascending=False)\n",
        "forwards = forwards.sort_values(by='5GW Total', ascending=False)\n",
        "defenders = defenders.sort_values(by='5GW Total', ascending=False)\n",
        "\n",
        "# Create a list of colors for each chart\n",
        "colors = ['blue', 'green', 'red']\n",
        "\n",
        "# Plotting the horizontal bar charts with different colors\n",
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Midfielders chart\n",
        "plt.barh(midfielders['name'][:10], midfielders['5GW Total'][:10], color=colors[0])\n",
        "plt.title('Top 10 Midfielders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Forwards chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(forwards['name'][:10], forwards['5GW Total'][:10], color=colors[1])\n",
        "plt.title('Top 10 Forwards by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "# Defenders chart\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.barh(defenders['name'][:10], defenders['5GW Total'][:10], color=colors[2])\n",
        "plt.title('Top 10 Defenders by 5GW Total')\n",
        "plt.xlabel('5GW Total')\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "VSYcUse-SrV-",
        "outputId": "c0478ad3-ed3d-4592-ab8c-92629769a81e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA5AAAAIsCAYAAACEM0aeAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAButklEQVR4nO3dfXzN9f/H8ec5ZxtjxjZDSEQdw9jZzMy1IZRyUb5duKZcpyt9vy66+NKFUioWkYS0igplRKVQvuVimyiUSLkaKxfbzMbOOb8/3HZ+nTb2cTFnO3vcbze3m/O5eH9en89rh/Pc5+KYnE6nUwAAAAAAFMLs6QIAAAAAACUDARIAAAAAYAgBEgAAAABgCAESAAAAAGAIARIAAAAAYAgBEgAAAABgCAESAAAAAGAIARIAAAAAYAgBEgAAAABgCAESAIBSbNy4cYqLi7vicQ4ePCir1ap58+ZdhapQFPJ6tHTpUk+XAqAE8/F0AQCA4sdqtRpa7p133lFMTEyR1vLee+/p+++/1/bt23XkyBH17NlTL7zwQoHLpqen66WXXtIXX3yh7OxshYeHa9y4cWrYsGGh2+nXr582b95c4LxVq1apbt26V7QfuDo2bdqk/v37Fzhv8eLFioiIcJvmcDj06aef6pNPPtHOnTuVmZmpwMBAhYWFqXPnzurZs6f8/Pxkt9sVHR2tmJgYvfHGG25jLFiwQFOmTFGPHj304osvus2bPn26Zs2apdWrV6tOnTr5aoqLi9OhQ4cK3a8pU6aoV69eF10mISFB/v7+hS4HAEWJAAkAyGfq1Klurz/55BNt3Lgx3/RrEareeustnT59WuHh4UpLS7vgcg6HQ0OHDtXPP/+sIUOGKCgoSO+995769eunpUuXqnbt2oVuq1q1anr00UfzTa9ateqV7AKKQL9+/RQeHu42rVatWm6vs7OzNWrUKH377bey2WwaMmSIQkJCdOrUKW3evFmTJk3SDz/8oOeff14Wi0URERFKSUnJt63k5GT5+PgoOTm5wHkhISEFhkdJmjBhgk6fPu16vWHDBiUmJmr8+PEKCgpyTY+MjCx0n99//30FBQURIAF4FAESAJBP9+7d3V7/8MMP2rhxY77p18KiRYtUvXp1mUwm2Wy2Cy63evVqpaSkaPr06erSpYskqWvXrurcubPi4+M1bdq0QrdVoUKFItlHp9OpnJwclS1b9qqPXZicnBz5+vrKbPauu1aaNm3q6vOFPP/88/r22281YcIEDRgwwG3e4MGDtX//fm3cuNE1LTIyUhs3btTevXvdfjmSnJysLl26KDExUWlpaQoNDZUk5ebmavv27WrZsuUFa+jYsaPb6z///FOJiYnq2LGjatasaXh/AaC48K7/TQAA10xWVpZeeOEFtW3bVo0aNVLnzp01b948OZ1Ot+WsVqsmT56sTz/9VJ07d1Z4eLh69eqlLVu2GNpOjRo1ZDKZCl1uzZo1qly5sm655RbXtODgYHXt2lVr167V2bNnL20HC5Cbm6uZM2eqY8eOatSokeLi4vTKK6/kGzsuLk7Dhg3TN998o169eqlx48b64IMPNHr0aPXs2dNt2eHDh8tqtWrt2rWuaT/88IOsVqvWr18vSTp58qRefPFF3X777bLZbIqMjNT999+v3bt3u421adMmWa1WrVy5Uq+++qpat26tJk2aKDMzU5L05Zdfqlu3bgoPD1e3bt30xRdfFLifK1euVK9evVzbuv3227Vw4ULDx2nBggVq3769GjdurL59++qXX35xzfv4449ltVq1c+fOfOvNnj1bYWFhOnr0qKHtZGZmKjc3t8B5R44c0UcffaTWrVvnC495ateurT59+rheR0VFSZLbmcYDBw4oLS1Nffv2VZkyZdzm7dq1S1lZWa71LpeRn6u4uDjt2bNHmzdvltVqldVqVb9+/SQZ//kAgKuBM5AAgEvmdDo1YsQIbdq0SXfddZfCwsL0zTffaOrUqTp69KgmTJjgtvyWLVu0atUq9evXT35+fnr//fd1//3368MPP9TNN998VWratWuXGjRokO9MW3h4uBYvXqzffvut0Hs77Xa7jh8/7jatTJkyKl++vCTpiSee0LJly9S5c2cNGjRI27dv15w5c7R3717NnDnTbb3ffvtNjz32mO6++27961//cl3iuHbtWmVmZiogIEBOp1PJyckym83aunWrOnToIEnaunWrzGazK5gcOHBAX375pbp06aKaNWvqzz//1OLFi9W3b1+tXLky3yW2s2bNkq+vr4YMGaKzZ8/K19dX3377rR588EHVq1dPjz32mE6cOKHx48erWrVqbutu3LhRjz76qGJjYzV27FhJ0r59+5ScnHzBIPZ3y5cv1+nTp3XfffcpJydHixYt0oABA7RixQpV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R6tZs2Zq0qSJ7rjjDiUmJl5w3AMHDqhjx466//77lZ2dLUl688031alTJ4WHh6t58+YaOHCgDhw44Frn5MmTGj9+vGJiYtS4cWPdc8892rJli9u4/fr107Bhw7R69Wp17txZNptN/fv31x9//HFFxwEAAAAAjPLxdAGXqn379mrQoIFmzpx5RfceHjx4UD169FCtWrV09uxZrVy5Un369NGnn36qOnXqSJL279+vu+++W9ddd50mTpyo0NBQ/fLLLzp8+HCBY+7bt08DBw5UkyZNNG3aNPn5+Wn58uWaPn26xowZo4iICGVkZCgpKUmnT5+WJNntdj3wwAM6cOCAxo4dq8qVK2vRokUaNGiQPvjgAzVq1Mg1/q5du3T8+HGNHTtWdrtdL7zwgh5//HEtXrz4so8DAAAAABhV4gKkJI0YMUIPPvigtm/frsaNG1/WGKNHj3b93eFwqGXLltq+fbuWLVumRx99VNL5B/f4+vrq/fffV0BAgCSpRYsWBY63e/duDR48WK1atdKUKVNksVgkSdu3b5fVatWwYcNcy3bs2NH193Xr1mn79u1666231Lp1a0lSq1atdMstt2jOnDmKj493LZuRkaHly5crODhYkpSVlaXx48crNTVV1apVu6zjAAAAUJJYLJ67gC5v256sAUWD3hpXIgNkp06ddPPNN2vmzJmaM2fOZY2xd+9evfLKK0pJSdFff/3lmr5//37X37///nt17tzZFR4vZMeOHZo9e7ZuvfVW/fe//5XJZHLNa9Cggd577z1NmTJFnTp1UpMmTeTr6+uav3XrVgUEBLjCoyT5+vqqU6dO+S6VrV+/vis8SlK9evUkiQAJAABKjcBAf0+XUCxqQNGgt4UrkQHSZDJp+PDhevTRR/XTTz9d8vqZmZkaPHiwgoODNW7cOFWvXl1lypTRE088oZycHNdyJ0+eVJUqVQod77vvvtOZM2d01113uYVHSerVq5dOnz6tJUuWaMGCBapQoYJ69OihsWPHqmzZskpPT1dISEi+MStXrqxTp065TQsMDHR7nRdE/14zAACAN0tPPyO73eGRbVssZgUG+nu0BhQNens+PBs5A1siA6Qkde3aVfHx8Zo1a5aqV69+Setu27ZNqampmjNnjurXr++anpGR4XYmr1KlSjp27Fih4w0ZMkQ//vij7r//fr3zzjuyWq2ueWaz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22+/ua137tw5PfbYY7rjjjs0d+5ctWzZUtHR0dq6datrmS1btqhMmTJKSkpym1auXDk1bNjwonWNHTtWrVq10syZMxUWFqZx48Zp7969V3HPAQAAAODCSvUlrBdz3XXX6c8//5QkjR492jXd4XCoZcuW2r59u5YtW6ZHH33UNe/cuXN65JFHdOutt7qmnTx5UvHx8Tp06JBq1KihLVu26M4779QHH3ygvXv3qm7dutqyZYsiIyNlsVguWlOfPn3Up08fSZLNZtP69eu1Zs0ajRw58mruOgAAKKYsFn7370l5x58+eB96axwB8gKcTqdMJpMkae/evXrllVeUkpKiv/76y7XM/v37863Xtm1bt9cRERHy9fXVli1bVL16dSUlJWnatGlKSUnRli1bVLduXSUlJelf//pXoTW1atXK9fdy5cqpevXqSk1Nvcw9BAAAJU1goL+nS4Dogzejt4UjQF5AamqqateurczMTA0ePFjBwcEaN26cqlevrjJlyuiJJ55QTk6O2zr+/v4qX76827SyZcsqPDxcW7duVYMGDZSZmSmbzaamTZtqy5YtatWqlQ4fPqzo6OhCa6pQoYLba19fX509e/bKdxYAAJQI6elnZLc7PF1GqWWxmBUY6E8fvBC9PR+ejZyBJUAWYM+ePTp69Kh69uypbdu2KTU1VXPmzFH9+vVdy2RkZKhatWpu6+Wdsfyn6OhorVmzRmFhYQoLC1P58uUVHR2t5557Tlu3bpWfn58aN25cpPsEAABKPrvdodzc0vnhtjihD96L3haOi3z/IScnR88884z8/PzUu3dvZWdnSzp/ti9PcnKyDh06ZHjMpk2bav/+/Vq9erXrTGN0dLSOHj2qjz/+WI0bN5afn9/V3REAAAAAuMpK9RlIh8Ohbdu2SZKysrL0yy+/aPHixTpw4IBeeOEF1axZU2XLllW5cuU0adIkDR06VEePHlV8fLyqVq1qeDt5D8jZvHmzBg0aJEkKDg5W3bp1tXnzZg0fPrwodg8AAAAArqpSHSCzs7N19913Szr/UJqaNWsqNjZWr7/+uurWrStJqly5sqZPn66pU6dq5MiRql27tiZNmqS33nrL8HYCAgIUFhamnTt3KioqyjU9Ojpae/fuNXT/IwAAAAB4msnpdDo9XQQ8K3JOpFJSUzxdBgAAuABbNZuShyXrxInT3J/lQT4+ZgUFlacPXojeSsHB5Q09RId7IAEAAAAAhhAgAQAAAACGECABAAAAAIYQIAEAAAAAhhAgAQAAAACGECABAAAAAIYQIAEAAAAAhhAgAQAAAACGECABAAAAAIb4eLoAeF5YaJinSwAAABfB/9UAigsCZCnndDqV0CvB02UAAIBC5Npz5XA4PV0GgFKOAFnKmUwmpaefkd3u8HQpuEosFrMCA/3pqxeit96Jvnqnouirw+EkQALwOAIkZLc7lJvLhxZvQ1+9F731TvTVO9FXAN6Gh+gAAAAAAAwhQAIAAAAADCFAAgAAAAAMIUACAAAAAAwhQAIAAAAADOEprJDFwu8RvEleP+mr96G33om+eh++agOANyNAlnJOp1OBgf6eLgNFgL56L3rrneir98i15yoz46ynywCAIkGALOVMJpP6LO2jXWm7PF0KAAAlXlhomBJ6JchsPufpUgCgSBAgoV1pu5SSmuLpMgAAAAAUc9xwAQAAAAAwhAAJAAAAADCEAAkAAAAAMIQACQAAAAAwhAAJAAAAADCEAAkAAAAAMIQACQAAAAAwhAAJAAAAADCkVATITz/9VHfddZeioqIUGRmprl27auLEifrrr78uaZz4+HjZbLYiqXHTpk2yWq3asWNHkYwPAAAAAFfKx9MFFLW5c+dq2rRpGjhwoMaMGSOn06k9e/ZoxYoVOnbsmEJCQjxdIgAAAACUCF4fIBctWqSePXtq3Lhxrmlt27bV/fffL4fD4cHKAAAAAKBk8fpLWNPT01WlSpUC55nN/7/7DodDs2bNUlxcnBo1aqQuXbrogw8+uOjYWVlZmjx5sjp37qwmTZooLi5OTz31lDIyMtyWi4uL0+TJk5WQkKD27dsrKipKI0eO1PHjxy86/oYNG9SkSRPNmDHDNW3p0qW6/fbbFR4ertatW+vVV1+V3W4v7DAAAAAAwBXz+jOQDRs21AcffKCaNWuqXbt2Cg0NLXC5qVOn6p133tGIESNks9m0bt06Pf3008rNzVXfvn0LXCc7O1t2u12PPPKIgoODdeTIEc2ePVsjR47UokWL3Jb96quv9Pvvv+upp57SiRMnNGXKFD3zzDN69dVXCxz7888/12OPPaaHH35YQ4YMkSTNnz9fL730kgYMGKBx48Zp7969rgA5duzYKzhKAAAAAFA4rw+QTz/9tEaPHq0nnnhCklSzZk21b99eAwcOVM2aNSVJx48f17vvvqshQ4bowQcflCS1atVKJ06c0MyZM3XvvffKYrHkGzs4OFiTJk1yvc7NzVXNmjV133336bffflOdOnVc85xOp9544w35+flJkg4dOqQ5c+bI4XC4nQmVpOXLl+uJJ57QxIkTde+990qSMjMzNWPGDN1///169NFHJUktW7aUr6+vXnjhBQ0ZMkRBQUFX67ABAIArYDabJEkWi9df7FWq5PWTvnofemuc1wfIm2++WYmJifruu+/07bffasuWLVq0aJGWLl2qhIQEhYWFafv27Tp37py6dOnitm7Xrl2VmJio/fv3q27dugWOv3z5ci1YsEC///67srKyXNP379/vFiCjo6Nd4VGS6tatq3Pnzumvv/5yOyu6ZMkSLVu2TM8++6x69Ojhmp6SkqKsrCx16dJFubm5ruktWrRQdna29uzZo2bNml32cQIAAFdPQEBZSVJgoL+HK0FRoK/ei94WzusDpCT5+fmpbdu2atu2rSTpm2++0bBhwzRz5ky9/vrrOnXqlCSpcuXKbuvlvT558mSB437xxRf6z3/+o7vvvluPPPKIKlWqpLS0NI0aNUo5OTluywYGBuarSVK+5T7//HNdd911ateundv0EydOSJJ69uxZYC1HjhwpcDoAALj2MjOzFRBQVunpZ2S389A+b2GxmBUY6E9fvRC9PR+ejZyBLRUB8p9at26t+vXra+/evZKkSpUqSZL++usvVa1a1bXcn3/+6Tb/n1avXq2wsDBNnjzZNW3z5s1XVNuLL77ouiR14cKFCggIkCRVrFhRkvT666+rWrVq+dbLuxwXAAB4nsPhlCTZ7Q7l5pbOD6PejL56L3pbOK+/yDcvBP5ddna2jhw54jrDGB4eLl9fX61evdptuc8++0whISGqXbt2gWNnZ2fL19fXbdqKFSuuqN6QkBAtXLhQp06d0v333++6LNZms8nf31+pqakKDw/P94f7HwEAAAAUNa8/A3n77berffv2atWqlapUqaKjR4/q3Xff1YkTJzRgwABJ5x+G07dvX82bN09+fn6KiIjQ+vXrlZiYqCeffLLAB+hI5+8/nDx5smbOnCmbzab169fru+++u+Kaq1atqgULFqhv374aMWKE3nzzTQUGBmrMmDF66aWXlJqaqmbNmslisejAgQNau3at4uPj5e/PNdsAAAAAio7XB8jRo0fr66+/1gsvvKDjx48rKChIVqtVCxYsUPPmzV3L/fvf/1aFChX00Ucfafbs2apRo4YmTZqke+6554Jj33PPPTp48KDeffddzZs3T61atdK0adP0r3/964rrrlmzphYuXKg+ffpo9OjRmjlzpgYPHqyqVatq/vz5evfdd+Xj46NatWqpXbt2+c6EAgAAAMDVZnI6nU5PFwHPipwTqZTUFE+XAQBAiWerZlPysGSlp59RYKC/Tpw4zf1UXsTHx6ygoPL01QvRWyk4uLyhh+h4/T2QAAAAAICrgwAJAAAAADCEAAkAAAAAMIQACQAAAAAwhAAJAAAAADCEAAkAAAAAMIQACQAAAAAwhAAJAAAAADCEAAkAAAAAMMTH0wXA88JCwzxdAgAAXoH/UwF4OwJkKed0OpXQK8HTZQAA4DVy7blyOJyeLgMAigQBspQzmUxKTz8ju93h6VJwlVgsZgUG+tNXL0RvvRN99T4Oh1Nms8nTZQBAkSBAQna7Q7m5fGjxNvTVe9Fb70RfvQsBEoC34iE6AAAAAABDCJAAAAAAAEMIkAAAAAAAQwiQAAAAAABDeIgOZLHwewRvktdP+up96K13oq8li8Ph5Cs6AJRqBMhSzul0KjDQ39NloAjQV+9Fb70TfS0Zcu25OnUymxAJoNQiQJZyJpNJfZb20a60XZ4uBQCAYi0sNEwJvRJkNpsIkABKLQIktCttl1JSUzxdBgAAAIBijhsuAAAAAACGECABAAAAAIYQIAEAAAAAhhAgAQAAAACGECABAAAAAIYQIAEAAAAAhhAgAQAAAACGECABAAAAAIYQIAEAAAAAhnhNgIyPj5fNZjO07IIFC2S1WjVhwoQC58fFxWny5MlXszwAAAAAKPG8JkBeik8//VSS9MUXX+js2bMergYAAAAASoZSFyB/++03/fTTT2rRooXS09O1bt06j9aTnZ3t0e0DAAAAgFGlLkAmJibKZDJp8uTJqly5slasWHHR5ZcuXaoGDRrozz//dJt+8uRJNWrUSB988IEkKSUlRcOHD1erVq0UERGh7t27a/ny5W7rbNq0SVarVevWrdOYMWMUGRmphx56SJKUnp6u//73v2rVqpUaNWqkXr166dtvv823bkF/Nm3adBWODAAAAABcnI+nC7jWEhMT1bRpU11//fXq2rWrFi9erIyMDFWoUKHA5Tt16qSnn35aq1evVt++fV3TP//8c0lSly5dJEmHDx9WZGSk7r33Xvn5+Sk5OVlPPPGEnE6nevbs6Tbmk08+qTvuuEMzZ86U2WzW2bNnNWjQIP311196+OGHVbVqVX366acaNmyYli5dKqvVqoYNG2rx4sVu47z55pvauHGjrrvuuqt5iAAAAACgQKUqQG7fvl379+/XoEGDJEndunXTokWLtGbNGt11110FrlOhQgW1bdtWiYmJbgEyMTFRLVu2VKVKlSRJt912m2ue0+lUdHS0jh49qsWLF+cLkHFxcXr88cddrz/++GPt3r1bn3zyierVqydJat26tX7//XfNmjVL06dPV0BAgCIiIlzrfPbZZ/rqq680depU1apV64qOCwAAMM5iKfwCrrxljCyLkoO+ei96a1ypCpCJiYny9fV1nTWMiIjQ9ddfrxUrVlwwQErnw+Ejjzyiw4cPq3r16jp27Ji2bNmiF1980bXMqVOnFB8fr7Vr1+ro0aOy2+2S5AqYf9euXTu31xs3btTNN9+s2rVrKzc31zW9RYsWrgf+/N3u3bs1fvx4DRw4UHfcccelHAIAAHCFAgP9i2RZlBz01XvR28KVmgDpcDi0atUqNWvWTGazWenp6ZKkDh066J133tHRo0dVtWrVAtdt3769/P39tXLlSj3wwAP67LPPVKZMGXXs2NG1zLhx45SSkqJRo0apXr16CggI0Pvvv6/PPvss33ghISFur0+cOKGdO3eqYcOG+Za1WCxur48fP66RI0fKZrO5ncUEAADXRnr6GdntjosuY7GYFRjob2hZlBz01XvR2/Ph2cgZ2FITIL///nulpaUpLS1N0dHR+eavWrXKdWnrP5UtW1YdO3bUqlWr9MADD2jVqlVq3769ypUrJ0nKycnRunXrNG7cOPXr18+13nvvvVfgeCaTye11xYoVZbVa9dxzz110H86dO6cxY8bIZDLp1VdfzRcuAQBA0bPbHcrNNfYB81KWRclBX70XvS1cqQmQK1asULly5TRr1iyZze7J+vnnn9eKFSsuGCCl8/dLDh06VN988422bdumBx54wDXv7Nmzcjgc8vX1dU3LzMzUV199Zai2Fi1aaP369apSpcoFz4JK0jPPPKOffvpJ77//foGXxgIAAABAUfLaANmpUydVr15dCxcuVE5Ojr744gvdcsstio2NzbfsnXfeqeeee0779u3TjTfeWOB4LVq0UKVKlTRhwgQFBgaqTZs2rnkVKlRQeHi45s6dq+DgYPn4+OjNN99UQECAjh8/XmitPXr00AcffKD+/ftr8ODBql27tjIyMrRz506dO3dOjz32mBITE7V48WINHjxY2dnZ2rZtm2v9vEtmAQAAAKAoec1jhrKzs+Xn5+d6bbfb5XCcP/28bt06ZWRkqEePHgWu261bN/n6+l70OyF9fX3VuXNnHTt2TLfccovbtiRp2rRpqlWrlsaNG6dnn31WnTt3vuD2/snPz0/vvPOO2rVrp9mzZ2vIkCH673//qx9//FFRUVGSpN9++02S9Pbbb+vuu+92+/PTTz8Z2g4AAAAAXAmT0+l0erqIq2H06NE6fPiwli5d6ulSSpzIOZFKSU3xdBkAABRrtmo2JQ9L1okTpwu9R8rHx6ygoPKGlkXJQV+9F72VgoPLl46H6OzatUubN2/WunXr9OCDD3q6HAAAAADwWiU+QE6YMEGnTp3SoEGDNGTIEE+XAwAAAABeq8QHyGXLlnm6BAAAAAAoFbzmIToAAAAAgKJFgAQAAAAAGEKABAAAAAAYQoAEAAAAABhCgAQAAAAAGEKABAAAAAAYUuK/xgNXLiw0zNMlAABQ7PH/JQAQIEs9p9OphF4Jni4DAIASIdeeK4fD6ekyAMBjCJClnMlkUnr6GdntDk+XgqvEYjErMNCfvnoheuud6GvJ4nA4CZAASjUCJGS3O5Sby4cWb0NfvRe99U70FQBQEvAQHQAAAACAIQRIAAAAAIAhBEgAAAAAgCEESAAAAACAITxEB7JY+D2CN8nrJ331PvTWO9FXz+BpqgBweQiQpZzT6VRgoL+ny0ARoK/ei956J/p6beXac3XqZDYhEgAuEQGylDOZTOqztI92pe3ydCkAAFwTYaFhSuiVILPZRIAEgEtEgIR2pe1SSmqKp8sAAAAAUMxxwwUAAAAAwBACJAAAAADAEAIkAAAAAMAQAiQAAAAAwBACJAAAAADAEAIkAAAAAMAQAiQAAAAAwBACJAAAAADAkGIVIOPj42Wz2S55vbFjx6pZs2ZKSEjQsmXLNHHixKtWk9Vqdf1p1KiROnfurFdeeUVZWVlXPPaXX34pq9WqgwcPXoVKAQAAAKBo+Xi6gCt1/Phxffvtt5o8ebLmzp2rAwcO6I033riq2+jXr5+6deumnJwc/e9//9PcuXN18OBBvfLKK1d1OwAAAABQnJX4ABkcHKzvv/9ektSlS5ci2cZ1112niIgISVJMTIzS0tL08ccf64knnlBwcHCRbDNPdna2ypYtW6TbAAAAAAAjitUlrP908uRJjR8/XjExMWrcuLHuuecebdmyxW2ZdevWadCgQYqNjVVkZKR69+6tDRs25Bvr559/1pAhQxQREaGoqCiNGTNGhw8fvqy6GjVqJEmuS09TU1M1duxYV519+vTRjz/+6LbOuXPn9Nxzz6lZs2aKiorShAkTdPr0abdlDh48KKvVqqVLl+qJJ55QTEyMevfubfhYAAAAAEBRKrYB0m6364EHHtDXX3+tsWPHavr06SpXrpwGDRrkFs4OHjyo9u3ba+rUqYqPj1dkZKSGDh2qTZs2uZY5cuSI+vbtqxMnTuill17SpEmT9NNPP6lv377KzMy85NrygmPVqlV16tQp3Xfffdq9e7eefPJJxcfHy9/fXwMGDNBff/3lWueVV17R+++/ryFDhui1116Tw+HQtGnTChz/lVdekdPp1LRp0/T4448bPhYAAAAAUJSK7SWs69at0/bt2/XWW2+pdevWkqRWrVrplltu0Zw5cxQfHy9J6tu3r2sdh8OhmJgY/frrr1qyZIliYmIkSQsWLFBubq7efvttVapUSZIUFham2267TcuWLVO/fv0uWovD4VBubq5ycnL03Xff6f3335fNZlPVqlU1Y8YMpaen68MPP1RISIgkKTY2Vp07d9a8efP073//WydPntR7772nBx54QMOGDZMktW7dWn379tXRo0fzba9+/fp67rnnXK/Xrl1r6FgAAADjLJai+z163thFuQ1ce/TVe9Fb44ptgNy6dasCAgJcgUmSfH191alTJyUmJrqmpaam6tVXX9X//vc/paWlyel0SpIaNmzoNlZMTIwrPEpS3bp1Vb9+fSUlJRUaIF9++WW9/PLLrtctW7bU5MmTJUkbN25UTEyMKlasqNzcXEmS2WxWdHS0duzYIUn65ZdflJ2drU6dOrmNe8sttxR4GWq7du0u61gAAADjAgP9vWIbuPboq/eit4UrtgEyPT3ddUbv7ypXrqxTp05JOn9mcMSIEcrIyNCYMWN0ww03yN/fXzNmzNCRI0fcxgoLC8s3VkhIiGusi+nfv7/uuOMO+fn5qUaNGgoICHDNO3HihLZt2+YWWPPUqlVLkpSWluba3j/3pSD/XM7IsQAAAJcmPf2M7HZHkYxtsZgVGOhfpNvAtUdfvRe9PR+ejZyBLbYBsmLFim73EOb5888/VbFiRUnS77//rp07d2rmzJnq2LGja5ns7GxDY/3111+qXbt2obVUq1ZN4eHhF6yzdevWeuihh/LN8/PzkySFhoa6tle1alW3fSmIyWQyVP/fjwUAALg0drtDublF+0HxWmwD1x599V70tnDF9iLfqKgoZWZm6ttvv3VNy83N1ZdffqmoqChJUk5OjqTzl3PmOXTokFJSUvKN9f3337udrdu3b59+/vln11iXq0WLFtq7d6/q1q2r8PBwtz9Wq1WSdPPNN6ts2bL64osv3Nb9/PPPDW3DyLEAAAAAgKJWbM9AtmvXTo0bN9bjjz+uxx57TJUrV9aiRYt07NgxzZgxQ5J04403qlq1apo2bZocDoeysrI0Y8YMValSxW2sgQMHaunSpRo8eLBGjBihnJwcvfbaa7ruuuvUs2fPK6pz4MCBWrFihfr27av+/furevXqOn78uH744QdVrVpVAwcOVKVKlXTPPfdo7ty5Klu2rBo0aKCVK1fqjz/+uGrHAgAAAACKWrE6A5mdne267NNisejNN99Uu3bt9NJLL+nBBx/U6dOn9fbbb7u+h9HPz0/x8fHy8/PTQw89pBkzZmjEiBFq1qyZ27jXXXedFi1apIoVK2rs2LF68sknVb9+fS1atMjtfsbLERQUpMWLFyssLEwvv/yyBg8erClTpujQoUNq3Lixa7nHHntM99xzj9566y09/PDDrmlGGDkWAAAAAFDUTM68x5YWA6NHj9bhw4e1dOlST5dSqkTOiVRKakrhCwIA4AVs1WxKHpasEydOF9m9Tj4+ZgUFlS/SbeDao6/ei95KwcHlS85DdHbt2qXNmzdr3bp1evDBBz1dDgAAAACgAMUiQE6YMEGnTp3SoEGDNGTIEE+XAwAAAAAoQLEIkMuWLfN0CQAAAACAQhSrh+gAAAAAAIovAiQAAAAAwBACJAAAAADAEAIkAAAAAMAQAiQAAAAAwBACJAAAAADAEAIkAAAAAMCQYvE9kPCssNAwT5cAAMA1w/97AHD5CJClnNPpVEKvBE+XAQDANZVrz5XD4fR0GQBQ4hAgSzmTyaT09DOy2x2eLgVXicViVmCgP331QvTWO9FXz3A4nARIALgMBEjIbncoN5cPLd6Gvnoveuud6CsAoCTgIToAAAAAAEMIkAAAAAAAQwiQAAAAAABDCJAAAAAAAEN4iA5ksfB7BG+S10/66n3orXcqzn3lSaUAgH8iQJZyTqdTgYH+ni4DRYC+ei96652KY19z7bk6dTKbEAkAcCFAlnImk0l9lvbRrrRdni4FAFCMhIWGKaFXgsxmEwESAOBCgIR2pe1SSmqKp8sAAAAAUMwVvxsuAAAAAADFEgESAAAAAGAIARIAAAAAYAgBEgAAAABgCAESAAAAAGAIARIAAAAAYAgBEgAAAABgCAESAAAAAGDIZQfItWvXavDgwWrWrJkaNWqkuLg4PfXUU/rtt98MjzFu3Dh169btcku4LJs2bdLs2bMNLx8XF6fJkycXYUUF69evn4YNG3bNtwsAAAAAF3JZAfLll1/WyJEjFRAQoGeeeUbz58/XqFGj9Ouvv+qRRx652jVeVZs3b9acOXM8XUahnn76af3nP//xdBkAAAAA4OJzqSusX79ec+fO1ciRI/XQQw+5pkdHR+vOO+/U119/fVULvFrOnj0rH59L3l2PqVevnqdLAAAAAAA3l3wG8u2331blypU1cuTIAue3b9/etdydd96pqKgoxcbGatiwYRe9vPXgwYOyWq1avXp1vnm9evXSo48+6nqdmpqqsWPHKiYmRo0bN1afPn30448/uq2Td+np3Llz1b59ezVu3FjPPvusXn/9dWVlZclqtcpqtapfv36XegjyWbdunXr37q3GjRurefPmevrpp5WVleWa37FjR7322muu12vWrJHVatWLL77omvbNN9/IarXq+PHjkvJfwhofHy+bzaaff/5Z9957r5o0aaJu3brpm2++ueL6AQAAAMCISzoll5ubq+TkZN1yyy3y9fW96LKpqanq27evqlevrszMTH3wwQe65557tGbNGlWqVCnf8jVr1lRERIRWrVqlLl26uKbv379fP/30k0aPHi1JOnXqlO677z6VK1dOTz75pCpUqKBFixZpwIAB+vzzzxUSEuJa9/PPP9cNN9ygiRMnymw2KywsTDk5OUpMTNTChQslSQEBAZdyCPJZvXq1HnnkEfXq1UsPPvig0tLSNG3aNKWnp+vVV1+VdP7s7NatW13rbNmyRWXKlMk37cYbb1RwcPAFt3Xu3DmN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EgAAAABgCAESAAAAAGAIARIAAAAAYAgBshTau3evBg0apIiICLVs2VJTp07V2bNnPV0WrtDSpUtltVrz/Xn55Zc9XRouwe+//66nnnpK3bt3V4MGDdStW7cCl/vwww/VuXNnhYeH64477tDXX399jSvFpTDS1379+hX4Ht67d68HKoYRn332mUaMGKE2bdooIiJC3bt310cffSSn0+m2HO/XksVIX3m/ljzr169X37591bx5czVq1EgdOnTQlClTlJGR4bbcV199pTvuuEPh4eHq3LmzPv74Yw9VXHz5eLoAXFunTp3SgAEDVLt2bcXHx+vo0aN64YUXlJ2draeeesrT5eEqeOutt1ShQgXX66pVq3qwGlyqPXv2aP369WrSpIkcDke+D6KStHLlSj355JMaPny4mjdvrlWrVmn06NFKSEhQRETEtS8ahTLSV0mKjIzUf/7zH7dpNWvWvBYl4jIsWLBANWrU0Lhx4xQUFKT//e9/evLJJ5WamqrRo0dL4v1aEhnpq8T7taQ5efKkGjdurH79+qlSpUras2eP4uPjtWfPHr399tuSpK1bt2r06NG66667NGHCBH3//feaOHGiypcvry5dunh4D4oPk/NC/4vBK82ZM0ezZ8/W119/rUqVKkmSFi9erEmTJunrr78mbJRgS5cu1fjx4/Xdd98pODjY0+XgMjkcDpnN5y8OGTdunH788UclJia6LdO5c2c1atRI06ZNc0275557VKFCBc2dO/ea1gtjjPS1X79+KleunObMmeOJEnEZjh8/nu/f2yeffFKrVq3Sli1bZDabeb+WQEb6yvvVOyxZskRPPvmkNmzYoKpVq2rIkCE6ffq0PvjgA9cyjz32mHbt2qVVq1Z5sNLihUtYS5kNGzYoNjbWFR4lqWvXrnI4HNq4caPnCgMgSa6QcSEHDhzQ/v371bVrV7fpt956q7777jsuRy+mCusrSqaCflkXFhamzMxMZWVl8X4toQrrK7xH3ufhc+fO6ezZs9q0aVO+M4233nqr9u7dq4MHD3qgwuKJ/9FKmX379unGG290mxYYGKjQ0FDt27fPQ1XhaurWrZvCwsLUoUMHzZkzR3a73dMl4SrKe5/WqVPHbXrdunV17tw5HThwwBNl4SrZvHmzIiIiFB4err59+2rLli2eLgmXKCkpSVWrVlVAQADvVy/y977m4f1aMtntduXk5Oinn37SzJkzFRcXp5o1a+qPP/7QuXPn8n1Orlu3riTxOflvuAeylElPT1dgYGC+6RUrVtSpU6c8UBGultDQUD344INq0qSJTCaTvvrqK7322ms6evQo97d6kbz36T/fx3mveR+XXNHR0erevbtq166tY8eOad68eRo0aJAWLVokm83m6fJgwNatW7Vq1SrXfXG8X73DP/sq8X4tydq3b6+jR49Kklq3bu26vJz3q3EESMBLtG7dWq1bt3a9btWqlcqUKaOFCxdq+PDhqlKligerA1CYMWPGuL1u166dunXrplmzZnGvXAmQmpqqRx55RDExMerfv7+ny8FVcqG+8n4tud58802dOXNGv/76q9544w0NHz5c8+fP93RZJQqXsJYygYGB+R5XLJ3/rUrFihU9UBGKUteuXWW327Vr1y5Pl4KrJO99+s/3cXp6utt8lHzlypVT27Zt9dNPP3m6FBQiPT1dDzzwgCpVqqT4+HjXPa+8X0u2C/W1ILxfS4769evLZrOpd+/emjVrljZt2qQvvviC9+slIECWMjfeeGO+a7gzMjKUlpaW75pvAMVP3vv0n+/jffv2ydfXV9dff70nygJKrezsbA0bNkwZGRn5vkaJ92vJdbG+wntYrVb5+vrqjz/+UK1ateTr61vg+1USn5P/hgBZyrRp00b/+9//XL9NkaTVq1fLbDarZcuWHqwMRWHVqlWyWCxq0KCBp0vBVXL99derdu3aWr16tdv0VatWKTY2Vn5+fh6qDFdbVlaW1q1bp/DwcE+XggvIzc3Vww8/rH379umtt97K91VYvF9LpsL6WhDeryXTDz/8oHPnzqlmzZry8/NTTEyM1qxZ47bMqlWrVLduXb7j82+4B7KUueeee7Ro0SKNGjVKw4YN09GjRzV16lTdc889fAdkCTdkyBDFxMTIarVKktauXaslS5aof//+Cg0N9XB1MOrMmTNav369JOnQoUPKzMx0ffhs1qyZgoOD9eCDD2rs2LGqVauWYmJitGrVKm3fvl3vvvuuJ0vHRRTW17wPqp06dVKNGjV07NgxzZ8/X2lpaZo+fbonS8dF5H2H8rhx45SZmalt27a55jVo0EB+fn68X0ugwvq6fft23q8l0OjRo9WoUSNZrVaVLVtWu3fv1rx582S1WtWxY0dJ0ogRI9S/f3/997//VdeuXbVp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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gw17adjustments.set_index('team', inplace=True)\n",
        "\n",
        "# Create a color map\n",
        "cmap = sns.diverging_palette(240, 10, as_cmap=True)\n",
        "\n",
        "# Plot the heatmap\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(gw17adjustments, annot=True, cmap=cmap, center=0)\n",
        "plt.title('Color-Coded Table of GW Adjustments')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "X2DQdb15YZfr",
        "outputId": "5f3d0cc2-9267-4b37-9aa7-e0458af0e55d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 549
        }
      },
      "execution_count": 75,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "scores_columns = ['gw17adjustment', 'gw18adjustment', 'gw19adjustment', 'gw20adjustment', 'gw21adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments17)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "z7T7SgQSYyL8",
        "outputId": "546848fc-8be7-4028-ac6a-86e9ee333e55",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 262
        }
      },
      "execution_count": 79,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-79-990d626db9cd>\u001b[0m in \u001b[0;36m<cell line: 5>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mscores_columns\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m'gw17adjustment'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'gw18adjustment'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'gw19adjustment'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'gw20adjustment'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'gw21adjustment'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mbottom\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgwadjustments17\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mscore_col\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mscores_columns\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments17' is not defined"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 0 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    plt.bar(gwadjustments26.index, gwadjustments26[score_col], bottom=bottom, label=score_col)\n",
        "    bottom += gwadjustments26[score_col]\n",
        "\n",
        "plt.xlabel('Teams')\n",
        "plt.ylabel('Score Adjustments')\n",
        "plt.title('Stacked GW Adjustments for Different Teams')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "XxE_pa9xZB8N",
        "outputId": "c1e88666-80d1-489d-bb4d-e92c6d87317f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 262
        }
      },
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-80-af3019cce511>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# Calculate the total score adjustments for each team\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Total'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# Sort the DataFrame by the 'Total' column in descending order\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments26' is not defined"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 0 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assuming you have already loaded the DataFrame named 'gwadjustments26'\n",
        "\n",
        "# Set the index column\n",
        "gwadjustments26.set_index('team', inplace=True)\n",
        "\n",
        "# Create a custom color map\n",
        "cmap = sns.diverging_palette(240, 10, n=21, as_cmap=True)\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "# Define color thresholds\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "\n",
        "# Normalize values for coloring\n",
        "normalized_values = (gwadjustments26 - 0.9) / (2.0 - 0.9)\n",
        "\n",
        "# Apply color map and thresholds\n",
        "colored_values = pd.cut(normalized_values, bins=color_thresholds, labels=colors)\n",
        "\n",
        "# Plot the heatmap with customized color coding\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(normalized_values, annot=True, cmap=cmap, center=1, cbar=False, fmt=\".2f\", linewidths=0.5, linecolor='white')\n",
        "plt.title('Custom Color-Coded Table of GW Adjustments')\n",
        "plt.xticks(rotation=45)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "_YnxO1yMZekH",
        "outputId": "61c6da45-4351-4664-aec4-8d04a544c656",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        }
      },
      "execution_count": 81,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-81-6a2b296170b4>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# Set the index column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'team'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# Create a custom color map\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments26' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 8))\n",
        "\n",
        "# Calculate the total score adjustments for each team\n",
        "gwadjustments26['Total'] = gwadjustments26.sum(axis=1)\n",
        "\n",
        "# Sort the DataFrame by the 'Total' column in descending order\n",
        "gwadjustments26 = gwadjustments26.sort_values(by='Total', ascending=False)\n",
        "\n",
        "# Get the scores columns\n",
        "scores_columns = ['gw2adjustment', 'gw3adjustment', 'gw4adjustment', 'gw5adjustment', 'gw6adjustment']\n",
        "\n",
        "# Define color thresholds and corresponding colors\n",
        "color_thresholds = [0.9, 1.1, 2.0]\n",
        "colors = ['red', 'orange', 'green']\n",
        "\n",
        "bottom = [0] * len(gwadjustments26)\n",
        "\n",
        "for score_col in scores_columns:\n",
        "    adjusted_values = gwadjustments26[score_col]\n",
        "\n",
        "    # Create a color list based on thresholds\n",
        "    colors_for_col = [colors[-1] if val is None else\n",
        "                      colors[0] if val < color_thresholds[0] else\n",
        "                      colors[1] if val <= color_thresholds[1] else\n",
        "                      colors[2]\n",
        "                      for val in adjusted_values]\n",
        "\n",
        "    for i, (val, color) in enumerate(zip(adjusted_values, colors_for_col)):\n",
        "        plt.barh(gwadjustments26.index[i], val, color=color, edgecolor='white')\n",
        "\n",
        "    bottom += adjusted_values\n",
        "\n",
        "plt.xlabel('Score Adjustments')\n",
        "plt.ylabel('Teams')\n",
        "plt.title('Horizontally Stacked GW Adjustments for Different Teams')\n",
        "plt.legend(labels=scores_columns)\n",
        "plt.gca().invert_yaxis()  # Invert y-axis to have higher values at the top\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "5agSlfUragM2",
        "outputId": "baddd2a3-db8c-4eb1-e961-4ba8f13ceba2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 262
        }
      },
      "execution_count": 82,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-82-2d5ab370e1c4>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# Calculate the total score adjustments for each team\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Total'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgwadjustments26\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# Sort the DataFrame by the 'Total' column in descending order\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'gwadjustments26' is not defined"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 0 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import requests\n",
        "import pandas as pd\n",
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map.get(team_id, None)  # Use get to handle missing team IDs\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map.get(position, None)  # Use get to handle missing positions\n",
        "\n",
        "def main():\n",
        "    team_entry_id = 6388102\n",
        "    url = f'https://fantasy.premierleague.com/api/entry/{team_entry_id}/transfers'\n",
        "\n",
        "    try:\n",
        "        response = requests.get(url)\n",
        "        response.raise_for_status()  # Check for any HTTP errors\n",
        "\n",
        "        transfers_data = response.json()\n",
        "\n",
        "        # Get player names from the provided API\n",
        "        player_ids_in = [transfer['element_in'] for transfer in transfers_data]\n",
        "        player_ids_out = [transfer.get('element_out', None) for transfer in transfers_data]\n",
        "\n",
        "        all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "        players = all_data[\"elements\"]\n",
        "\n",
        "        # Build a dictionary of player names for players transferred in\n",
        "        player_names_in = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_in:\n",
        "                player_names_in[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Build a dictionary of player names for players transferred out\n",
        "        player_names_out = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_out:\n",
        "                player_names_out[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Replace player IDs with names and add additional data\n",
        "        transfer_data_with_info = []\n",
        "        for transfer in transfers_data:\n",
        "            player_in_name = player_names_in.get(transfer['element_in'], 'Unknown Player')\n",
        "            player_out_name = player_names_out.get(transfer['element_out'], 'Unknown Player') if transfer['element_out'] is not None else 'N/A'\n",
        "            transfer_info = {\n",
        "                'week': transfer['event'],\n",
        "                'player_in': player_in_name,\n",
        "                'player_out': player_out_name,\n",
        "                'cost_in': transfer['element_in_cost'] / 10,  # Convert to actual cost\n",
        "                'cost_out': transfer.get('element_out_cost', 0) / 10  # Convert to actual cost\n",
        "            }\n",
        "            transfer_data_with_info.append(transfer_info)\n",
        "\n",
        "        # Create a DataFrame\n",
        "        df = pd.DataFrame(transfer_data_with_info)\n",
        "\n",
        "        print(\"Transfers made by team entry\", team_entry_id)\n",
        "        print(df)\n",
        "\n",
        "    except requests.exceptions.HTTPError as errh:\n",
        "        print(\"HTTP Error:\", errh)\n",
        "    except requests.exceptions.ConnectionError as errc:\n",
        "        print(\"Error connecting:\", errc)\n",
        "    except requests.exceptions.Timeout as errt:\n",
        "        print(\"Timeout error:\", errt)\n",
        "    except requests.exceptions.RequestException as err:\n",
        "        print(\"An error occurred:\", err)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "id": "syMCbGo_mDoe",
        "outputId": "954cc6f7-b7f3-4340-bf8a-2d37fe66931b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 83,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Transfers made by team entry 6388102\n",
            "    week                           player_in                    player_out  \\\n",
            "0     16                         Cole Palmer                  Bryan Mbeumo   \n",
            "1     15               Konstantinos Tsimikas                    Matty Cash   \n",
            "2     14  Bernardo Veiga de Carvalho e Silva                  Eberechi Eze   \n",
            "3     13                  Morgan Gibbs-White            Dominik Szoboszlai   \n",
            "4     13                        Eberechi Eze                   Jordan Ayew   \n",
            "5     12        Gabriel dos Santos Magalhães                      Dan Burn   \n",
            "6     10                         Bukayo Saka                 Son Heung-min   \n",
            "7     10                  Dominik Szoboszlai            Morgan Gibbs-White   \n",
            "8      8                       Ollie Watkins                Julián Álvarez   \n",
            "9      8                        Divin Mubama                Carlton Morris   \n",
            "10     8                         Jordan Ayew               Marcus Rashford   \n",
            "11     8                  Morgan Gibbs-White        Bruno Borges Fernandes   \n",
            "12     8                       Mohamed Salah                  Eberechi Eze   \n",
            "13     8                       Son Heung-min                   Bukayo Saka   \n",
            "14     8                            Dan Burn                   Sven Botman   \n",
            "15     8                          Pau Torres                   Kyle Walker   \n",
            "16     8                          Matty Cash                  Ben Chilwell   \n",
            "17     8                    Timothy Castagne              Pervis Estupiñán   \n",
            "18     8                         Pedro Porro                 Ethan Pinnock   \n",
            "19     8                     Alphonse Areola                 Sam Johnstone   \n",
            "20     7                      Carlton Morris                 William Osula   \n",
            "21     6                        Eberechi Eze      Gabriel Martinelli Silva   \n",
            "22     5                      Julián Álvarez                 Ollie Watkins   \n",
            "23     5                         Kyle Walker                George Baldock   \n",
            "24     3                       Ethan Pinnock  Gabriel dos Santos Magalhães   \n",
            "25     3                        Ben Chilwell                   John Stones   \n",
            "\n",
            "    cost_in  cost_out  \n",
            "0       5.4       6.7  \n",
            "1       4.8       4.9  \n",
            "2       6.4       6.1  \n",
            "3       5.7       7.0  \n",
            "4       6.2       5.4  \n",
            "5       4.8       4.6  \n",
            "6       8.6       9.4  \n",
            "7       7.0       5.8  \n",
            "8       8.1       6.8  \n",
            "9       4.3       5.6  \n",
            "10      5.5       8.8  \n",
            "11      5.8       8.4  \n",
            "12     12.6       6.2  \n",
            "13      9.4       8.5  \n",
            "14      4.6       4.6  \n",
            "15      4.5       5.2  \n",
            "16      5.0       5.5  \n",
            "17      4.5       5.1  \n",
            "18      5.1       4.5  \n",
            "19      4.2       4.5  \n",
            "20      5.6       4.4  \n",
            "21      6.3       7.9  \n",
            "22      6.7       8.0  \n",
            "23      5.2       4.0  \n",
            "24      4.5       4.9  \n",
            "25      5.7       5.3  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import requests\n",
        "import pandas as pd\n",
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map.get(team_id, None)  # Use get to handle missing team IDs\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map.get(position, None)  # Use get to handle missing positions\n",
        "\n",
        "def main():\n",
        "    team_entry_id = 275269\n",
        "    url = f'https://fantasy.premierleague.com/api/entry/{team_entry_id}/transfers'\n",
        "\n",
        "    try:\n",
        "        response = requests.get(url)\n",
        "        response.raise_for_status()  # Check for any HTTP errors\n",
        "\n",
        "        transfers_data = response.json()\n",
        "\n",
        "        # Get player names from the provided API\n",
        "        player_ids_in = [transfer['element_in'] for transfer in transfers_data]\n",
        "        player_ids_out = [transfer.get('element_out', None) for transfer in transfers_data]\n",
        "\n",
        "        all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "        players = all_data[\"elements\"]\n",
        "\n",
        "        # Build a dictionary of player names for players transferred in\n",
        "        player_names_in = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_in:\n",
        "                player_names_in[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Build a dictionary of player names for players transferred out\n",
        "        player_names_out = {}\n",
        "        for player in players:\n",
        "            if player['id'] in player_ids_out:\n",
        "                player_names_out[player['id']] = f\"{player['first_name']} {player['second_name']}\"\n",
        "\n",
        "        # Replace player IDs with names and add additional data\n",
        "        transfer_data_with_info = []\n",
        "        for transfer in transfers_data:\n",
        "            player_in_name = player_names_in.get(transfer['element_in'], 'Unknown Player')\n",
        "            player_out_name = player_names_out.get(transfer['element_out'], 'Unknown Player') if transfer['element_out'] is not None else 'N/A'\n",
        "            transfer_info = {\n",
        "                'week': transfer['event'],\n",
        "                'player_in': player_in_name,\n",
        "                'player_out': player_out_name,\n",
        "                'cost_in': transfer['element_in_cost'] / 10,  # Convert to actual cost\n",
        "                'cost_out': transfer.get('element_out_cost', 0) / 10  # Convert to actual cost\n",
        "            }\n",
        "            transfer_data_with_info.append(transfer_info)\n",
        "\n",
        "        # Create a DataFrame\n",
        "        df = pd.DataFrame(transfer_data_with_info)\n",
        "\n",
        "        print(\"Transfers made by team entry\", team_entry_id)\n",
        "        print(df)\n",
        "\n",
        "    except requests.exceptions.HTTPError as errh:\n",
        "        print(\"HTTP Error:\", errh)\n",
        "    except requests.exceptions.ConnectionError as errc:\n",
        "        print(\"Error connecting:\", errc)\n",
        "    except requests.exceptions.Timeout as errt:\n",
        "        print(\"Timeout error:\", errt)\n",
        "    except requests.exceptions.RequestException as err:\n",
        "        print(\"An error occurred:\", err)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "id": "NxkG0V2Eq5BY",
        "outputId": "c932997a-1b86-4a3d-decb-470c0edb5e2d",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 84,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Transfers made by team entry 275269\n",
            "    week                     player_in                    player_out  cost_in  \\\n",
            "0     16                   Cole Palmer                  Bryan Mbeumo      5.3   \n",
            "1     15     Ederson Santana de Moraes         Alisson Ramses Becker      5.5   \n",
            "2     14  Gabriel dos Santos Magalhães                      Dan Burn      4.9   \n",
            "3     12                  Eberechi Eze                James Maddison      6.1   \n",
            "4     11                Julián Álvarez               Dominic Solanke      7.2   \n",
            "5     11         Konstantinos Tsimikas                    Matty Cash      4.6   \n",
            "6     10                   Bukayo Saka        Bruno Borges Fernandes      8.6   \n",
            "7      8               Dominic Solanke                Carlton Morris      6.4   \n",
            "8      8        Bruno Borges Fernandes                  Jarrod Bowen      8.4   \n",
            "9      8           Oleksandr Zinchenko              Pervis Estupiñán      4.9   \n",
            "10     8         Alisson Ramses Becker               Thomas Kaminski      5.5   \n",
            "11     8                   Pedro Porro                 Alfie Doughty      5.0   \n",
            "12     8                James Maddison        Bruno Borges Fernandes      7.9   \n",
            "13     8                 Ollie Watkins                Erling Haaland      7.9   \n",
            "14     8                  Jarrod Bowen               Marcus Rashford      7.2   \n",
            "15     8                 Mohamed Salah                   Bukayo Saka     12.5   \n",
            "16     8               Kieran Trippier         Rúben Gato Alves Dias      6.7   \n",
            "17     8                      Dan Burn                    Rico Henry      4.5   \n",
            "18     8                    Matty Cash  Gabriel dos Santos Magalhães      4.8   \n",
            "19     8               Alphonse Areola               Jordan Pickford      4.2   \n",
            "20     7                 Alfie Doughty                  Ben Chilwell      4.4   \n",
            "21     7               Thomas Kaminski                   Matt Turner      4.5   \n",
            "22     5                Carlton Morris               Nicolas Jackson      5.5   \n",
            "23     5                 Son Heung-min        Richarlison de Andrade      9.1   \n",
            "24     3         Rúben Gato Alves Dias                     Luke Shaw      5.5   \n",
            "25     2                  Ben Chilwell                   Reece James      5.6   \n",
            "\n",
            "    cost_out  \n",
            "0        6.8  \n",
            "1        5.5  \n",
            "2        4.5  \n",
            "3        8.0  \n",
            "4        6.4  \n",
            "5        5.0  \n",
            "6        8.3  \n",
            "7        5.5  \n",
            "8        7.2  \n",
            "9        5.1  \n",
            "10       4.5  \n",
            "11       4.4  \n",
            "12       8.4  \n",
            "13      14.0  \n",
            "14       8.9  \n",
            "15       8.6  \n",
            "16       5.5  \n",
            "17       4.5  \n",
            "18       4.7  \n",
            "19       4.4  \n",
            "20       5.6  \n",
            "21       4.0  \n",
            "22       7.1  \n",
            "23       6.8  \n",
            "24       5.5  \n",
            "25       5.5  \n"
          ]
        }
      ]
    }
  ]
}