{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPtZB5t7WU8f2H5jZDQ/il1",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/huricane85/FPL-API-Fixture-modeler/blob/main/FPL_Model_v1.2%20API%20data%20only%2022.08.2023\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b6S0KMo-gSGQ",
        "outputId": "1ded6643-d39e-479c-ec36-9f1cb4c2b68e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'UnderstatScraper'...\n",
            "remote: Enumerating objects: 34, done.\u001b[K\n",
            "remote: Counting objects: 100% (34/34), done.\u001b[K\n",
            "remote: Compressing objects: 100% (31/31), done.\u001b[K\n",
            "remote: Total 34 (delta 11), reused 25 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (34/34), 268.30 KiB | 5.96 MiB/s, done.\n",
            "Resolving deltas: 100% (11/11), done.\n"
          ]
        }
      ],
      "source": [
        "!git clone https://github.com/doughagey/UnderstatScraper"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#!/usr/bin/env python3\n",
        "# -*- coding: utf-8 -*-\n",
        "\"\"\"\n",
        "Created on Mar 1 17:50:36 2020\n",
        "@author: doug hagey\n",
        "\"\"\"\n",
        "\n",
        "import pandas as pd\n",
        "import requests\n",
        "\n",
        "def scrape_understat(payload):\n",
        "    #Build request using url, headers (mimicking what Firefox does normally)\n",
        "    #Works best with verify=True as you won't get the ssl errors. Payload is\n",
        "    #taylored for each request\n",
        "    url = 'https://understat.com/main/getPlayersStats/'\n",
        "    headers = {'content-type':'application/json; charset=utf-8',\n",
        "    'Host': 'understat.com',\n",
        "    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:73.0) Gecko/20100101 Firefox/73.0',\n",
        "    'Accept': 'application/json, text/javascript, */*; q=0.01',\n",
        "    'Accept-Encoding': 'gzip, deflate, br',\n",
        "    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n",
        "    'X-Requested-With': 'XMLHttpRequest',\n",
        "    'Content-Length': '310',\n",
        "    'Origin': 'https: // understat.com',\n",
        "    'Connection': 'keep - alive',\n",
        "    'Referer': 'https: // understat.com / league / EPL'\n",
        "    }\n",
        "    response = requests.post(url, data=payload, headers = headers, verify=True)\n",
        "    response_json = response.json()\n",
        "    inner_wrapper = response_json['response']\n",
        "    json_player_data = inner_wrapper['players']\n",
        "    return json_player_data\n",
        "\n",
        "def clean_df(player_df, weeks):\n",
        "    # Get rid of the columns that we don't care about\n",
        "    #player_df.drop(['yellow_cards','red_cards', 'xGChain','xGBuildup','games','time'], axis=1, inplace=True)\n",
        "    player_df  = player_df.rename(columns={'goals':'goals_'+weeks,'xG':'xG_'+weeks,'assists':'assists_'+weeks, 'xA':'xA_'+weeks, 'shots':'shots_'+weeks, 'key_passes':\n",
        "        'key_passes_'+weeks,'npg':'npg_'+weeks,'npxG':'npxG_'+weeks})\n",
        "    if weeks != '2wks':\n",
        "        player_df.drop(['position','team_title'], axis=1, inplace=True)\n",
        "    return(player_df)\n",
        "\n",
        "#Creprint('Getting data for last 2 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '2'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table,'1wks')\n",
        "\n",
        "\n",
        "print('Getting data for the whole season')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023'})\n",
        "season_table = pd.DataFrame(json_player_data)\n",
        "season_df = clean_df(season_table, 'season')\n",
        "\n",
        "print('Getting data for last 1 matches')\n",
        "json_player_data = scrape_understat({'league':'EPL', 'season':'2023', 'n_last_matches': '2'})\n",
        "one_game_table = pd.DataFrame(json_player_data)\n",
        "one_game_df = clean_df(one_game_table, '1wks')\n",
        "\n",
        "print('Merging Tables')\n",
        "EPL_player_df = pd.merge(one_game_df, season_df, on=['id','player_name'])\n",
        "EPL_player_df = pd.merge(EPL_player_df, one_game_df, on=['id','player_name'])\n",
        "\n",
        "\n",
        "print('Writing CSV File')\n",
        "EPL_player_df.to_csv('Understat_EPL_Player_Data_Combined 2021.csv', encoding='utf-8', index=False)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D7aK55NHgZOt",
        "outputId": "3c2b83ce-3f81-4a82-b94f-363a7a88a0e3"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Getting data for the whole season\n",
            "Getting data for last 1 matches\n",
            "Merging Tables\n",
            "Writing CSV File\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 565
        },
        "id": "n__CYp9pmkGz",
        "outputId": "44e46b95-125e-45e7-b4cd-c023b6e25e55"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id       player_name games_x time_x goals_1wks_x           xG_1wks_x  \\\n",
              "0     6049       Solly March       2    165            3  2.0221502780914307   \n",
              "1     6552      Bryan Mbeumo       2    180            3  2.9682201147079468   \n",
              "2     5232    Alexander Isak       2    148            2  1.1635656356811523   \n",
              "3     5786       Yoane Wissa       2    164            2  1.2056616991758347   \n",
              "4     7814     Taiwo Awoniyi       2     99            2  1.0606651902198792   \n",
              "..     ...               ...     ...    ...          ...                 ...   \n",
              "337  11730  Anis Ben Slimane       1      9            0                   0   \n",
              "338  11731      Andre Brooks       2     16            0                   0   \n",
              "339  11807       Ian Maatsen       1      2            0                   0   \n",
              "340  11810     Mason Burstow       1      1            0                   0   \n",
              "341  11926     Edson √Ålvarez       1      1            0                   0   \n",
              "\n",
              "    assists_1wks_x            xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0                0  0.10514960438013077            8                 3  ...   \n",
              "1                0  0.09496916830539703            6                 1  ...   \n",
              "2                0                    0            3                 0  ...   \n",
              "3                0  0.07477104663848877           10                 2  ...   \n",
              "4                0  0.07604995369911194            2                 2  ...   \n",
              "..             ...                  ...          ...               ...  ...   \n",
              "337              0                    0            0                 0  ...   \n",
              "338              0                    0            0                 0  ...   \n",
              "339              0                    0            0                 0  ...   \n",
              "340              0                    0            0                 0  ...   \n",
              "341              0                    0            0                 0  ...   \n",
              "\n",
              "    assists_1wks_y            xA_1wks_y shots_1wks_y key_passes_1wks_y  \\\n",
              "0                0  0.10514960438013077            8                 3   \n",
              "1                0  0.09496916830539703            6                 1   \n",
              "2                0                    0            3                 0   \n",
              "3                0  0.07477104663848877           10                 2   \n",
              "4                0  0.07604995369911194            2                 2   \n",
              "..             ...                  ...          ...               ...   \n",
              "337              0                    0            0                 0   \n",
              "338              0                    0            0                 0   \n",
              "339              0                    0            0                 0   \n",
              "340              0                    0            0                 0   \n",
              "341              0                    0            0                 0   \n",
              "\n",
              "    yellow_cards red_cards npg_1wks_y         npxG_1wks_y             xGChain  \\\n",
              "0              0         0          3  2.0221502780914307   2.436366558074951   \n",
              "1              0         0          1  1.4458823800086975  1.4458823800086975   \n",
              "2              0         0          2  1.1635656356811523  1.1712167114019394   \n",
              "3              0         0          2  1.2056616991758347  0.7587571889162064   \n",
              "4              0         0          2  1.0606651902198792  1.1367151141166687   \n",
              "..           ...       ...        ...                 ...                 ...   \n",
              "337            1         0          0                   0                   0   \n",
              "338            0         0          0                   0                   0   \n",
              "339            0         0          0                   0                   0   \n",
              "340            0         0          0                   0                   0   \n",
              "341            0         0          0                   0                   0   \n",
              "\n",
              "              xGBuildup  \n",
              "0     0.386583149433136  \n",
              "1                     0  \n",
              "2    0.5321443229913712  \n",
              "3                     0  \n",
              "4                     0  \n",
              "..                  ...  \n",
              "337                   0  \n",
              "338                   0  \n",
              "339                   0  \n",
              "340                   0  \n",
              "341                   0  \n",
              "\n",
              "[342 rows x 44 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7123572f-c15f-467c-a879-87581d5169dc\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>assists_1wks_y</th>\n",
              "      <th>xA_1wks_y</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6049</td>\n",
              "      <td>Solly March</td>\n",
              "      <td>2</td>\n",
              "      <td>165</td>\n",
              "      <td>3</td>\n",
              "      <td>2.0221502780914307</td>\n",
              "      <td>0</td>\n",
              "      <td>0.10514960438013077</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.10514960438013077</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2.0221502780914307</td>\n",
              "      <td>2.436366558074951</td>\n",
              "      <td>0.386583149433136</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>3</td>\n",
              "      <td>2.9682201147079468</td>\n",
              "      <td>0</td>\n",
              "      <td>0.09496916830539703</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.09496916830539703</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.4458823800086975</td>\n",
              "      <td>1.4458823800086975</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>2</td>\n",
              "      <td>148</td>\n",
              "      <td>2</td>\n",
              "      <td>1.1635656356811523</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.1635656356811523</td>\n",
              "      <td>1.1712167114019394</td>\n",
              "      <td>0.5321443229913712</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5786</td>\n",
              "      <td>Yoane Wissa</td>\n",
              "      <td>2</td>\n",
              "      <td>164</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2056616991758347</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07477104663848877</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07477104663848877</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2056616991758347</td>\n",
              "      <td>0.7587571889162064</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>2</td>\n",
              "      <td>99</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0606651902198792</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07604995369911194</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07604995369911194</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0606651902198792</td>\n",
              "      <td>1.1367151141166687</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>337</th>\n",
              "      <td>11730</td>\n",
              "      <td>Anis Ben Slimane</td>\n",
              "      <td>1</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>338</th>\n",
              "      <td>11731</td>\n",
              "      <td>Andre Brooks</td>\n",
              "      <td>2</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>339</th>\n",
              "      <td>11807</td>\n",
              "      <td>Ian Maatsen</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>340</th>\n",
              "      <td>11810</td>\n",
              "      <td>Mason Burstow</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>341</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson √Ålvarez</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>342 rows √ó 44 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7123572f-c15f-467c-a879-87581d5169dc')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7123572f-c15f-467c-a879-87581d5169dc button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7123572f-c15f-467c-a879-87581d5169dc');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-35a1ea0e-dff2-4022-8a94-3ba886f95ff3\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-35a1ea0e-dff2-4022-8a94-3ba886f95ff3')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-35a1ea0e-dff2-4022-8a94-3ba886f95ff3 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df.to_csv('one_game_df.csv', encoding='utf-8', index=False)\n",
        "one_game_df['time'] = one_game_df['time'].astype(int)\n",
        "one_game_df = one_game_df[one_game_df['time'] > 40]\n",
        "one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
        "one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
        "one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
        "one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
        "one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
        "one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n",
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])\n",
        "sortXgDifference = seasonedit.sort_values('xgdifference')\n",
        "sortXgDifference.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 988
        },
        "id": "IrXPzyJNg3ui",
        "outputId": "e47ddd7a-943e-48ee-ba03-a662ced4b643"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-4-30b8c2331977>:4: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['goals_1wks'] = one_game_df['goals_1wks'].astype(int)\n",
            "<ipython-input-4-30b8c2331977>:5: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xG_1wks'] = one_game_df['xG_1wks'].astype(float)\n",
            "<ipython-input-4-30b8c2331977>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xgdifference'] = one_game_df.goals_1wks - one_game_df.xG_1wks\n",
            "<ipython-input-4-30b8c2331977>:7: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['assists_1wks'] = one_game_df['assists_1wks'].astype(int)\n",
            "<ipython-input-4-30b8c2331977>:8: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xA_1wks'] = one_game_df['xA_1wks'].astype(float)\n",
            "<ipython-input-4-30b8c2331977>:9: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  one_game_df['xAdifference'] = one_game_df.assists_1wks - one_game_df.xA_1wks\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id           player_name games  goals_1wks   xG_1wks  assists_1wks  \\\n",
              "124   3621           Neal Maupay     2           0  1.375403             0   \n",
              "177   7080         Matheus Cunha     2           0  1.292907             0   \n",
              "275  10048       Nicolas Jackson     2           0  1.136019             0   \n",
              "9     1250         Mohamed Salah     2           1  2.106891             1   \n",
              "64     556       Marcus Rashford     2           0  1.078828             0   \n",
              "328  11716  Pelly Ruddock Mpanzu     1           0  0.903205             0   \n",
              "313  11356        Enzo Fern√°ndez     2           0  0.865005             0   \n",
              "15    3697       Odsonne Edouard     2           1  1.857021             0   \n",
              "96    1228       Bruno Fernandes     2           0  0.791231             0   \n",
              "236   8865         Ollie Watkins     2           0  0.786045             1   \n",
              "\n",
              "      xA_1wks shots_1wks key_passes_1wks npg_1wks            npxG_1wks  \\\n",
              "124  0.133534          5               1        0   1.3754028677940369   \n",
              "177  0.581417          6               4        0   1.2929067015647888   \n",
              "275  0.000000          6               0        0   1.1360187828540802   \n",
              "9    0.446854          8               3        1   1.3457226008176804   \n",
              "64   0.201851          7               3        0   1.0788281857967377   \n",
              "328  0.000000          2               0        0   0.9032046794891357   \n",
              "313  0.555218          3               6        0  0.10383601859211922   \n",
              "15   0.207252         10               3        1   1.8570213317871094   \n",
              "96   1.053317          7               7        0    0.791230570524931   \n",
              "236  0.232786          3               5        0   0.7860449254512787   \n",
              "\n",
              "                xGChain             xGBuildup  xgdifference  xAdifference  \n",
              "124  1.3316882029175758   0.06084267050027847     -1.375403     -0.133534  \n",
              "177    1.26432603597641   0.12041421234607697     -1.292907     -0.581417  \n",
              "275  0.9543689116835594  0.046832047402858734     -1.136019      0.000000  \n",
              "9    1.1990825533866882   0.09460654854774475     -1.106891      0.553146  \n",
              "64   1.8821727335453033    0.7019437998533249     -1.078828     -0.201851  \n",
              "328  0.9032046794891357                     0     -0.903205      0.000000  \n",
              "313  1.0611630529165268     0.886062003672123     -0.865005     -0.555218  \n",
              "15   1.6147404313087463   0.15282482281327248     -0.857021     -0.207252  \n",
              "96   2.5953863859176636    1.6224511861801147     -0.791231     -1.053317  \n",
              "236  1.2678378224372864   0.24900732189416885     -0.786045      0.767214  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d5e46d17-2180-4120-b1e1-530075405f12\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>124</th>\n",
              "      <td>3621</td>\n",
              "      <td>Neal Maupay</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1.375403</td>\n",
              "      <td>0</td>\n",
              "      <td>0.133534</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1.3754028677940369</td>\n",
              "      <td>1.3316882029175758</td>\n",
              "      <td>0.06084267050027847</td>\n",
              "      <td>-1.375403</td>\n",
              "      <td>-0.133534</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>177</th>\n",
              "      <td>7080</td>\n",
              "      <td>Matheus Cunha</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1.292907</td>\n",
              "      <td>0</td>\n",
              "      <td>0.581417</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1.2929067015647888</td>\n",
              "      <td>1.26432603597641</td>\n",
              "      <td>0.12041421234607697</td>\n",
              "      <td>-1.292907</td>\n",
              "      <td>-0.581417</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>275</th>\n",
              "      <td>10048</td>\n",
              "      <td>Nicolas Jackson</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1.136019</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.1360187828540802</td>\n",
              "      <td>0.9543689116835594</td>\n",
              "      <td>0.046832047402858734</td>\n",
              "      <td>-1.136019</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2.106891</td>\n",
              "      <td>1</td>\n",
              "      <td>0.446854</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1.3457226008176804</td>\n",
              "      <td>1.1990825533866882</td>\n",
              "      <td>0.09460654854774475</td>\n",
              "      <td>-1.106891</td>\n",
              "      <td>0.553146</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>64</th>\n",
              "      <td>556</td>\n",
              "      <td>Marcus Rashford</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1.078828</td>\n",
              "      <td>0</td>\n",
              "      <td>0.201851</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0788281857967377</td>\n",
              "      <td>1.8821727335453033</td>\n",
              "      <td>0.7019437998533249</td>\n",
              "      <td>-1.078828</td>\n",
              "      <td>-0.201851</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>328</th>\n",
              "      <td>11716</td>\n",
              "      <td>Pelly Ruddock Mpanzu</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.903205</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.9032046794891357</td>\n",
              "      <td>0.9032046794891357</td>\n",
              "      <td>0</td>\n",
              "      <td>-0.903205</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>313</th>\n",
              "      <td>11356</td>\n",
              "      <td>Enzo Fern√°ndez</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0.865005</td>\n",
              "      <td>0</td>\n",
              "      <td>0.555218</td>\n",
              "      <td>3</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0.10383601859211922</td>\n",
              "      <td>1.0611630529165268</td>\n",
              "      <td>0.886062003672123</td>\n",
              "      <td>-0.865005</td>\n",
              "      <td>-0.555218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1.857021</td>\n",
              "      <td>0</td>\n",
              "      <td>0.207252</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1.8570213317871094</td>\n",
              "      <td>1.6147404313087463</td>\n",
              "      <td>0.15282482281327248</td>\n",
              "      <td>-0.857021</td>\n",
              "      <td>-0.207252</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>1228</td>\n",
              "      <td>Bruno Fernandes</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0.791231</td>\n",
              "      <td>0</td>\n",
              "      <td>1.053317</td>\n",
              "      <td>7</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0.791230570524931</td>\n",
              "      <td>2.5953863859176636</td>\n",
              "      <td>1.6224511861801147</td>\n",
              "      <td>-0.791231</td>\n",
              "      <td>-1.053317</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>236</th>\n",
              "      <td>8865</td>\n",
              "      <td>Ollie Watkins</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0.786045</td>\n",
              "      <td>1</td>\n",
              "      <td>0.232786</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7860449254512787</td>\n",
              "      <td>1.2678378224372864</td>\n",
              "      <td>0.24900732189416885</td>\n",
              "      <td>-0.786045</td>\n",
              "      <td>0.767214</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d5e46d17-2180-4120-b1e1-530075405f12')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d5e46d17-2180-4120-b1e1-530075405f12 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d5e46d17-2180-4120-b1e1-530075405f12');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-45e62b9c-ff22-42bc-ac94-f1ddb4dc3769\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-45e62b9c-ff22-42bc-ac94-f1ddb4dc3769')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-45e62b9c-ff22-42bc-ac94-f1ddb4dc3769 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sortXgDifference.tail(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "UxuLfRINhwx7",
        "outputId": "45024f6d-8f2c-4fbc-a972-77035c9dac42"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id         player_name games  goals_1wks   xG_1wks  assists_1wks  \\\n",
              "3    5786         Yoane Wissa     2           2  1.205662             0   \n",
              "40  11363     Antoine Semenyo     2           1  0.177335             0   \n",
              "8     531     Michail Antonio     2           1  0.165498             0   \n",
              "2    5232      Alexander Isak     2           2  1.163566             0   \n",
              "6   10408           Luis D√≠az     2           2  1.108756             0   \n",
              "36   9356  Carney Chukwuemeka     2           1  0.068995             0   \n",
              "4    7814       Taiwo Awoniyi     2           2  1.060665             0   \n",
              "30   7430             Emerson     2           1  0.032621             0   \n",
              "0    6049         Solly March     2           3  2.022150             0   \n",
              "44  11839       Gustavo Hamer     1           1  0.020586             0   \n",
              "\n",
              "     xA_1wks shots_1wks key_passes_1wks npg_1wks            npxG_1wks  \\\n",
              "3   0.074771         10               2        2   1.2056616991758347   \n",
              "40  0.298367          5               1        1  0.17733527347445488   \n",
              "8   0.000000          2               0        1   0.1654975563287735   \n",
              "2   0.000000          3               0        2   1.1635656356811523   \n",
              "6   0.341314          7               3        2   1.1087555587291718   \n",
              "36  0.104601          1               2        1  0.06899454444646835   \n",
              "4   0.076050          2               2        2   1.0606651902198792   \n",
              "30  0.000000          1               0        1  0.03262129798531532   \n",
              "0   0.105150          8               3        3   2.0221502780914307   \n",
              "44  0.052756          1               1        1  0.02058557979762554   \n",
              "\n",
              "                xGChain            xGBuildup  xgdifference  xAdifference  \n",
              "3    0.7587571889162064                    0      0.794338     -0.074771  \n",
              "40   0.5076015442609787  0.03189890831708908      0.822665     -0.298367  \n",
              "8   0.22945697605609894  0.06395941972732544      0.834502      0.000000  \n",
              "2    1.1712167114019394   0.5321443229913712      0.836434      0.000000  \n",
              "6    1.3128036856651306   0.4201557785272598      0.891244     -0.341314  \n",
              "36   0.2478587105870247  0.07426274567842484      0.931005     -0.104601  \n",
              "4    1.1367151141166687                    0      0.939335     -0.076050  \n",
              "30  0.42484379559755325  0.39222250133752823      0.967379      0.000000  \n",
              "0     2.436366558074951    0.386583149433136      0.977850     -0.105150  \n",
              "44                    0                    0      0.979414     -0.052756  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-997376ab-4b74-447e-a9f3-17862d433bf7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5786</td>\n",
              "      <td>Yoane Wissa</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1.205662</td>\n",
              "      <td>0</td>\n",
              "      <td>0.074771</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2056616991758347</td>\n",
              "      <td>0.7587571889162064</td>\n",
              "      <td>0</td>\n",
              "      <td>0.794338</td>\n",
              "      <td>-0.074771</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>11363</td>\n",
              "      <td>Antoine Semenyo</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0.177335</td>\n",
              "      <td>0</td>\n",
              "      <td>0.298367</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0.17733527347445488</td>\n",
              "      <td>0.5076015442609787</td>\n",
              "      <td>0.03189890831708908</td>\n",
              "      <td>0.822665</td>\n",
              "      <td>-0.298367</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>531</td>\n",
              "      <td>Michail Antonio</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0.165498</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.1654975563287735</td>\n",
              "      <td>0.22945697605609894</td>\n",
              "      <td>0.06395941972732544</td>\n",
              "      <td>0.834502</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1.163566</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.1635656356811523</td>\n",
              "      <td>1.1712167114019394</td>\n",
              "      <td>0.5321443229913712</td>\n",
              "      <td>0.836434</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>10408</td>\n",
              "      <td>Luis D√≠az</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1.108756</td>\n",
              "      <td>0</td>\n",
              "      <td>0.341314</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>1.1087555587291718</td>\n",
              "      <td>1.3128036856651306</td>\n",
              "      <td>0.4201557785272598</td>\n",
              "      <td>0.891244</td>\n",
              "      <td>-0.341314</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>9356</td>\n",
              "      <td>Carney Chukwuemeka</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0.068995</td>\n",
              "      <td>0</td>\n",
              "      <td>0.104601</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0.06899454444646835</td>\n",
              "      <td>0.2478587105870247</td>\n",
              "      <td>0.07426274567842484</td>\n",
              "      <td>0.931005</td>\n",
              "      <td>-0.104601</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1.060665</td>\n",
              "      <td>0</td>\n",
              "      <td>0.076050</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0606651902198792</td>\n",
              "      <td>1.1367151141166687</td>\n",
              "      <td>0</td>\n",
              "      <td>0.939335</td>\n",
              "      <td>-0.076050</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>7430</td>\n",
              "      <td>Emerson</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0.032621</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.03262129798531532</td>\n",
              "      <td>0.42484379559755325</td>\n",
              "      <td>0.39222250133752823</td>\n",
              "      <td>0.967379</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6049</td>\n",
              "      <td>Solly March</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>2.022150</td>\n",
              "      <td>0</td>\n",
              "      <td>0.105150</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>2.0221502780914307</td>\n",
              "      <td>2.436366558074951</td>\n",
              "      <td>0.386583149433136</td>\n",
              "      <td>0.977850</td>\n",
              "      <td>-0.105150</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>11839</td>\n",
              "      <td>Gustavo Hamer</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0.020586</td>\n",
              "      <td>0</td>\n",
              "      <td>0.052756</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0.02058557979762554</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.979414</td>\n",
              "      <td>-0.052756</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-997376ab-4b74-447e-a9f3-17862d433bf7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-997376ab-4b74-447e-a9f3-17862d433bf7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-997376ab-4b74-447e-a9f3-17862d433bf7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-05759a2a-a5fa-4d44-997d-13768a6c92d1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-05759a2a-a5fa-4d44-997d-13768a6c92d1')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-05759a2a-a5fa-4d44-997d-13768a6c92d1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 565
        },
        "id": "NDPdgpJUVBBZ",
        "outputId": "2731718d-75cb-4199-d4df-5d4b29d60784"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id           player_name games  time  goals_1wks   xG_1wks  \\\n",
              "0     6049           Solly March     2   165           3  2.022150   \n",
              "1     6552          Bryan Mbeumo     2   180           3  2.968220   \n",
              "2     5232        Alexander Isak     2   148           2  1.163566   \n",
              "3     5786           Yoane Wissa     2   164           2  1.205662   \n",
              "4     7814         Taiwo Awoniyi     2    99           2  1.060665   \n",
              "..     ...                   ...   ...   ...         ...       ...   \n",
              "326  11714           Tom Lockyer     1    90           0  0.000000   \n",
              "327  11715         Mads Andersen     1    77           0  0.000000   \n",
              "328  11716  Pelly Ruddock Mpanzu     1    89           0  0.903205   \n",
              "329  11718        Elijah Adebayo     1    65           0  0.000000   \n",
              "336  11729          B√©nie Traor√©     2   172           0  0.321223   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards  \\\n",
              "0               0  0.105150          8               3            0         0   \n",
              "1               0  0.094969          6               1            0         0   \n",
              "2               0  0.000000          3               0            0         0   \n",
              "3               0  0.074771         10               2            0         0   \n",
              "4               0  0.076050          2               2            0         0   \n",
              "..            ...       ...        ...             ...          ...       ...   \n",
              "326             0  0.000000          0               0            0         0   \n",
              "327             0  0.000000          0               0            1         0   \n",
              "328             0  0.000000          2               0            0         0   \n",
              "329             0  0.066602          0               1            0         0   \n",
              "336             0  0.238483          1               2            0         0   \n",
              "\n",
              "    npg_1wks           npxG_1wks              xGChain            xGBuildup  \\\n",
              "0          3  2.0221502780914307    2.436366558074951    0.386583149433136   \n",
              "1          1  1.4458823800086975   1.4458823800086975                    0   \n",
              "2          2  1.1635656356811523   1.1712167114019394   0.5321443229913712   \n",
              "3          2  1.2056616991758347   0.7587571889162064                    0   \n",
              "4          2  1.0606651902198792   1.1367151141166687                    0   \n",
              "..       ...                 ...                  ...                  ...   \n",
              "326        0                   0                    0                    0   \n",
              "327        0                   0  0.04231686517596245  0.04231686517596245   \n",
              "328        0  0.9032046794891357   0.9032046794891357                    0   \n",
              "329        0                   0  0.10891849547624588  0.04231686517596245   \n",
              "336        0  0.3212226927280426   0.5597054064273834                    0   \n",
              "\n",
              "     xgdifference  xAdifference  \n",
              "0        0.977850     -0.105150  \n",
              "1        0.031780     -0.094969  \n",
              "2        0.836434      0.000000  \n",
              "3        0.794338     -0.074771  \n",
              "4        0.939335     -0.076050  \n",
              "..            ...           ...  \n",
              "326      0.000000      0.000000  \n",
              "327      0.000000      0.000000  \n",
              "328     -0.903205      0.000000  \n",
              "329      0.000000     -0.066602  \n",
              "336     -0.321223     -0.238483  \n",
              "\n",
              "[253 rows x 18 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5c879fdd-7b11-478e-bb1a-0d3fca9f1d67\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6049</td>\n",
              "      <td>Solly March</td>\n",
              "      <td>2</td>\n",
              "      <td>165</td>\n",
              "      <td>3</td>\n",
              "      <td>2.022150</td>\n",
              "      <td>0</td>\n",
              "      <td>0.105150</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2.0221502780914307</td>\n",
              "      <td>2.436366558074951</td>\n",
              "      <td>0.386583149433136</td>\n",
              "      <td>0.977850</td>\n",
              "      <td>-0.105150</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>3</td>\n",
              "      <td>2.968220</td>\n",
              "      <td>0</td>\n",
              "      <td>0.094969</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.4458823800086975</td>\n",
              "      <td>1.4458823800086975</td>\n",
              "      <td>0</td>\n",
              "      <td>0.031780</td>\n",
              "      <td>-0.094969</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>2</td>\n",
              "      <td>148</td>\n",
              "      <td>2</td>\n",
              "      <td>1.163566</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.1635656356811523</td>\n",
              "      <td>1.1712167114019394</td>\n",
              "      <td>0.5321443229913712</td>\n",
              "      <td>0.836434</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5786</td>\n",
              "      <td>Yoane Wissa</td>\n",
              "      <td>2</td>\n",
              "      <td>164</td>\n",
              "      <td>2</td>\n",
              "      <td>1.205662</td>\n",
              "      <td>0</td>\n",
              "      <td>0.074771</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2056616991758347</td>\n",
              "      <td>0.7587571889162064</td>\n",
              "      <td>0</td>\n",
              "      <td>0.794338</td>\n",
              "      <td>-0.074771</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>2</td>\n",
              "      <td>99</td>\n",
              "      <td>2</td>\n",
              "      <td>1.060665</td>\n",
              "      <td>0</td>\n",
              "      <td>0.076050</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0606651902198792</td>\n",
              "      <td>1.1367151141166687</td>\n",
              "      <td>0</td>\n",
              "      <td>0.939335</td>\n",
              "      <td>-0.076050</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>326</th>\n",
              "      <td>11714</td>\n",
              "      <td>Tom Lockyer</td>\n",
              "      <td>1</td>\n",
              "      <td>90</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>327</th>\n",
              "      <td>11715</td>\n",
              "      <td>Mads Andersen</td>\n",
              "      <td>1</td>\n",
              "      <td>77</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.04231686517596245</td>\n",
              "      <td>0.04231686517596245</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>328</th>\n",
              "      <td>11716</td>\n",
              "      <td>Pelly Ruddock Mpanzu</td>\n",
              "      <td>1</td>\n",
              "      <td>89</td>\n",
              "      <td>0</td>\n",
              "      <td>0.903205</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.9032046794891357</td>\n",
              "      <td>0.9032046794891357</td>\n",
              "      <td>0</td>\n",
              "      <td>-0.903205</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>329</th>\n",
              "      <td>11718</td>\n",
              "      <td>Elijah Adebayo</td>\n",
              "      <td>1</td>\n",
              "      <td>65</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.066602</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.10891849547624588</td>\n",
              "      <td>0.04231686517596245</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-0.066602</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>336</th>\n",
              "      <td>11729</td>\n",
              "      <td>B√©nie Traor√©</td>\n",
              "      <td>2</td>\n",
              "      <td>172</td>\n",
              "      <td>0</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0</td>\n",
              "      <td>0.238483</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3212226927280426</td>\n",
              "      <td>0.5597054064273834</td>\n",
              "      <td>0</td>\n",
              "      <td>-0.321223</td>\n",
              "      <td>-0.238483</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>253 rows √ó 18 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5c879fdd-7b11-478e-bb1a-0d3fca9f1d67')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5c879fdd-7b11-478e-bb1a-0d3fca9f1d67 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5c879fdd-7b11-478e-bb1a-0d3fca9f1d67');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9ecddffc-f3b2-4e31-8c94-c4067340bd51\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9ecddffc-f3b2-4e31-8c94-c4067340bd51')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9ecddffc-f3b2-4e31-8c94-c4067340bd51 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "onegamedftidy = one_game_df.drop(columns=[\n",
        " 'time',\n",
        " 'goals_1wks',\n",
        " 'assists_1wks',\n",
        " 'shots_1wks',\n",
        " 'key_passes_1wks',\n",
        " 'yellow_cards',\n",
        " 'red_cards',\n",
        " 'npg_1wks',\n",
        " 'npxG_1wks',\n",
        " 'xGChain',\n",
        " 'xGBuildup',\n",
        " 'xgdifference',\n",
        " 'xAdifference'])\n",
        "onegamedftidy"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "RKf0tUGEh8FV",
        "outputId": "058a9206-357b-4f87-b9bd-19bce16636cb"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id           player_name games   xG_1wks   xA_1wks\n",
              "0     6049           Solly March     2  2.022150  0.105150\n",
              "1     6552          Bryan Mbeumo     2  2.968220  0.094969\n",
              "2     5232        Alexander Isak     2  1.163566  0.000000\n",
              "3     5786           Yoane Wissa     2  1.205662  0.074771\n",
              "4     7814         Taiwo Awoniyi     2  1.060665  0.076050\n",
              "..     ...                   ...   ...       ...       ...\n",
              "326  11714           Tom Lockyer     1  0.000000  0.000000\n",
              "327  11715         Mads Andersen     1  0.000000  0.000000\n",
              "328  11716  Pelly Ruddock Mpanzu     1  0.903205  0.000000\n",
              "329  11718        Elijah Adebayo     1  0.000000  0.066602\n",
              "336  11729          B√©nie Traor√©     2  0.321223  0.238483\n",
              "\n",
              "[253 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a0c228d7-95c3-47a4-b102-0833f627fe82\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6049</td>\n",
              "      <td>Solly March</td>\n",
              "      <td>2</td>\n",
              "      <td>2.022150</td>\n",
              "      <td>0.105150</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>2</td>\n",
              "      <td>2.968220</td>\n",
              "      <td>0.094969</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>2</td>\n",
              "      <td>1.163566</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5786</td>\n",
              "      <td>Yoane Wissa</td>\n",
              "      <td>2</td>\n",
              "      <td>1.205662</td>\n",
              "      <td>0.074771</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>2</td>\n",
              "      <td>1.060665</td>\n",
              "      <td>0.076050</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>326</th>\n",
              "      <td>11714</td>\n",
              "      <td>Tom Lockyer</td>\n",
              "      <td>1</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>327</th>\n",
              "      <td>11715</td>\n",
              "      <td>Mads Andersen</td>\n",
              "      <td>1</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>328</th>\n",
              "      <td>11716</td>\n",
              "      <td>Pelly Ruddock Mpanzu</td>\n",
              "      <td>1</td>\n",
              "      <td>0.903205</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>329</th>\n",
              "      <td>11718</td>\n",
              "      <td>Elijah Adebayo</td>\n",
              "      <td>1</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.066602</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>336</th>\n",
              "      <td>11729</td>\n",
              "      <td>B√©nie Traor√©</td>\n",
              "      <td>2</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0.238483</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>253 rows √ó 5 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a0c228d7-95c3-47a4-b102-0833f627fe82')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a0c228d7-95c3-47a4-b102-0833f627fe82 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a0c228d7-95c3-47a4-b102-0833f627fe82');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ed6c925d-9c46-4b2f-8654-1d798a4badaf\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ed6c925d-9c46-4b2f-8654-1d798a4badaf')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ed6c925d-9c46-4b2f-8654-1d798a4badaf button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/pratos/fpl-mappers\n",
        "!git clone https://github.com/ChrisMusson/FPL-ID-Map\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B9kCj8OeiKGn",
        "outputId": "db391522-d35d-4df6-b1fa-3677518e246f"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'fpl-mappers'...\n",
            "remote: Enumerating objects: 94, done.\u001b[K\n",
            "remote: Counting objects:   1% (1/94)\u001b[K\rremote: Counting objects:   2% (2/94)\u001b[K\rremote: Counting objects:   3% (3/94)\u001b[K\rremote: Counting objects:   4% (4/94)\u001b[K\rremote: Counting objects:   5% (5/94)\u001b[K\rremote: Counting objects:   6% (6/94)\u001b[K\rremote: Counting objects:   7% (7/94)\u001b[K\rremote: Counting objects:   8% (8/94)\u001b[K\rremote: Counting objects:   9% (9/94)\u001b[K\rremote: Counting objects:  10% (10/94)\u001b[K\rremote: Counting objects:  11% (11/94)\u001b[K\rremote: Counting objects:  12% (12/94)\u001b[K\rremote: Counting objects:  13% (13/94)\u001b[K\rremote: Counting objects:  14% (14/94)\u001b[K\rremote: Counting objects:  15% (15/94)\u001b[K\rremote: Counting objects:  17% (16/94)\u001b[K\rremote: Counting objects:  18% (17/94)\u001b[K\rremote: Counting objects:  19% (18/94)\u001b[K\rremote: Counting objects:  20% (19/94)\u001b[K\rremote: Counting objects:  21% (20/94)\u001b[K\rremote: Counting objects:  22% (21/94)\u001b[K\rremote: Counting objects:  23% (22/94)\u001b[K\rremote: Counting objects:  24% (23/94)\u001b[K\rremote: Counting objects:  25% (24/94)\u001b[K\rremote: Counting objects:  26% (25/94)\u001b[K\rremote: Counting objects:  27% (26/94)\u001b[K\rremote: Counting objects:  28% (27/94)\u001b[K\rremote: Counting objects:  29% (28/94)\u001b[K\rremote: Counting objects:  30% (29/94)\u001b[K\rremote: Counting objects:  31% (30/94)\u001b[K\rremote: Counting objects:  32% (31/94)\u001b[K\rremote: Counting objects:  34% (32/94)\u001b[K\rremote: Counting objects:  35% (33/94)\u001b[K\rremote: Counting objects:  36% (34/94)\u001b[K\rremote: Counting objects:  37% (35/94)\u001b[K\rremote: Counting objects:  38% (36/94)\u001b[K\rremote: Counting objects:  39% (37/94)\u001b[K\rremote: Counting objects:  40% (38/94)\u001b[K\rremote: Counting objects:  41% (39/94)\u001b[K\rremote: Counting objects:  42% (40/94)\u001b[K\rremote: Counting objects:  43% (41/94)\u001b[K\rremote: Counting objects:  44% (42/94)\u001b[K\rremote: Counting objects:  45% (43/94)\u001b[K\rremote: Counting objects:  46% (44/94)\u001b[K\rremote: Counting objects:  47% (45/94)\u001b[K\rremote: Counting objects:  48% (46/94)\u001b[K\rremote: Counting objects:  50% (47/94)\u001b[K\rremote: Counting objects:  51% (48/94)\u001b[K\rremote: Counting objects:  52% (49/94)\u001b[K\rremote: Counting objects:  53% (50/94)\u001b[K\rremote: Counting objects:  54% (51/94)\u001b[K\rremote: Counting objects:  55% (52/94)\u001b[K\rremote: Counting objects:  56% (53/94)\u001b[K\rremote: Counting objects:  57% (54/94)\u001b[K\rremote: Counting objects:  58% (55/94)\u001b[K\rremote: Counting objects:  59% (56/94)\u001b[K\rremote: Counting objects:  60% (57/94)\u001b[K\rremote: Counting objects:  61% (58/94)\u001b[K\rremote: Counting objects:  62% (59/94)\u001b[K\rremote: Counting objects:  63% (60/94)\u001b[K\rremote: Counting objects:  64% (61/94)\u001b[K\rremote: Counting objects:  65% (62/94)\u001b[K\rremote: Counting objects:  67% (63/94)\u001b[K\rremote: Counting objects:  68% (64/94)\u001b[K\rremote: Counting objects:  69% (65/94)\u001b[K\rremote: Counting objects:  70% (66/94)\u001b[K\rremote: Counting objects:  71% (67/94)\u001b[K\rremote: Counting objects:  72% (68/94)\u001b[K\rremote: Counting objects:  73% (69/94)\u001b[K\rremote: Counting objects:  74% (70/94)\u001b[K\rremote: Counting objects:  75% (71/94)\u001b[K\rremote: Counting objects:  76% (72/94)\u001b[K\rremote: Counting objects:  77% (73/94)\u001b[K\rremote: Counting objects:  78% (74/94)\u001b[K\rremote: Counting objects:  79% (75/94)\u001b[K\rremote: Counting objects:  80% (76/94)\u001b[K\rremote: Counting objects:  81% (77/94)\u001b[K\rremote: Counting objects:  82% (78/94)\u001b[K\rremote: Counting objects:  84% (79/94)\u001b[K\rremote: Counting objects:  85% (80/94)\u001b[K\rremote: Counting objects:  86% (81/94)\u001b[K\rremote: Counting objects:  87% (82/94)\u001b[K\rremote: Counting objects:  88% (83/94)\u001b[K\rremote: Counting objects:  89% (84/94)\u001b[K\rremote: Counting objects:  90% (85/94)\u001b[K\rremote: Counting objects:  91% (86/94)\u001b[K\rremote: Counting objects:  92% (87/94)\u001b[K\rremote: Counting objects:  93% (88/94)\u001b[K\rremote: Counting objects:  94% (89/94)\u001b[K\rremote: Counting objects:  95% (90/94)\u001b[K\rremote: Counting objects:  96% (91/94)\u001b[K\rremote: Counting objects:  97% (92/94)\u001b[K\rremote: Counting objects:  98% (93/94)\u001b[K\rremote: Counting objects: 100% (94/94)\u001b[K\rremote: Counting objects: 100% (94/94), done.\u001b[K\n",
            "remote: Compressing objects: 100% (56/56), done.\u001b[K\n",
            "remote: Total 94 (delta 32), reused 89 (delta 30), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (94/94), 217.69 KiB | 5.73 MiB/s, done.\n",
            "Resolving deltas: 100% (32/32), done.\n",
            "Cloning into 'FPL-ID-Map'...\n",
            "remote: Enumerating objects: 242, done.\u001b[K\n",
            "remote: Counting objects: 100% (242/242), done.\u001b[K\n",
            "remote: Compressing objects: 100% (120/120), done.\u001b[K\n",
            "remote: Total 242 (delta 176), reused 188 (delta 122), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (242/242), 273.05 KiB | 6.21 MiB/s, done.\n",
            "Resolving deltas: 100% (176/176), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data1 = pd.read_csv('/content/FPL-ID-Map/Understat.csv', on_bad_lines='skip')\n",
        "data2 = pd.read_csv('/content/FPL-ID-Map/FPL/22-23.csv', on_bad_lines='skip')\n",
        "understatwithfplid1 = pd.merge(data2,\n",
        "                     data1,\n",
        "                     on ='code',\n",
        "                     how ='left')\n",
        "understatid = understatwithfplid1.drop(columns=[\n",
        "'code',\n",
        " 'first_name_x',\n",
        " 'second_name_x',\n",
        " 'web_name_x',\n",
        " 'first_name_y',\n",
        " 'second_name_y',\n",
        " 'web_name_y',])\n",
        "one_game_df.rename(columns={'id': 'understat'}, inplace=True)\n",
        "one_game_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 565
        },
        "id": "SaX7692EiQA7",
        "outputId": "b510cd38-6cf4-4b30-e452-d3b7a30a8afd"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    understat           player_name games  time  goals_1wks   xG_1wks  \\\n",
              "0        6049           Solly March     2   165           3  2.022150   \n",
              "1        6552          Bryan Mbeumo     2   180           3  2.968220   \n",
              "2        5232        Alexander Isak     2   148           2  1.163566   \n",
              "3        5786           Yoane Wissa     2   164           2  1.205662   \n",
              "4        7814         Taiwo Awoniyi     2    99           2  1.060665   \n",
              "..        ...                   ...   ...   ...         ...       ...   \n",
              "326     11714           Tom Lockyer     1    90           0  0.000000   \n",
              "327     11715         Mads Andersen     1    77           0  0.000000   \n",
              "328     11716  Pelly Ruddock Mpanzu     1    89           0  0.903205   \n",
              "329     11718        Elijah Adebayo     1    65           0  0.000000   \n",
              "336     11729          B√©nie Traor√©     2   172           0  0.321223   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards  \\\n",
              "0               0  0.105150          8               3            0         0   \n",
              "1               0  0.094969          6               1            0         0   \n",
              "2               0  0.000000          3               0            0         0   \n",
              "3               0  0.074771         10               2            0         0   \n",
              "4               0  0.076050          2               2            0         0   \n",
              "..            ...       ...        ...             ...          ...       ...   \n",
              "326             0  0.000000          0               0            0         0   \n",
              "327             0  0.000000          0               0            1         0   \n",
              "328             0  0.000000          2               0            0         0   \n",
              "329             0  0.066602          0               1            0         0   \n",
              "336             0  0.238483          1               2            0         0   \n",
              "\n",
              "    npg_1wks           npxG_1wks              xGChain            xGBuildup  \\\n",
              "0          3  2.0221502780914307    2.436366558074951    0.386583149433136   \n",
              "1          1  1.4458823800086975   1.4458823800086975                    0   \n",
              "2          2  1.1635656356811523   1.1712167114019394   0.5321443229913712   \n",
              "3          2  1.2056616991758347   0.7587571889162064                    0   \n",
              "4          2  1.0606651902198792   1.1367151141166687                    0   \n",
              "..       ...                 ...                  ...                  ...   \n",
              "326        0                   0                    0                    0   \n",
              "327        0                   0  0.04231686517596245  0.04231686517596245   \n",
              "328        0  0.9032046794891357   0.9032046794891357                    0   \n",
              "329        0                   0  0.10891849547624588  0.04231686517596245   \n",
              "336        0  0.3212226927280426   0.5597054064273834                    0   \n",
              "\n",
              "     xgdifference  xAdifference  \n",
              "0        0.977850     -0.105150  \n",
              "1        0.031780     -0.094969  \n",
              "2        0.836434      0.000000  \n",
              "3        0.794338     -0.074771  \n",
              "4        0.939335     -0.076050  \n",
              "..            ...           ...  \n",
              "326      0.000000      0.000000  \n",
              "327      0.000000      0.000000  \n",
              "328     -0.903205      0.000000  \n",
              "329      0.000000     -0.066602  \n",
              "336     -0.321223     -0.238483  \n",
              "\n",
              "[253 rows x 18 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-46ca0096-58e1-458e-8655-a74f2dc4b8ba\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6049</td>\n",
              "      <td>Solly March</td>\n",
              "      <td>2</td>\n",
              "      <td>165</td>\n",
              "      <td>3</td>\n",
              "      <td>2.022150</td>\n",
              "      <td>0</td>\n",
              "      <td>0.105150</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2.0221502780914307</td>\n",
              "      <td>2.436366558074951</td>\n",
              "      <td>0.386583149433136</td>\n",
              "      <td>0.977850</td>\n",
              "      <td>-0.105150</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>3</td>\n",
              "      <td>2.968220</td>\n",
              "      <td>0</td>\n",
              "      <td>0.094969</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.4458823800086975</td>\n",
              "      <td>1.4458823800086975</td>\n",
              "      <td>0</td>\n",
              "      <td>0.031780</td>\n",
              "      <td>-0.094969</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>2</td>\n",
              "      <td>148</td>\n",
              "      <td>2</td>\n",
              "      <td>1.163566</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.1635656356811523</td>\n",
              "      <td>1.1712167114019394</td>\n",
              "      <td>0.5321443229913712</td>\n",
              "      <td>0.836434</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5786</td>\n",
              "      <td>Yoane Wissa</td>\n",
              "      <td>2</td>\n",
              "      <td>164</td>\n",
              "      <td>2</td>\n",
              "      <td>1.205662</td>\n",
              "      <td>0</td>\n",
              "      <td>0.074771</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2056616991758347</td>\n",
              "      <td>0.7587571889162064</td>\n",
              "      <td>0</td>\n",
              "      <td>0.794338</td>\n",
              "      <td>-0.074771</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>2</td>\n",
              "      <td>99</td>\n",
              "      <td>2</td>\n",
              "      <td>1.060665</td>\n",
              "      <td>0</td>\n",
              "      <td>0.076050</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0606651902198792</td>\n",
              "      <td>1.1367151141166687</td>\n",
              "      <td>0</td>\n",
              "      <td>0.939335</td>\n",
              "      <td>-0.076050</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>326</th>\n",
              "      <td>11714</td>\n",
              "      <td>Tom Lockyer</td>\n",
              "      <td>1</td>\n",
              "      <td>90</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>327</th>\n",
              "      <td>11715</td>\n",
              "      <td>Mads Andersen</td>\n",
              "      <td>1</td>\n",
              "      <td>77</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.04231686517596245</td>\n",
              "      <td>0.04231686517596245</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>328</th>\n",
              "      <td>11716</td>\n",
              "      <td>Pelly Ruddock Mpanzu</td>\n",
              "      <td>1</td>\n",
              "      <td>89</td>\n",
              "      <td>0</td>\n",
              "      <td>0.903205</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.9032046794891357</td>\n",
              "      <td>0.9032046794891357</td>\n",
              "      <td>0</td>\n",
              "      <td>-0.903205</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>329</th>\n",
              "      <td>11718</td>\n",
              "      <td>Elijah Adebayo</td>\n",
              "      <td>1</td>\n",
              "      <td>65</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.066602</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.10891849547624588</td>\n",
              "      <td>0.04231686517596245</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-0.066602</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>336</th>\n",
              "      <td>11729</td>\n",
              "      <td>B√©nie Traor√©</td>\n",
              "      <td>2</td>\n",
              "      <td>172</td>\n",
              "      <td>0</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0</td>\n",
              "      <td>0.238483</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3212226927280426</td>\n",
              "      <td>0.5597054064273834</td>\n",
              "      <td>0</td>\n",
              "      <td>-0.321223</td>\n",
              "      <td>-0.238483</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>253 rows √ó 18 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-46ca0096-58e1-458e-8655-a74f2dc4b8ba')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-46ca0096-58e1-458e-8655-a74f2dc4b8ba button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-46ca0096-58e1-458e-8655-a74f2dc4b8ba');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c8c216a0-6ab0-42a7-b19e-e3e5b1a944a0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c8c216a0-6ab0-42a7-b19e-e3e5b1a944a0')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c8c216a0-6ab0-42a7-b19e-e3e5b1a944a0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/huricane85/FPL-API-Fixture-modeler"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dU1giLdZir3J",
        "outputId": "d6902f4d-36f0-4fcd-c5ae-b03b6b602a21"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'FPL-API-Fixture-modeler'...\n",
            "remote: Enumerating objects: 48, done.\u001b[K\n",
            "remote: Counting objects: 100% (48/48), done.\u001b[K\n",
            "remote: Compressing objects: 100% (48/48), done.\u001b[K\n",
            "remote: Total 48 (delta 23), reused 0 (delta 0), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (48/48), 834.82 KiB | 5.42 MiB/s, done.\n",
            "Resolving deltas: 100% (23/23), done.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# read the CSV file from GitHub into a DataFrame\n",
        "url = \"https://raw.githubusercontent.com/ChrisMusson/FPL-ID-Map/main/Master.csv\"\n",
        "df = pd.read_csv(url)\n",
        "\n",
        "# rename the \"22-23\" column to \"id\"\n",
        "df.rename(columns={'22-23': 'id'}, inplace=True)\n",
        "\n",
        "# convert \"id\" and \"understat\" columns to int64 and float64 respectively\n",
        "df['id'] = pd.to_numeric(df['id'], errors='coerce', downcast='integer').astype('Int64')\n",
        "df['understat'] = pd.to_numeric(df['understat'], errors='coerce', downcast='integer').astype('Int64')\n",
        "\n",
        "# filter out rows where \"understat\" is null\n",
        "df = df.dropna(subset=['understat'])\n",
        "\n",
        "# change data type of \"id\" column to float64\n",
        "df['id'] = df['id'].astype('float64')\n",
        "\n",
        "# create a new DataFrame with only the \"understat\" and \"id\" columns\n",
        "new_df = df[['understat', 'id']].dropna(subset=['id']).copy()\n",
        "\n",
        "# display the new DataFrame\n",
        "\n",
        "new_df\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "WRijWphEVPuN",
        "outputId": "db56b903-c0b7-4293-8462-0c39c6fff19c"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b15188d4-9f4f-42d6-a03f-84c3639305f4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows √ó 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b15188d4-9f4f-42d6-a03f-84c3639305f4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b15188d4-9f4f-42d6-a03f-84c3639305f4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b15188d4-9f4f-42d6-a03f-84c3639305f4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b806fab3-a676-499f-bd16-ab5ee91fec3e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b806fab3-a676-499f-bd16-ab5ee91fec3e')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b806fab3-a676-499f-bd16-ab5ee91fec3e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "NhQ4dZKdUv36",
        "outputId": "3d9e2258-094a-4525-fa87-83276fc2ecca"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      understat     id\n",
              "37         7821  760.0\n",
              "38         1697  627.0\n",
              "55         2371  326.0\n",
              "62          489  274.0\n",
              "77         8158  502.0\n",
              "...         ...    ...\n",
              "1933      11301  695.0\n",
              "1934      11146  632.0\n",
              "1935      11189  646.0\n",
              "1936      11302  696.0\n",
              "1937      11195  650.0\n",
              "\n",
              "[763 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3d0150f9-b5c2-4b39-8ed8-e493bc41f9cd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>7821</td>\n",
              "      <td>760.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1697</td>\n",
              "      <td>627.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>2371</td>\n",
              "      <td>326.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>489</td>\n",
              "      <td>274.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>8158</td>\n",
              "      <td>502.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1933</th>\n",
              "      <td>11301</td>\n",
              "      <td>695.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1934</th>\n",
              "      <td>11146</td>\n",
              "      <td>632.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1935</th>\n",
              "      <td>11189</td>\n",
              "      <td>646.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1936</th>\n",
              "      <td>11302</td>\n",
              "      <td>696.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1937</th>\n",
              "      <td>11195</td>\n",
              "      <td>650.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>763 rows √ó 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d0150f9-b5c2-4b39-8ed8-e493bc41f9cd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3d0150f9-b5c2-4b39-8ed8-e493bc41f9cd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3d0150f9-b5c2-4b39-8ed8-e493bc41f9cd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d9389ff2-aa50-446f-90b9-3cd9079e6bdb\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d9389ff2-aa50-446f-90b9-3cd9079e6bdb')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d9389ff2-aa50-446f-90b9-3cd9079e6bdb button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "one_game_df[\"understat\"] = one_game_df[\"understat\"].astype(str).astype(int)\n",
        "understatid2 = new_df\n",
        "understatwithfplid = pd.merge(one_game_df,\n",
        "                     understatid2,\n",
        "                     on ='understat',\n",
        "                     how ='left')\n",
        "understatwithfplid"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 565
        },
        "id": "KmDbXEnfi2v1",
        "outputId": "9cf8dffe-f3bc-4327-f4d1-238cbbd770ea"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     understat           player_name games  time  goals_1wks   xG_1wks  \\\n",
              "0         6049           Solly March     2   165           3  2.022150   \n",
              "1         6552          Bryan Mbeumo     2   180           3  2.968220   \n",
              "2         5232        Alexander Isak     2   148           2  1.163566   \n",
              "3         5786           Yoane Wissa     2   164           2  1.205662   \n",
              "4         7814         Taiwo Awoniyi     2    99           2  1.060665   \n",
              "..         ...                   ...   ...   ...         ...       ...   \n",
              "248      11714           Tom Lockyer     1    90           0  0.000000   \n",
              "249      11715         Mads Andersen     1    77           0  0.000000   \n",
              "250      11716  Pelly Ruddock Mpanzu     1    89           0  0.903205   \n",
              "251      11718        Elijah Adebayo     1    65           0  0.000000   \n",
              "252      11729          B√©nie Traor√©     2   172           0  0.321223   \n",
              "\n",
              "     assists_1wks   xA_1wks shots_1wks key_passes_1wks yellow_cards red_cards  \\\n",
              "0               0  0.105150          8               3            0         0   \n",
              "1               0  0.094969          6               1            0         0   \n",
              "2               0  0.000000          3               0            0         0   \n",
              "3               0  0.074771         10               2            0         0   \n",
              "4               0  0.076050          2               2            0         0   \n",
              "..            ...       ...        ...             ...          ...       ...   \n",
              "248             0  0.000000          0               0            0         0   \n",
              "249             0  0.000000          0               0            1         0   \n",
              "250             0  0.000000          2               0            0         0   \n",
              "251             0  0.066602          0               1            0         0   \n",
              "252             0  0.238483          1               2            0         0   \n",
              "\n",
              "    npg_1wks           npxG_1wks              xGChain            xGBuildup  \\\n",
              "0          3  2.0221502780914307    2.436366558074951    0.386583149433136   \n",
              "1          1  1.4458823800086975   1.4458823800086975                    0   \n",
              "2          2  1.1635656356811523   1.1712167114019394   0.5321443229913712   \n",
              "3          2  1.2056616991758347   0.7587571889162064                    0   \n",
              "4          2  1.0606651902198792   1.1367151141166687                    0   \n",
              "..       ...                 ...                  ...                  ...   \n",
              "248        0                   0                    0                    0   \n",
              "249        0                   0  0.04231686517596245  0.04231686517596245   \n",
              "250        0  0.9032046794891357   0.9032046794891357                    0   \n",
              "251        0                   0  0.10891849547624588  0.04231686517596245   \n",
              "252        0  0.3212226927280426   0.5597054064273834                    0   \n",
              "\n",
              "     xgdifference  xAdifference     id  \n",
              "0        0.977850     -0.105150  107.0  \n",
              "1        0.031780     -0.094969   95.0  \n",
              "2        0.836434      0.000000  594.0  \n",
              "3        0.794338     -0.074771   89.0  \n",
              "4        0.939335     -0.076050  397.0  \n",
              "..            ...           ...    ...  \n",
              "248      0.000000      0.000000    NaN  \n",
              "249      0.000000      0.000000    NaN  \n",
              "250     -0.903205      0.000000    NaN  \n",
              "251      0.000000     -0.066602    NaN  \n",
              "252     -0.321223     -0.238483    NaN  \n",
              "\n",
              "[253 rows x 19 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1774ebb3-10e3-48ee-8267-59c2387d2845\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>understat</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games</th>\n",
              "      <th>time</th>\n",
              "      <th>goals_1wks</th>\n",
              "      <th>xG_1wks</th>\n",
              "      <th>assists_1wks</th>\n",
              "      <th>xA_1wks</th>\n",
              "      <th>shots_1wks</th>\n",
              "      <th>key_passes_1wks</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>npg_1wks</th>\n",
              "      <th>npxG_1wks</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>xgdifference</th>\n",
              "      <th>xAdifference</th>\n",
              "      <th>id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6049</td>\n",
              "      <td>Solly March</td>\n",
              "      <td>2</td>\n",
              "      <td>165</td>\n",
              "      <td>3</td>\n",
              "      <td>2.022150</td>\n",
              "      <td>0</td>\n",
              "      <td>0.105150</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2.0221502780914307</td>\n",
              "      <td>2.436366558074951</td>\n",
              "      <td>0.386583149433136</td>\n",
              "      <td>0.977850</td>\n",
              "      <td>-0.105150</td>\n",
              "      <td>107.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>3</td>\n",
              "      <td>2.968220</td>\n",
              "      <td>0</td>\n",
              "      <td>0.094969</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.4458823800086975</td>\n",
              "      <td>1.4458823800086975</td>\n",
              "      <td>0</td>\n",
              "      <td>0.031780</td>\n",
              "      <td>-0.094969</td>\n",
              "      <td>95.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>2</td>\n",
              "      <td>148</td>\n",
              "      <td>2</td>\n",
              "      <td>1.163566</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.1635656356811523</td>\n",
              "      <td>1.1712167114019394</td>\n",
              "      <td>0.5321443229913712</td>\n",
              "      <td>0.836434</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>594.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5786</td>\n",
              "      <td>Yoane Wissa</td>\n",
              "      <td>2</td>\n",
              "      <td>164</td>\n",
              "      <td>2</td>\n",
              "      <td>1.205662</td>\n",
              "      <td>0</td>\n",
              "      <td>0.074771</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2056616991758347</td>\n",
              "      <td>0.7587571889162064</td>\n",
              "      <td>0</td>\n",
              "      <td>0.794338</td>\n",
              "      <td>-0.074771</td>\n",
              "      <td>89.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>2</td>\n",
              "      <td>99</td>\n",
              "      <td>2</td>\n",
              "      <td>1.060665</td>\n",
              "      <td>0</td>\n",
              "      <td>0.076050</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0606651902198792</td>\n",
              "      <td>1.1367151141166687</td>\n",
              "      <td>0</td>\n",
              "      <td>0.939335</td>\n",
              "      <td>-0.076050</td>\n",
              "      <td>397.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>248</th>\n",
              "      <td>11714</td>\n",
              "      <td>Tom Lockyer</td>\n",
              "      <td>1</td>\n",
              "      <td>90</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>249</th>\n",
              "      <td>11715</td>\n",
              "      <td>Mads Andersen</td>\n",
              "      <td>1</td>\n",
              "      <td>77</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.04231686517596245</td>\n",
              "      <td>0.04231686517596245</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>250</th>\n",
              "      <td>11716</td>\n",
              "      <td>Pelly Ruddock Mpanzu</td>\n",
              "      <td>1</td>\n",
              "      <td>89</td>\n",
              "      <td>0</td>\n",
              "      <td>0.903205</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.9032046794891357</td>\n",
              "      <td>0.9032046794891357</td>\n",
              "      <td>0</td>\n",
              "      <td>-0.903205</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>251</th>\n",
              "      <td>11718</td>\n",
              "      <td>Elijah Adebayo</td>\n",
              "      <td>1</td>\n",
              "      <td>65</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.066602</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.10891849547624588</td>\n",
              "      <td>0.04231686517596245</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-0.066602</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>252</th>\n",
              "      <td>11729</td>\n",
              "      <td>B√©nie Traor√©</td>\n",
              "      <td>2</td>\n",
              "      <td>172</td>\n",
              "      <td>0</td>\n",
              "      <td>0.321223</td>\n",
              "      <td>0</td>\n",
              "      <td>0.238483</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3212226927280426</td>\n",
              "      <td>0.5597054064273834</td>\n",
              "      <td>0</td>\n",
              "      <td>-0.321223</td>\n",
              "      <td>-0.238483</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>253 rows √ó 19 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1774ebb3-10e3-48ee-8267-59c2387d2845')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1774ebb3-10e3-48ee-8267-59c2387d2845 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1774ebb3-10e3-48ee-8267-59c2387d2845');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-07b56860-5c6f-4710-a010-e5320c0c41ae\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-07b56860-5c6f-4710-a010-e5320c0c41ae')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-07b56860-5c6f-4710-a010-e5320c0c41ae button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/fixtures/\").read())\n",
        "    fixtures = all_data\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"event\"],\n",
        "            team_converter(x[\"team_h\"]),\n",
        "            team_converter(x[\"team_a\"]),\n",
        "            x[\"kickoff_time\"],\n",
        "\n",
        "        ]\n",
        "        for x in fixtures\n",
        "    ]\n",
        "\n",
        "    with open(\"/fixtures_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"event\",\"team_h\",\"team_a\",\"kickoff_time\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "Y_cV1kyak7XX"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import scipy\n",
        "import numpy as np\n",
        "from numpy import random\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import matplotlib"
      ],
      "metadata": {
        "id": "DXejj-4jjUI-"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from urllib.request import urlopen\n",
        "from json import loads\n",
        "from csv import writer\n",
        "\n",
        "\n",
        "def team_converter(team_id):\n",
        "    '''Converts a team's ID to their actual name'''\n",
        "    team_map = {\n",
        "        1: \"Arsenal\",\n",
        "        2: \"Aston Villa\",\n",
        "        3: \"Bournemouth\",\n",
        "        4: \"Brentford\",\n",
        "        5: \"Brighton\",\n",
        "        6: \"Burnley\",\n",
        "        7: \"Chelsea\",\n",
        "        8: \"Crystal Palace\",\n",
        "        9: \"Everton\",\n",
        "        10: \"Fulham\",\n",
        "        11: \"Liverpool\",\n",
        "        12: \"Luton Town\",\n",
        "        13: \"Manchester City\",\n",
        "        14: \"Manchester United\",\n",
        "        15: \"Newcastle United\",\n",
        "        16: \"Nottingham Forest\",\n",
        "        17: \"Sheffield United\",\n",
        "        18: \"Tottenham\",\n",
        "        19: \"West Ham\",\n",
        "        20: \"Wolverhampton Wanderers\",\n",
        "        None: None\n",
        "    }\n",
        "    return team_map[team_id]\n",
        "\n",
        "\n",
        "def position_converter(position):\n",
        "    '''Converts a player's element_type to their actual position'''\n",
        "    position_map = {\n",
        "        1: \"Goalkeeper\",\n",
        "        2: \"Defender\",\n",
        "        3: \"Midfielder\",\n",
        "        4: \"Forward\"\n",
        "    }\n",
        "    return position_map[position]\n",
        "\n",
        "\n",
        "def main():\n",
        "    all_data = loads(urlopen(\"https://fantasy.premierleague.com/api/bootstrap-static/\").read())\n",
        "    players = all_data[\"elements\"]\n",
        "\n",
        "    important_data = [\n",
        "        [\n",
        "            x[\"id\"],\n",
        "            team_converter(x[\"team\"]),\n",
        "            position_converter(x[\"element_type\"])[0],\n",
        "            x[\"web_name\"],\n",
        "            x[\"now_cost\"] / 10,\n",
        "            x[\"selected_by_percent\"],\n",
        "            float(x[\"expected_goals\"]),  # Convert to float\n",
        "            float(x[\"expected_assists\"]),  # Convert to float\n",
        "            x[\"goals_scored\"],\n",
        "            x[\"assists\"],\n",
        "            x[\"bps\"],\n",
        "            x[\"ict_index\"],\n",
        "            x[\"total_points\"],\n",
        "            x[\"points_per_game\"],\n",
        "            x[\"minutes\"]\n",
        "        ]\n",
        "        for x in players\n",
        "    ]\n",
        "\n",
        "    with open(\"players_data.csv\", \"w\", encoding=\"utf-8\", newline=\"\") as out:\n",
        "        headers = [\"id\",\"team\", \"pos\", \"name\", \"cost\", \"selected_by_percent\", \"expected_goals\", \"expected_assists\", \"goals_scored\", \"assists\", \"bps\", \"ict_index\",\"points\", \"points_per_game\", \"minutes\"]\n",
        "        w = writer(out)\n",
        "        w.writerow(headers)\n",
        "        w.writerows(important_data)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "id": "CKZZPD0xQGLu"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "playerdata = pd.read_csv(\"/content/players_data.csv\")\n",
        "master = playerdata\n",
        "#master = master.dropna()\n",
        "master['apppoint'] = 2\n",
        "master['assistvalue'] = 3\n",
        "#master['BPS90'] = master.bps/(master.minutes/90)\n",
        "master"
      ],
      "metadata": {
        "id": "VOx8tP0bjttO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "f413879e-7a64-4e92-f2e9-e9b2b74d1d79"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos             name  cost  \\\n",
              "0      1                  Arsenal   F          Balogun   4.5   \n",
              "1      2                  Arsenal   D           C√©dric   4.0   \n",
              "2      3                  Arsenal   M         M.Elneny   4.4   \n",
              "3      4                  Arsenal   M     F√°bio Vieira   5.4   \n",
              "4      5                  Arsenal   D          Gabriel   5.0   \n",
              "..   ...                      ...  ..              ...   ...   \n",
              "667  572  Wolverhampton Wanderers   D         N.Semedo   4.5   \n",
              "668  573  Wolverhampton Wanderers   D             Toti   4.5   \n",
              "669  574  Wolverhampton Wanderers   M  Boubacar Traore   4.5   \n",
              "670  590  Wolverhampton Wanderers   F            Cunha   5.5   \n",
              "671  598  Wolverhampton Wanderers   D          Doherty   4.5   \n",
              "\n",
              "     selected_by_percent  expected_goals  expected_assists  goals_scored  \\\n",
              "0                    0.7            0.00              0.00             0   \n",
              "1                    0.4            0.00              0.00             0   \n",
              "2                    0.1            0.00              0.00             0   \n",
              "3                    0.1            0.00              0.00             0   \n",
              "4                   25.8            0.00              0.00             0   \n",
              "..                   ...             ...               ...           ...   \n",
              "667                  0.4            0.02              0.14             0   \n",
              "668                  0.1            0.00              0.00             0   \n",
              "669                  0.5            0.00              0.00             0   \n",
              "670                  0.6            0.94              0.36             0   \n",
              "671                  0.3            0.00              0.00             0   \n",
              "\n",
              "     assists  bps  ict_index  points  points_per_game  minutes  apppoint  \\\n",
              "0          0    0        0.0       0              0.0        0         2   \n",
              "1          0    0        0.0       0              0.0        0         2   \n",
              "2          0    0        0.0       0              0.0        0         2   \n",
              "3          0    0        0.0       0              0.0        0         2   \n",
              "4          0    7        1.3       2              1.0       24         2   \n",
              "..       ...  ...        ...     ...              ...      ...       ...   \n",
              "667        0   27        6.0       2              1.0      180         2   \n",
              "668        0    3        0.8       1              1.0       19         2   \n",
              "669        0    0        0.0       0              0.0        0         2   \n",
              "670        0   16       14.0       4              2.0      166         2   \n",
              "671        0    0        0.0       0              0.0        0         2   \n",
              "\n",
              "     assistvalue  \n",
              "0              3  \n",
              "1              3  \n",
              "2              3  \n",
              "3              3  \n",
              "4              3  \n",
              "..           ...  \n",
              "667            3  \n",
              "668            3  \n",
              "669            3  \n",
              "670            3  \n",
              "671            3  \n",
              "\n",
              "[672 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2cbba981-d3be-474d-89d5-da4a95084cd9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>C√©dric</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>F√°bio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>5.0</td>\n",
              "      <td>25.8</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>667</th>\n",
              "      <td>572</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>N.Semedo</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.14</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>27</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>180</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>668</th>\n",
              "      <td>573</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>Toti</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0.8</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>19</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>669</th>\n",
              "      <td>574</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Boubacar Traore</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>670</th>\n",
              "      <td>590</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>F</td>\n",
              "      <td>Cunha</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.94</td>\n",
              "      <td>0.36</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>14.0</td>\n",
              "      <td>4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>166</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>671</th>\n",
              "      <td>598</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>D</td>\n",
              "      <td>Doherty</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>672 rows √ó 17 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2cbba981-d3be-474d-89d5-da4a95084cd9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2cbba981-d3be-474d-89d5-da4a95084cd9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2cbba981-d3be-474d-89d5-da4a95084cd9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-28b75aad-e3b7-421c-bd32-708f9fe60670\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-28b75aad-e3b7-421c-bd32-708f9fe60670')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-28b75aad-e3b7-421c-bd32-708f9fe60670 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "gwfixtures = pd.read_csv(\"/fixtures_data.csv\")\n",
        "import requests\n",
        "import pandas as pd\n",
        "url = 'https://projects.fivethirtyeight.com/soccer-api/club/spi_global_rankings.csv'\n",
        "r = requests.get(url)\n",
        "open('temp.csv', 'wb').write(r.content)\n",
        "spi = pd.read_csv('temp.csv')\n",
        "spi['team_h'] = spi['name']\n",
        "spi['team_a'] = spi['name']\n",
        "spi= spi.replace('Newcastle', 'Newcastle United')\n",
        "spi= spi.replace('Wolverhampton','Wolverhampton Wanderers')\n",
        "spi= spi.replace('Tottenham Hotspur','Tottenham')\n",
        "spi= spi.replace('Leeds United','Leeds')\n",
        "spi= spi.replace('Leicester City','Leicester')\n",
        "spi= spi.replace('West Ham United','West Ham')\n",
        "spi= spi.replace('Brighton and Hove Albion','Brighton')\n",
        "spi= spi.replace('Norwich City','Norwich')\n",
        "spi= spi.replace('AFC Bournemouth','Bournemouth')\n",
        "Left_join = pd.merge(gwfixtures,\n",
        "                     spi,\n",
        "                     on ='team_h',\n",
        "                     how ='left')\n",
        "homespi = Left_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'league',\n",
        "  'off',\n",
        " 'def',\n",
        " 'name',\n",
        " 'team_a_y',])\n",
        "homespi.rename(columns = {'team_a_x':'team_a', 'spi':'Home SPI'}, inplace = True)\n",
        "away_join = pd.merge(homespi,\n",
        "                     spi,\n",
        "                     on ='team_a',\n",
        "                     how ='left')\n",
        "homesawayspi = away_join.drop(columns=[\n",
        " 'rank',\n",
        " 'prev_rank',\n",
        " 'name',\n",
        " 'league',\n",
        " 'off',\n",
        " 'def',\n",
        " 'team_h_y'])\n",
        "homesawayspi.rename(columns = {'team_h_x':'team_h', 'spi':'Away SPI'}, inplace = True)\n",
        "homesawayspi['Event'] = homesawayspi['event'].astype(str)\n",
        "gw2 = homesawayspi.query('Event==\"2.0\"')\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw2['League_Average']  = laverage\n",
        "gw2.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw2['home_difference'] = gw2.HomeSPI - gw2.League_Average\n",
        "gw2['away_difference'] = gw2.AwaySPI - gw2.League_Average\n",
        "gw2['home_adjustment'] = (gw2.home_difference + gw2.League_Average)/gw2.League_Average\n",
        "gw2['away_adjustment'] = (gw2.away_difference + gw2.League_Average)/gw2.League_Average\n",
        "gw2adjustments = gw2[['team_h', 'home_adjustment']].append(gw2[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw2adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw2adjustments"
      ],
      "metadata": {
        "id": "0oqPsFQJjyR0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "f71b243a-06a8-466f-8526-b900a96b6eb1"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-18-cdbc911cb85a>:49: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
            "<ipython-input-18-cdbc911cb85a>:52: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw2['League_Average']  = laverage\n",
            "<ipython-input-18-cdbc911cb85a>:53: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw2.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
            "<ipython-input-18-cdbc911cb85a>:54: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw2['home_difference'] = gw2.HomeSPI - gw2.League_Average\n",
            "<ipython-input-18-cdbc911cb85a>:55: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw2['away_difference'] = gw2.AwaySPI - gw2.League_Average\n",
            "<ipython-input-18-cdbc911cb85a>:56: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw2['home_adjustment'] = (gw2.home_difference + gw2.League_Average)/gw2.League_Average\n",
            "<ipython-input-18-cdbc911cb85a>:57: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  gw2['away_adjustment'] = (gw2.away_difference + gw2.League_Average)/gw2.League_Average\n",
            "<ipython-input-18-cdbc911cb85a>:58: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw2adjustments = gw2[['team_h', 'home_adjustment']].append(gw2[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  home_adjustment\n",
              "0         Nottingham Forest         0.780000\n",
              "1                    Fulham         0.948007\n",
              "2                 Liverpool         1.166318\n",
              "3   Wolverhampton Wanderers         0.820717\n",
              "4                 Tottenham         1.002480\n",
              "5           Manchester City         1.278461\n",
              "6               Aston Villa         1.101978\n",
              "7                  West Ham         0.988306\n",
              "8            Crystal Palace         1.020824\n",
              "9          Sheffield United         0.786115\n",
              "10                Brentford         1.071962\n",
              "11              Bournemouth         0.827943\n",
              "12                 Brighton         1.123934\n",
              "13        Manchester United         1.098921\n",
              "14         Newcastle United         1.163122\n",
              "15                  Everton         0.884223\n",
              "16                  Chelsea         1.053063\n",
              "17                  Arsenal         1.166179"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b857dd34-d701-451e-8e31-3c3857fbb4b9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>home_adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.780000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.948007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.166318</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.820717</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.002480</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.278461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.101978</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.988306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.020824</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.786115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.071962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.827943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.123934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.098921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.163122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.884223</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.053063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.166179</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b857dd34-d701-451e-8e31-3c3857fbb4b9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b857dd34-d701-451e-8e31-3c3857fbb4b9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b857dd34-d701-451e-8e31-3c3857fbb4b9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-985fb2de-94df-4d33-8ca1-f80f13cc70dd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-985fb2de-94df-4d33-8ca1-f80f13cc70dd')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-985fb2de-94df-4d33-8ca1-f80f13cc70dd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdf = pd.merge(master,\n",
        "                     gw2adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwd = rawdf.query('pos==\"F\"')\n",
        "rawfwd['xP'] = ((rawfwd.expected_goals * 4/2)+(rawfwd.expected_assists * 3/2) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
        "rawfwd = rawfwd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "rawmd = rawdf.query('pos==\"M\"')\n",
        "rawmd['xP'] = ((rawmd.expected_goals * 5/2)+(rawmd.expected_assists * 3/2) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
        "rawmd = rawmd.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "'home_adjustment'])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "#epltabledef['xCSP'] = (4 - (epltabledef.xGA * 4/1))\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgk= rawdfcs.query('pos==\"G\"')\n",
        "#rawgk['xP'] = ((rawgk.xCSP)+ (rawgk.apppoint)) * rawgk.home_adjustment\n",
        "rawgk['xP'] = rawgk.apppoint * rawgk.home_adjustment\n",
        "rawgk = rawgk.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "'home_adjustment'])\n",
        "rawdef= rawdfcs.query('pos==\"D\"')\n",
        "#rawdef['xP'] = ((rawdef.expected_goals * 6/1)+(rawdef.expected_assists * 3/1) +(rawdef.xCSP)+ (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "rawdef['xP'] = ((rawdef.expected_goals * 6/2)+(rawdef.expected_assists * 3/2) + (rawdef.apppoint) * rawdef.home_adjustment)\n",
        "rawdef = rawdef.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'team',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        " 'home_adjustment'])\n",
        "rawallplayers = pd.concat([rawfwd, rawmd, rawdef, rawgk], ignore_index=True)\n",
        "rawallplayers\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "AWnYpVh5kDzO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 875
        },
        "outputId": "3bbc3500-ffc0-46f4-921a-f83d6abd4784"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-19-7f899ed8dade>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawfwd['xP'] = ((rawfwd.expected_goals * 4/2)+(rawfwd.expected_assists * 3/2) + (rawfwd.apppoint)) * rawfwd.home_adjustment\n",
            "<ipython-input-19-7f899ed8dade>:15: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawmd['xP'] = ((rawmd.expected_goals * 5/2)+(rawmd.expected_assists * 3/2) + (rawmd.apppoint)) * rawmd.home_adjustment\n",
            "<ipython-input-19-7f899ed8dade>:48: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
            "<ipython-input-19-7f899ed8dade>:58: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawgk['xP'] = rawgk.apppoint * rawgk.home_adjustment\n",
            "<ipython-input-19-7f899ed8dade>:69: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawdef['xP'] = ((rawdef.expected_goals * 6/2)+(rawdef.expected_assists * 3/2) + (rawdef.apppoint) * rawdef.home_adjustment)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id pos     name  cost  selected_by_percent  goals_scored  assists  bps  \\\n",
              "0      1   F  Balogun   4.5                  0.7             0        0    0   \n",
              "1      8   F  G.Jesus   7.9                  1.2             0        0    0   \n",
              "2     13   F  Nketiah   5.5                  6.1             1        1   32   \n",
              "3     33   F   Archer   4.5                  5.4             0        0   -1   \n",
              "4     39   F    Davis   5.0                  0.3             0        0    0   \n",
              "..   ...  ..      ...   ...                  ...           ...      ...  ...   \n",
              "667  647   G    Anang   4.0                  0.0             0        0    0   \n",
              "668  546   G  Bentley   4.0                  0.4             0        0    0   \n",
              "669  564   G     King   4.0                  0.8             0        0    0   \n",
              "670  569   G  Jos√© S√°   5.0                  1.1             0        0   31   \n",
              "671  571   G   ≈†arkiƒá   4.0                  0.5             0        0    0   \n",
              "\n",
              "     ict_index  points  points_per_game  minutes        xP  \n",
              "0          0.0       0              0.0        0  2.332358  \n",
              "1          0.0       0              0.0        0  2.332358  \n",
              "2         12.1      13              6.5      150  4.763842  \n",
              "3          0.3       0              0.0        5  2.203956  \n",
              "4          0.0       0              0.0        0  2.203956  \n",
              "..         ...     ...              ...      ...       ...  \n",
              "667        0.0       0              0.0        0  1.976612  \n",
              "668        0.0       0              0.0        0  1.641433  \n",
              "669        0.0       0              0.0        0  1.641433  \n",
              "670        4.6       3              1.5      180  1.641433  \n",
              "671        0.0       0              0.0        0  1.641433  \n",
              "\n",
              "[672 rows x 13 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f5ba5d90-cf60-44cf-b92d-7af9d8f3f4bb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>xP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.332358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.332358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>32</td>\n",
              "      <td>12.1</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>150</td>\n",
              "      <td>4.763842</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>33</td>\n",
              "      <td>F</td>\n",
              "      <td>Archer</td>\n",
              "      <td>4.5</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5</td>\n",
              "      <td>2.203956</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>39</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.203956</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>667</th>\n",
              "      <td>647</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.976612</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>668</th>\n",
              "      <td>546</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.641433</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>669</th>\n",
              "      <td>564</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.641433</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>670</th>\n",
              "      <td>569</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>4.6</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>180</td>\n",
              "      <td>1.641433</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>671</th>\n",
              "      <td>571</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.641433</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>672 rows √ó 13 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f5ba5d90-cf60-44cf-b92d-7af9d8f3f4bb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f5ba5d90-cf60-44cf-b92d-7af9d8f3f4bb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f5ba5d90-cf60-44cf-b92d-7af9d8f3f4bb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-72d4a631-3b3f-4957-8af1-4cd332525322\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-72d4a631-3b3f-4957-8af1-4cd332525322')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-72d4a631-3b3f-4957-8af1-4cd332525322 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawgk1= rawdfcs.query('pos==\"G\"')\n",
        "rawgk1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "z3FgmhoCb3GG",
        "outputId": "8ccbdb2b-2063-4764-e14a-f6852f74368d"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos       name  cost  selected_by_percent  \\\n",
              "16    17                  Arsenal   G   Ramsdale   5.0                 17.7   \n",
              "17    18                  Arsenal   G  R√∫narsson   4.0                  0.2   \n",
              "29   113                  Arsenal   G       Raya   4.9                  3.7   \n",
              "33   646                  Arsenal   G       Hein   4.0                  0.0   \n",
              "51    49              Aston Villa   G   Martinez   5.0                  8.1   \n",
              "..   ...                      ...  ..        ...   ...                  ...   \n",
              "640  647                 West Ham   G      Anang   4.0                  0.0   \n",
              "643  546  Wolverhampton Wanderers   G    Bentley   4.0                  0.4   \n",
              "659  564  Wolverhampton Wanderers   G       King   4.0                  0.8   \n",
              "664  569  Wolverhampton Wanderers   G    Jos√© S√°   5.0                  1.1   \n",
              "666  571  Wolverhampton Wanderers   G     ≈†arkiƒá   4.0                  0.5   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "16              0.0              0.01             0        0   35        2.8   \n",
              "17              0.0              0.00             0        0    0        0.0   \n",
              "29              0.0              0.00             0        0    0        0.0   \n",
              "33              0.0              0.00             0        0    0        0.0   \n",
              "51              0.0              0.00             0        0   49        6.8   \n",
              "..              ...               ...           ...      ...  ...        ...   \n",
              "640             0.0              0.00             0        0    0        0.0   \n",
              "643             0.0              0.00             0        0    0        0.0   \n",
              "659             0.0              0.00             0        0    0        0.0   \n",
              "664             0.0              0.00             0        0   31        4.6   \n",
              "666             0.0              0.00             0        0    0        0.0   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  home_adjustment  \\\n",
              "16        8              4.0      180         2            3         1.166179   \n",
              "17        0              0.0        0         2            3         1.166179   \n",
              "29        0              0.0        0         2            3         1.166179   \n",
              "33        0              0.0        0         2            3         1.166179   \n",
              "51        9              4.5      180         2            3         1.101978   \n",
              "..      ...              ...      ...       ...          ...              ...   \n",
              "640       0              0.0        0         2            3         0.988306   \n",
              "643       0              0.0        0         2            3         0.820717   \n",
              "659       0              0.0        0         2            3         0.820717   \n",
              "664       3              1.5      180         2            3         0.820717   \n",
              "666       0              0.0        0         2            3         0.820717   \n",
              "\n",
              "     xGA  \n",
              "16   2.2  \n",
              "17   2.2  \n",
              "29   2.2  \n",
              "33   2.2  \n",
              "51   4.0  \n",
              "..   ...  \n",
              "640  3.8  \n",
              "643  4.4  \n",
              "659  4.4  \n",
              "664  4.4  \n",
              "666  4.4  \n",
              "\n",
              "[79 rows x 19 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5fb7f320-9abc-42a5-845b-fe3a912ecedd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xGA</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Ramsdale</td>\n",
              "      <td>5.0</td>\n",
              "      <td>17.7</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>35</td>\n",
              "      <td>2.8</td>\n",
              "      <td>8</td>\n",
              "      <td>4.0</td>\n",
              "      <td>180</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>R√∫narsson</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>113</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Raya</td>\n",
              "      <td>4.9</td>\n",
              "      <td>3.7</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>646</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>G</td>\n",
              "      <td>Hein</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>49</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>G</td>\n",
              "      <td>Martinez</td>\n",
              "      <td>5.0</td>\n",
              "      <td>8.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>49</td>\n",
              "      <td>6.8</td>\n",
              "      <td>9</td>\n",
              "      <td>4.5</td>\n",
              "      <td>180</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>640</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>3.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>643</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>4.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>659</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>4.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>664</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>4.6</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>180</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>4.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>666</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>4.4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>79 rows √ó 19 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5fb7f320-9abc-42a5-845b-fe3a912ecedd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5fb7f320-9abc-42a5-845b-fe3a912ecedd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5fb7f320-9abc-42a5-845b-fe3a912ecedd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d3cf942d-8c05-452a-a2a7-eaaeb2d0eb93\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d3cf942d-8c05-452a-a2a7-eaaeb2d0eb93')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d3cf942d-8c05-452a-a2a7-eaaeb2d0eb93 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter"
      ],
      "metadata": {
        "id": "ONZy1SvCDu6y"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "writer = ExcelWriter('notes.xlsx')"
      ],
      "metadata": {
        "id": "iubZBRlVEhiz"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawallplayers.to_excel(writer, sheet_name='Sheet1')\n",
        "gw2adjustments.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "slYEIma_E0uP",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "586901fb-5713-4f4c-eb72-26955ef7e8f3"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-23-114ca51f6f07>:6: FutureWarning: save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "  writer.save()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwfixtures"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "3udskoGrT73A",
        "outputId": "7090988b-d39b-4a3e-f547-c14981f53207"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     event            team_h                   team_a          kickoff_time\n",
              "0      NaN        Luton Town                  Burnley                   NaN\n",
              "1      NaN   Manchester City                Brentford                   NaN\n",
              "2      1.0           Burnley          Manchester City  2023-08-11T19:00:00Z\n",
              "3      1.0           Arsenal        Nottingham Forest  2023-08-12T12:00:00Z\n",
              "4      1.0       Bournemouth                 West Ham  2023-08-12T14:00:00Z\n",
              "..     ...               ...                      ...                   ...\n",
              "375   38.0    Crystal Palace              Aston Villa  2024-05-19T15:00:00Z\n",
              "376   38.0         Liverpool  Wolverhampton Wanderers  2024-05-19T15:00:00Z\n",
              "377   38.0        Luton Town                   Fulham  2024-05-19T15:00:00Z\n",
              "378   38.0   Manchester City                 West Ham  2024-05-19T15:00:00Z\n",
              "379   38.0  Sheffield United                Tottenham  2024-05-19T15:00:00Z\n",
              "\n",
              "[380 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dcec10b1-9025-4682-9ff8-1554eea6b26b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>event</th>\n",
              "      <th>team_h</th>\n",
              "      <th>team_a</th>\n",
              "      <th>kickoff_time</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2023-08-11T19:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>2023-08-12T12:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.0</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2023-08-12T14:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>375</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>376</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>379</th>\n",
              "      <td>38.0</td>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2024-05-19T15:00:00Z</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>380 rows √ó 4 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dcec10b1-9025-4682-9ff8-1554eea6b26b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-dcec10b1-9025-4682-9ff8-1554eea6b26b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-dcec10b1-9025-4682-9ff8-1554eea6b26b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b6f29d33-b54a-46c5-8c0c-fd2a33bd3655\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b6f29d33-b54a-46c5-8c0c-fd2a33bd3655')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b6f29d33-b54a-46c5-8c0c-fd2a33bd3655 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfallgw = pd.merge(master,\n",
        "                     gw2adjustments,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawfwdallgw = rawdfallgw.query('pos==\"F\"')\n",
        "rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/2)+(rawfwdallgw.expected_assists * 3/2) + (rawfwdallgw.apppoint))\n",
        "rawfwdallgw = rawfwdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "rawmdallgw = rawdfallgw.query('pos==\"M\"')\n",
        "rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/2)+(rawmdallgw.expected_assists * 3/2) + (rawmdallgw.apppoint))\n",
        "rawmdallgw = rawmdallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "])\n",
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltabledef = epltable.drop(columns=[ 'Rk',\n",
        " 'MP',\n",
        " 'W',\n",
        " 'D',\n",
        " 'L',\n",
        " 'GF',\n",
        " 'GA',\n",
        " 'GD',\n",
        " 'xG',\n",
        " 'xGD',\n",
        " 'xGD/90',\n",
        " 'Pts',\n",
        " 'Pts/MP',\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltabledef= epltabledef.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltabledef= epltabledef.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltabledef= epltabledef.replace('Leeds United','Leeds')\n",
        "epltabledef= epltabledef.replace('Leicester City','Leicester')\n",
        "epltabledef= epltabledef.replace('Manchester Utd','Manchester United')\n",
        "epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltabledef= epltabledef.replace('Nottham Forest','Nottingham Forest')\n",
        "#epltabledef['xCSP'] = (4 - (epltabledef.xGA * 4/1))\n",
        "epltabledef.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "rawdfcs = pd.merge(rawdf,\n",
        "                     epltabledef,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawgkallgw= rawdfcs.query('pos==\"G\"')\n",
        "rawgkallgw['xPallgw'] = (rawgkallgw.apppoint)\n",
        "#rawgkallgw['xPallgw'] = ((rawgkallgw.xCSP)+ (rawgkallgw.apppoint))\n",
        "rawgkallgw = rawgkallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        "  'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',\n",
        "])\n",
        "rawdefallgw= rawdfcs.query('pos==\"D\"')\n",
        "#rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/1)+(rawdefallgw.expected_assists * 3/1) +(rawdefallgw.xCSP)+ (rawdefallgw.apppoint)\n",
        "rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/2)+(rawdefallgw.expected_assists * 3/2) + (rawdefallgw.apppoint)\n",
        "rawdefallgw = rawdefallgw.drop(columns=[\n",
        " 'expected_goals',\n",
        " 'expected_assists',\n",
        " 'apppoint',\n",
        " 'assistvalue',\n",
        "  'xGA',])\n",
        "rawallplayersallgw = pd.concat([rawfwdallgw, rawmdallgw, rawdefallgw, rawgkallgw], ignore_index=True)\n",
        "rawallplayersallgw\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 875
        },
        "id": "xxPTwE3TZZC0",
        "outputId": "238f6751-cc92-49de-c455-348fb691ed4b"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-25-7ede294d9e65>:6: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawfwdallgw['xPallgw'] = ((rawfwdallgw.expected_goals * 4/2)+(rawfwdallgw.expected_assists * 3/2) + (rawfwdallgw.apppoint))\n",
            "<ipython-input-25-7ede294d9e65>:14: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawmdallgw['xPallgw'] = ((rawmdallgw.expected_goals * 5/2)+(rawmdallgw.expected_assists * 3/2) + (rawmdallgw.apppoint))\n",
            "<ipython-input-25-7ede294d9e65>:46: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltabledef['Squad'] = epltabledef['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
            "<ipython-input-25-7ede294d9e65>:55: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawgkallgw['xPallgw'] = (rawgkallgw.apppoint)\n",
            "<ipython-input-25-7ede294d9e65>:66: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  rawdefallgw['xPallgw'] = (rawdefallgw.expected_goals * 6/2)+(rawdefallgw.expected_assists * 3/2) + (rawdefallgw.apppoint)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.5                  0.7   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  1.2   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  6.1   \n",
              "3     33              Aston Villa   F   Archer   4.5                  5.4   \n",
              "4     39              Aston Villa   F    Davis   5.0                  0.3   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "667  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "668  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "669  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "670  569  Wolverhampton Wanderers   G  Jos√© S√°   5.0                  1.1   \n",
              "671  571  Wolverhampton Wanderers   G   ≈†arkiƒá   4.0                  0.5   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  points  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0       0              0.0        0   \n",
              "1               0        0    0        0.0       0              0.0        0   \n",
              "2               1        1   32       12.1      13              6.5      150   \n",
              "3               0        0   -1        0.3       0              0.0        5   \n",
              "4               0        0    0        0.0       0              0.0        0   \n",
              "..            ...      ...  ...        ...     ...              ...      ...   \n",
              "667             0        0    0        0.0       0              0.0        0   \n",
              "668             0        0    0        0.0       0              0.0        0   \n",
              "669             0        0    0        0.0       0              0.0        0   \n",
              "670             0        0   31        4.6       3              1.5      180   \n",
              "671             0        0    0        0.0       0              0.0        0   \n",
              "\n",
              "     home_adjustment  xPallgw  \n",
              "0           1.166179    2.000  \n",
              "1           1.166179    2.000  \n",
              "2           1.166179    4.085  \n",
              "3           1.101978    2.000  \n",
              "4           1.101978    2.000  \n",
              "..               ...      ...  \n",
              "667         0.988306    2.000  \n",
              "668         0.820717    2.000  \n",
              "669         0.820717    2.000  \n",
              "670         0.820717    2.000  \n",
              "671         0.820717    2.000  \n",
              "\n",
              "[672 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-26c61a07-25be-442a-9c1e-65803adf8ec6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>32</td>\n",
              "      <td>12.1</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>150</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>4.085</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>33</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Archer</td>\n",
              "      <td>4.5</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.101978</td>\n",
              "      <td>2.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>667</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.988306</td>\n",
              "      <td>2.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>668</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>669</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>670</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>4.6</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>180</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>671</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>672 rows √ó 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-26c61a07-25be-442a-9c1e-65803adf8ec6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-26c61a07-25be-442a-9c1e-65803adf8ec6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-26c61a07-25be-442a-9c1e-65803adf8ec6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6c53cdc0-a388-4b70-a007-5ea22d65a9f0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6c53cdc0-a388-4b70-a007-5ea22d65a9f0')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6c53cdc0-a388-4b70-a007-5ea22d65a9f0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawmdallgw"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "ZtNrmQMhefCc",
        "outputId": "2fb9d6b2-a9e1-4e4b-dd2e-8a25485641dc"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos             name  cost  \\\n",
              "2      3                  Arsenal   M         M.Elneny   4.4   \n",
              "3      4                  Arsenal   M     F√°bio Vieira   5.4   \n",
              "5      6                  Arsenal   M          Havertz   7.4   \n",
              "8      9                  Arsenal   M         Jorginho   5.5   \n",
              "10    11                  Arsenal   M       Marquinhos   4.5   \n",
              "..   ...                      ...  ..              ...   ...   \n",
              "661  566  Wolverhampton Wanderers   M       Matheus N.   5.0   \n",
              "662  567  Wolverhampton Wanderers   M             Neto   5.5   \n",
              "663  568  Wolverhampton Wanderers   M          Podence   5.4   \n",
              "665  570  Wolverhampton Wanderers   M          Sarabia   5.0   \n",
              "669  574  Wolverhampton Wanderers   M  Boubacar Traore   4.5   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  points  \\\n",
              "2                    0.1             0        0    0        0.0       0   \n",
              "3                    0.1             0        0    0        0.0       0   \n",
              "5                    3.7             0        0   10        7.4       4   \n",
              "8                    0.2             0        0    5        0.4       1   \n",
              "10                   0.1             0        0    0        0.0       0   \n",
              "..                   ...           ...      ...  ...        ...     ...   \n",
              "661                  0.2             0        0   15        8.9       1   \n",
              "662                  0.3             0        0   26       18.7       3   \n",
              "663                  0.1             0        0    0        0.0       0   \n",
              "665                  0.2             0        1   24       12.8       7   \n",
              "669                  0.5             0        0    0        0.0       0   \n",
              "\n",
              "     points_per_game  minutes  home_adjustment  xPallgw  \n",
              "2                0.0        0         1.166179    2.000  \n",
              "3                0.0        0         1.166179    2.000  \n",
              "5                2.0      180         1.166179    2.610  \n",
              "8                1.0       11         1.166179    2.015  \n",
              "10               0.0        0         1.166179    2.000  \n",
              "..               ...      ...              ...      ...  \n",
              "661              0.5      180         0.820717    2.500  \n",
              "662              1.5      180         0.820717    4.910  \n",
              "663              0.0        0         0.820717    2.000  \n",
              "665              3.5       97         0.820717    3.130  \n",
              "669              0.0        0         0.820717    2.000  \n",
              "\n",
              "[288 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8cebd216-626e-4d9f-8f43-24554e1d4f4d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>home_adjustment</th>\n",
              "      <th>xPallgw</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>M.Elneny</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>F√°bio Vieira</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Havertz</td>\n",
              "      <td>7.4</td>\n",
              "      <td>3.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>7.4</td>\n",
              "      <td>4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>180</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.610</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Jorginho</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>11</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Marquinhos</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.166179</td>\n",
              "      <td>2.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>661</th>\n",
              "      <td>566</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Matheus N.</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>8.9</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5</td>\n",
              "      <td>180</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>662</th>\n",
              "      <td>567</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Neto</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>18.7</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>180</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>4.910</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>663</th>\n",
              "      <td>568</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Podence</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>665</th>\n",
              "      <td>570</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Sarabia</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>24</td>\n",
              "      <td>12.8</td>\n",
              "      <td>7</td>\n",
              "      <td>3.5</td>\n",
              "      <td>97</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>3.130</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>669</th>\n",
              "      <td>574</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Boubacar Traore</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.820717</td>\n",
              "      <td>2.000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>288 rows √ó 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8cebd216-626e-4d9f-8f43-24554e1d4f4d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8cebd216-626e-4d9f-8f43-24554e1d4f4d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8cebd216-626e-4d9f-8f43-24554e1d4f4d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3fcfe6dd-6f0e-4b71-bdaa-904f371c4808\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3fcfe6dd-6f0e-4b71-bdaa-904f371c4808')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3fcfe6dd-6f0e-4b71-bdaa-904f371c4808 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw2blanks = [['Burnley', 0], ['Luton Town', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "blanks2 = pd.DataFrame(gw2blanks, columns=['team', 'gw2adjustment'])\n",
        "blanks2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "xkGffHD0iXWI",
        "outputId": "6d26b6ed-4d5c-4740-a947-d9cd763d109a"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         team  gw2adjustment\n",
              "0     Burnley              0\n",
              "1  Luton Town              0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3016f9bd-5097-4f1b-90aa-c5f51eed1f58\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw2adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3016f9bd-5097-4f1b-90aa-c5f51eed1f58')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3016f9bd-5097-4f1b-90aa-c5f51eed1f58 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3016f9bd-5097-4f1b-90aa-c5f51eed1f58');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-94bfa3da-1807-433d-8f9d-5a1535fefa93\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-94bfa3da-1807-433d-8f9d-5a1535fefa93')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-94bfa3da-1807-433d-8f9d-5a1535fefa93 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw2adjustments = pd.concat([gw2adjustments, blanks2])\n",
        "#gw2adjustments = gw2adjustments.reset_index(drop=True)\n",
        "#gw2adjustments"
      ],
      "metadata": {
        "id": "JNr3eV5Rir58"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw3 = homesawayspi.query('Event==\"3.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw3['League_Average']  = laverage\n",
        "gw3.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw3['home_difference'] = gw3.HomeSPI - gw3.League_Average\n",
        "gw3['away_difference'] = gw3.AwaySPI - gw3.League_Average\n",
        "gw3['home_adjustment'] = (gw3.home_difference - gw3.away_difference + gw3.League_Average)/gw3.League_Average\n",
        "gw3['away_adjustment'] = (gw3.away_difference - gw3.home_difference+ gw3.League_Average)/gw3.League_Average\n",
        "gw3adjustments = gw3[['team_h', 'home_adjustment']].append(gw3[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw3adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw3adjustments.rename(columns = {'home_adjustment':'gw3adjustment'}, inplace = True)\n",
        "gw3adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "bg97rds1kb73",
        "outputId": "6a5e85d4-a49d-4396-8fe6-3de3375f6ac6"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-29-a2637fad4f3e>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw3adjustments = gw3[['team_h', 'home_adjustment']].append(gw3[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw3adjustment\n",
              "0                   Chelsea       1.282095\n",
              "1               Bournemouth       0.825462\n",
              "2                   Arsenal       1.218172\n",
              "3                 Brentford       1.051138\n",
              "4                   Everton       1.063506\n",
              "5         Manchester United       1.318921\n",
              "6                  Brighton       1.135628\n",
              "7                   Burnley       0.772656\n",
              "8          Sheffield United       0.507653\n",
              "9          Newcastle United       0.996804\n",
              "10               Luton Town       0.717905\n",
              "11                Tottenham       1.174538\n",
              "12                   Fulham       0.781828\n",
              "13           Crystal Palace       0.948862\n",
              "14  Wolverhampton Wanderers       0.936494\n",
              "15        Nottingham Forest       0.681079\n",
              "16                 West Ham       0.864372\n",
              "17              Aston Villa       1.227344\n",
              "18          Manchester City       1.492347\n",
              "19                Liverpool       1.003196"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ab1cc8bf-1582-4b52-8c99-91e3e8fcf9c0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw3adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.825462</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.218172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.051138</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.063506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.318921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.135628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.772656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.507653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.996804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.174538</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.781828</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.948862</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.936494</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.681079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.864372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.227344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.492347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.003196</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ab1cc8bf-1582-4b52-8c99-91e3e8fcf9c0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ab1cc8bf-1582-4b52-8c99-91e3e8fcf9c0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ab1cc8bf-1582-4b52-8c99-91e3e8fcf9c0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-667a5c18-f274-402b-97ab-d85179c46c88\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-667a5c18-f274-402b-97ab-d85179c46c88')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-667a5c18-f274-402b-97ab-d85179c46c88 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "##gw3blanks = [['Newcastle United', 0], ['Manchester United', 0], ['Brentford', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "##blanks = pd.DataFrame(gw3blanks, columns=['team', 'gw3adjustment'])\n",
        "##blanks"
      ],
      "metadata": {
        "id": "iCizQgwMD84B"
      },
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#gw3adjustments = pd.concat([gw3adjustments, blanks])\n",
        "#gw3adjustments = gw3adjustments.reset_index(drop=True)\n",
        "gw3adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "iyc8Xy80D_GR",
        "outputId": "26dc3582-e808-4b73-8500-f4ebfb00d420"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw3adjustment\n",
              "0                   Chelsea       1.282095\n",
              "1               Bournemouth       0.825462\n",
              "2                   Arsenal       1.218172\n",
              "3                 Brentford       1.051138\n",
              "4                   Everton       1.063506\n",
              "5         Manchester United       1.318921\n",
              "6                  Brighton       1.135628\n",
              "7                   Burnley       0.772656\n",
              "8          Sheffield United       0.507653\n",
              "9          Newcastle United       0.996804\n",
              "10               Luton Town       0.717905\n",
              "11                Tottenham       1.174538\n",
              "12                   Fulham       0.781828\n",
              "13           Crystal Palace       0.948862\n",
              "14  Wolverhampton Wanderers       0.936494\n",
              "15        Nottingham Forest       0.681079\n",
              "16                 West Ham       0.864372\n",
              "17              Aston Villa       1.227344\n",
              "18          Manchester City       1.492347\n",
              "19                Liverpool       1.003196"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c67a1780-5af9-4214-9d29-d498d5e93ec7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw3adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.825462</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.218172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.051138</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.063506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.318921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.135628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.772656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.507653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.996804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.174538</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.781828</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.948862</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.936494</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.681079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.864372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.227344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.492347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.003196</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c67a1780-5af9-4214-9d29-d498d5e93ec7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c67a1780-5af9-4214-9d29-d498d5e93ec7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c67a1780-5af9-4214-9d29-d498d5e93ec7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-65ab8d26-1c3d-44d1-b8f1-82782938366f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-65ab8d26-1c3d-44d1-b8f1-82782938366f')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-65ab8d26-1c3d-44d1-b8f1-82782938366f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw3adjustments = gw3adjustments.groupby('team', as_index=False)['gw3adjustment'].aggregate('sum')\n",
        "gw3adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "6x3Lj7jPTCVC",
        "outputId": "6e040510-b241-4450-99c3-9379a98ce3be"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw3adjustment\n",
              "0                   Arsenal       1.218172\n",
              "1               Aston Villa       1.227344\n",
              "2               Bournemouth       0.825462\n",
              "3                 Brentford       1.051138\n",
              "4                  Brighton       1.135628\n",
              "5                   Burnley       0.772656\n",
              "6                   Chelsea       1.282095\n",
              "7            Crystal Palace       0.948862\n",
              "8                   Everton       1.063506\n",
              "9                    Fulham       0.781828\n",
              "10                Liverpool       1.003196\n",
              "11               Luton Town       0.717905\n",
              "12          Manchester City       1.492347\n",
              "13        Manchester United       1.318921\n",
              "14         Newcastle United       0.996804\n",
              "15        Nottingham Forest       0.681079\n",
              "16         Sheffield United       0.507653\n",
              "17                Tottenham       1.174538\n",
              "18                 West Ham       0.864372\n",
              "19  Wolverhampton Wanderers       0.936494"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2442037e-c4a0-49f9-92b8-7c711ff2a7da\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw3adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.218172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.227344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.825462</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.051138</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.135628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.772656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.282095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.948862</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.063506</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.781828</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.003196</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.717905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.492347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.318921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.996804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.681079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.507653</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.174538</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.864372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.936494</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2442037e-c4a0-49f9-92b8-7c711ff2a7da')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2442037e-c4a0-49f9-92b8-7c711ff2a7da button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2442037e-c4a0-49f9-92b8-7c711ff2a7da');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-08206493-efa2-4055-b899-a1a43622d96c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-08206493-efa2-4055-b899-a1a43622d96c')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-08206493-efa2-4055-b899-a1a43622d96c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw4 = homesawayspi.query('Event==\"4.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw4['League_Average']  = laverage\n",
        "gw4.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw4['home_difference'] = gw4.HomeSPI - gw4.League_Average\n",
        "gw4['away_difference'] = gw4.AwaySPI - gw4.League_Average\n",
        "gw4['home_adjustment'] = (gw4.home_difference - gw4.away_difference + gw4.League_Average)/gw4.League_Average\n",
        "gw4['away_adjustment'] = (gw4.away_difference - gw4.home_difference+ gw4.League_Average)/gw4.League_Average\n",
        "gw4adjustments = gw4[['team_h', 'home_adjustment']].append(gw4[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw4adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw4adjustments.rename(columns = {'home_adjustment':'gw4adjustment'}, inplace = True)\n",
        "gw4adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "pzyah3Z-kgct",
        "outputId": "97481497-bf12-4754-a844-0da6a73c8110"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-33-fa94501b1623>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw4adjustments = gw4[['team_h', 'home_adjustment']].append(gw4[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw4adjustment\n",
              "0                Luton Town       0.782662\n",
              "1          Sheffield United       0.901892\n",
              "2                 Brentford       1.244019\n",
              "3                   Burnley       0.872154\n",
              "4                   Chelsea       1.273063\n",
              "5           Manchester City       1.330454\n",
              "6                  Brighton       0.960812\n",
              "7            Crystal Palace       1.200107\n",
              "8                 Liverpool       1.064340\n",
              "9                   Arsenal       1.067258\n",
              "10                 West Ham       1.217338\n",
              "11                  Everton       1.098108\n",
              "12              Bournemouth       0.755981\n",
              "13                Tottenham       1.127846\n",
              "14        Nottingham Forest       0.726937\n",
              "15                   Fulham       0.669546\n",
              "16         Newcastle United       1.039188\n",
              "17  Wolverhampton Wanderers       0.799893\n",
              "18              Aston Villa       0.935660\n",
              "19        Manchester United       0.932742"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c5696b9a-b361-4672-8fdf-162fe27e1384\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw4adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.782662</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.901892</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.244019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.872154</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.273063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.330454</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>0.960812</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.200107</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.064340</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.067258</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.217338</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.098108</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.755981</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.127846</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.726937</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.669546</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.039188</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.799893</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0.935660</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0.932742</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c5696b9a-b361-4672-8fdf-162fe27e1384')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c5696b9a-b361-4672-8fdf-162fe27e1384 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c5696b9a-b361-4672-8fdf-162fe27e1384');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cdf5f6d2-da28-46f1-a0ee-5095134351d7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cdf5f6d2-da28-46f1-a0ee-5095134351d7')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cdf5f6d2-da28-46f1-a0ee-5095134351d7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw5 = homesawayspi.query('Event==\"5.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw5['League_Average']  = laverage\n",
        "gw5.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw5['home_difference'] = gw5.HomeSPI - gw5.League_Average\n",
        "gw5['away_difference'] = gw5.AwaySPI - gw5.League_Average\n",
        "gw5['home_adjustment'] = (gw5.home_difference - gw5.away_difference + gw5.League_Average)/gw5.League_Average\n",
        "gw5['away_adjustment'] = (gw5.away_difference - gw5.home_difference+ gw5.League_Average)/gw5.League_Average\n",
        "gw5adjustments = gw5[['team_h', 'home_adjustment']].append(gw5[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw5adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw5adjustments.rename(columns = {'home_adjustment':'gw5adjustment'}, inplace = True)\n",
        "gw5adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "7uE1H7R4Gems",
        "outputId": "7c7c00eb-824c-41a9-caa0-faa8e5312235"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-34-a468e0b0b9ba>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw5adjustments = gw5[['team_h', 'home_adjustment']].append(gw5[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw5adjustment\n",
              "0   Wolverhampton Wanderers       0.654399\n",
              "1               Aston Villa       1.081155\n",
              "2                    Fulham       1.177039\n",
              "3         Manchester United       0.974987\n",
              "4                 Tottenham       1.216366\n",
              "5                  West Ham       0.709845\n",
              "6                   Everton       0.718044\n",
              "7               Bournemouth       0.774880\n",
              "8          Newcastle United       1.091160\n",
              "9         Nottingham Forest       0.905366\n",
              "10                Liverpool       1.345601\n",
              "11           Crystal Palace       0.918845\n",
              "12               Luton Town       0.822961\n",
              "13                 Brighton       1.025013\n",
              "14         Sheffield United       0.783634\n",
              "15          Manchester City       1.290155\n",
              "16                  Arsenal       1.281956\n",
              "17                  Chelsea       1.225120\n",
              "18                Brentford       0.908840\n",
              "19                  Burnley       1.094634"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-588a0efb-fad4-4652-863b-73117c91fe78\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw5adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.654399</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.081155</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>1.177039</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>0.974987</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.216366</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.709845</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.718044</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.774880</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.091160</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.905366</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.345601</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.918845</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.822961</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.025013</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.783634</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.290155</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.281956</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.225120</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>0.908840</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>1.094634</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-588a0efb-fad4-4652-863b-73117c91fe78')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-588a0efb-fad4-4652-863b-73117c91fe78 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-588a0efb-fad4-4652-863b-73117c91fe78');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f27f0893-8257-4b3d-881f-db871e9df3b8\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f27f0893-8257-4b3d-881f-db871e9df3b8')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f27f0893-8257-4b3d-881f-db871e9df3b8 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5blanks = [['Chelsea', 0], ['Manchester United', 0], ['Manchester City', 0], ['Brighton', 0]]\n",
        "\n",
        "# Create the pandas DataFrame\n",
        "#blanks32 = pd.DataFrame(gw5blanks, columns=['team', 'gw5adjustment'])\n",
        "#blanks32"
      ],
      "metadata": {
        "id": "p00QYlZ7UbAu"
      },
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#gw5adjustments = pd.concat([gw5adjustments, blanks32])\n",
        "#gw5adjustments = gw5adjustments.reset_index(drop=True)\n",
        "#gw5adjustments"
      ],
      "metadata": {
        "id": "xh_AhxKJU0VW"
      },
      "execution_count": 36,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gw6= homesawayspi.query('Event==\"6.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw6['League_Average']  = laverage\n",
        "gw6.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw6['home_difference'] = gw6.HomeSPI - gw6.League_Average\n",
        "gw6['away_difference'] = gw6.AwaySPI - gw6.League_Average\n",
        "gw6['home_adjustment'] = (gw6.home_difference - gw6.away_difference + gw6.League_Average)/gw6.League_Average\n",
        "gw6['away_adjustment'] = (gw6.away_difference - gw6.home_difference+ gw6.League_Average)/gw6.League_Average\n",
        "gw6adjustments = gw6[['team_h', 'home_adjustment']].append(gw6[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw6adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw6adjustments.rename(columns = {'home_adjustment':'gw6adjustment'}, inplace = True)\n",
        "gw6adjustments"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        },
        "id": "OPB6Pz8sGZNe",
        "outputId": "37360cfc-ce82-4891-a376-64aedad4ca86"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-37-34edfb59e920>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw6adjustments = gw6[['team_h', 'home_adjustment']].append(gw6[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw6adjustment\n",
              "0                   Chelsea       0.951085\n",
              "1            Crystal Palace       1.072817\n",
              "2                Luton Town       0.950251\n",
              "3           Manchester City       1.498461\n",
              "4                 Brentford       1.187739\n",
              "5                   Burnley       0.775713\n",
              "6                   Arsenal       1.163699\n",
              "7                  Brighton       1.295992\n",
              "8                 Liverpool       1.178012\n",
              "9          Sheffield United       0.622993\n",
              "10              Aston Villa       1.048915\n",
              "11                   Fulham       0.927183\n",
              "12  Wolverhampton Wanderers       1.049749\n",
              "13        Nottingham Forest       0.501539\n",
              "14                  Everton       0.812261\n",
              "15        Manchester United       1.224287\n",
              "16                Tottenham       0.836301\n",
              "17              Bournemouth       0.704008\n",
              "18                 West Ham       0.821988\n",
              "19         Newcastle United       1.377007"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6e0d5f98-0cb3-4ad1-b782-30c298a35f93\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw6adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>0.951085</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>1.072817</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.950251</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.498461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.187739</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.775713</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.163699</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.295992</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.178012</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.622993</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.048915</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.927183</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>1.049749</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.501539</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Everton</td>\n",
              "      <td>0.812261</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.224287</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.836301</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.704008</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.821988</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.377007</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6e0d5f98-0cb3-4ad1-b782-30c298a35f93')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6e0d5f98-0cb3-4ad1-b782-30c298a35f93 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6e0d5f98-0cb3-4ad1-b782-30c298a35f93');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b3fe3487-8f5c-4b89-ac95-616b79464473\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b3fe3487-8f5c-4b89-ac95-616b79464473')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b3fe3487-8f5c-4b89-ac95-616b79464473 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gw7 = homesawayspi.query('Event==\"7.0\"')\n",
        "pd.options.mode.chained_assignment = None  # default='warn'\n",
        "PLSPI = spi.query('league==\"Barclays Premier League\"')\n",
        "PLSPI['League Average']  = PLSPI[\"spi\"].mean()\n",
        "laverage = PLSPI[\"spi\"].mean()\n",
        "PLSPI['League Average'].astype(int)\n",
        "gw7['League_Average']  = laverage\n",
        "gw7.rename(columns = {'Home SPI':'HomeSPI', 'Away SPI':'AwaySPI'}, inplace = True)\n",
        "gw7['home_difference'] = gw7.HomeSPI - gw7.League_Average\n",
        "gw7['away_difference'] = gw7.AwaySPI - gw7.League_Average\n",
        "gw7['home_adjustment'] = (gw7.home_difference - gw7.away_difference + gw7.League_Average)/gw7.League_Average\n",
        "gw7['away_adjustment'] = (gw7.away_difference - gw7.home_difference+ gw7.League_Average)/gw7.League_Average\n",
        "gw7adjustments = gw7[['team_h', 'home_adjustment']].append(gw7[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n",
        "gw7adjustments.rename(columns = {'team_h':'team'}, inplace = True)\n",
        "gw7adjustments.rename(columns = {'home_adjustment':'gw7adjustment'}, inplace = True)\n",
        "gw7adjustments = gw7adjustments.groupby('team', as_index=False)['gw7adjustment'].aggregate('sum')\n",
        "gw7adjustments"
      ],
      "metadata": {
        "id": "fZikfIMI6SbU",
        "outputId": "88526413-a834-41e6-c66e-c4a5b2cbabbe",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 711
        }
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-38-00e0dd2bb680>:13: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  gw7adjustments = gw7[['team_h', 'home_adjustment']].append(gw7[['team_a','away_adjustment']].set_axis(['team_h', 'home_adjustment'], axis=1)).reset_index(drop=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw7adjustment\n",
              "0                   Arsenal       1.338236\n",
              "1               Aston Villa       0.978044\n",
              "2               Bournemouth       0.661764\n",
              "3                 Brentford       1.291962\n",
              "4                  Brighton       1.021956\n",
              "5                   Burnley       0.711512\n",
              "6                   Chelsea       1.105056\n",
              "7            Crystal Palace       0.921903\n",
              "8                   Everton       1.113255\n",
              "9                    Fulham       0.894944\n",
              "10                Liverpool       1.163838\n",
              "11               Luton Town       0.886745\n",
              "12          Manchester City       1.457745\n",
              "13        Manchester United       1.078097\n",
              "14         Newcastle United       1.288488\n",
              "15        Nottingham Forest       0.708038\n",
              "16         Sheffield United       0.797809\n",
              "17                Tottenham       0.836162\n",
              "18                 West Ham       1.202191\n",
              "19  Wolverhampton Wanderers       0.542255"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-49aafa96-b8b6-4c3a-a833-1e91b9543ec3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw7adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.338236</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>0.978044</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.661764</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.291962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.021956</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.711512</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.105056</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.921903</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.113255</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.894944</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.163838</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.886745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.457745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.078097</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>1.288488</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.708038</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.797809</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>0.836162</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>1.202191</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.542255</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-49aafa96-b8b6-4c3a-a833-1e91b9543ec3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-49aafa96-b8b6-4c3a-a833-1e91b9543ec3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-49aafa96-b8b6-4c3a-a833-1e91b9543ec3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6c351519-e31f-4b6e-92de-77d53167349a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6c351519-e31f-4b6e-92de-77d53167349a')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6c351519-e31f-4b6e-92de-77d53167349a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "gwadjustments37 = pd.merge(gw3adjustments,gw4adjustments, on ='team')\n",
        "gwadjustments37 = pd.merge(gwadjustments37,gw5adjustments, on ='team')\n",
        "gwadjustments37 = pd.merge(gwadjustments37,gw6adjustments, on ='team')\n",
        "gwadjustments37 = pd.merge(gwadjustments37,gw7adjustments, on ='team')\n",
        "gwadjustments37"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "P6_WVsnNkztJ",
        "outputId": "91621e47-f5a7-4df9-9b3f-359b1d35c765"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       team  gw3adjustment  gw4adjustment  gw5adjustment  \\\n",
              "0                   Arsenal       1.218172       1.067258       1.281956   \n",
              "1               Aston Villa       1.227344       0.935660       1.081155   \n",
              "2               Bournemouth       0.825462       0.755981       0.774880   \n",
              "3                 Brentford       1.051138       1.244019       0.908840   \n",
              "4                  Brighton       1.135628       0.960812       1.025013   \n",
              "5                   Burnley       0.772656       0.872154       1.094634   \n",
              "6                   Chelsea       1.282095       1.273063       1.225120   \n",
              "7            Crystal Palace       0.948862       1.200107       0.918845   \n",
              "8                   Everton       1.063506       1.098108       0.718044   \n",
              "9                    Fulham       0.781828       0.669546       1.177039   \n",
              "10                Liverpool       1.003196       1.064340       1.345601   \n",
              "11               Luton Town       0.717905       0.782662       0.822961   \n",
              "12          Manchester City       1.492347       1.330454       1.290155   \n",
              "13        Manchester United       1.318921       0.932742       0.974987   \n",
              "14         Newcastle United       0.996804       1.039188       1.091160   \n",
              "15        Nottingham Forest       0.681079       0.726937       0.905366   \n",
              "16         Sheffield United       0.507653       0.901892       0.783634   \n",
              "17                Tottenham       1.174538       1.127846       1.216366   \n",
              "18                 West Ham       0.864372       1.217338       0.709845   \n",
              "19  Wolverhampton Wanderers       0.936494       0.799893       0.654399   \n",
              "\n",
              "    gw6adjustment  gw7adjustment  \n",
              "0        1.163699       1.338236  \n",
              "1        1.048915       0.978044  \n",
              "2        0.704008       0.661764  \n",
              "3        1.187739       1.291962  \n",
              "4        1.295992       1.021956  \n",
              "5        0.775713       0.711512  \n",
              "6        0.951085       1.105056  \n",
              "7        1.072817       0.921903  \n",
              "8        0.812261       1.113255  \n",
              "9        0.927183       0.894944  \n",
              "10       1.178012       1.163838  \n",
              "11       0.950251       0.886745  \n",
              "12       1.498461       1.457745  \n",
              "13       1.224287       1.078097  \n",
              "14       1.377007       1.288488  \n",
              "15       0.501539       0.708038  \n",
              "16       0.622993       0.797809  \n",
              "17       0.836301       0.836162  \n",
              "18       0.821988       1.202191  \n",
              "19       1.049749       0.542255  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0638af58-eb6c-40c0-a1e2-2c11f12c6ada\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>team</th>\n",
              "      <th>gw3adjustment</th>\n",
              "      <th>gw4adjustment</th>\n",
              "      <th>gw5adjustment</th>\n",
              "      <th>gw6adjustment</th>\n",
              "      <th>gw7adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Arsenal</td>\n",
              "      <td>1.218172</td>\n",
              "      <td>1.067258</td>\n",
              "      <td>1.281956</td>\n",
              "      <td>1.163699</td>\n",
              "      <td>1.338236</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>1.227344</td>\n",
              "      <td>0.935660</td>\n",
              "      <td>1.081155</td>\n",
              "      <td>1.048915</td>\n",
              "      <td>0.978044</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>0.825462</td>\n",
              "      <td>0.755981</td>\n",
              "      <td>0.774880</td>\n",
              "      <td>0.704008</td>\n",
              "      <td>0.661764</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brentford</td>\n",
              "      <td>1.051138</td>\n",
              "      <td>1.244019</td>\n",
              "      <td>0.908840</td>\n",
              "      <td>1.187739</td>\n",
              "      <td>1.291962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Brighton</td>\n",
              "      <td>1.135628</td>\n",
              "      <td>0.960812</td>\n",
              "      <td>1.025013</td>\n",
              "      <td>1.295992</td>\n",
              "      <td>1.021956</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Burnley</td>\n",
              "      <td>0.772656</td>\n",
              "      <td>0.872154</td>\n",
              "      <td>1.094634</td>\n",
              "      <td>0.775713</td>\n",
              "      <td>0.711512</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chelsea</td>\n",
              "      <td>1.282095</td>\n",
              "      <td>1.273063</td>\n",
              "      <td>1.225120</td>\n",
              "      <td>0.951085</td>\n",
              "      <td>1.105056</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>0.948862</td>\n",
              "      <td>1.200107</td>\n",
              "      <td>0.918845</td>\n",
              "      <td>1.072817</td>\n",
              "      <td>0.921903</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Everton</td>\n",
              "      <td>1.063506</td>\n",
              "      <td>1.098108</td>\n",
              "      <td>0.718044</td>\n",
              "      <td>0.812261</td>\n",
              "      <td>1.113255</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Fulham</td>\n",
              "      <td>0.781828</td>\n",
              "      <td>0.669546</td>\n",
              "      <td>1.177039</td>\n",
              "      <td>0.927183</td>\n",
              "      <td>0.894944</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Liverpool</td>\n",
              "      <td>1.003196</td>\n",
              "      <td>1.064340</td>\n",
              "      <td>1.345601</td>\n",
              "      <td>1.178012</td>\n",
              "      <td>1.163838</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Luton Town</td>\n",
              "      <td>0.717905</td>\n",
              "      <td>0.782662</td>\n",
              "      <td>0.822961</td>\n",
              "      <td>0.950251</td>\n",
              "      <td>0.886745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Manchester City</td>\n",
              "      <td>1.492347</td>\n",
              "      <td>1.330454</td>\n",
              "      <td>1.290155</td>\n",
              "      <td>1.498461</td>\n",
              "      <td>1.457745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Manchester United</td>\n",
              "      <td>1.318921</td>\n",
              "      <td>0.932742</td>\n",
              "      <td>0.974987</td>\n",
              "      <td>1.224287</td>\n",
              "      <td>1.078097</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>0.996804</td>\n",
              "      <td>1.039188</td>\n",
              "      <td>1.091160</td>\n",
              "      <td>1.377007</td>\n",
              "      <td>1.288488</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>0.681079</td>\n",
              "      <td>0.726937</td>\n",
              "      <td>0.905366</td>\n",
              "      <td>0.501539</td>\n",
              "      <td>0.708038</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sheffield United</td>\n",
              "      <td>0.507653</td>\n",
              "      <td>0.901892</td>\n",
              "      <td>0.783634</td>\n",
              "      <td>0.622993</td>\n",
              "      <td>0.797809</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Tottenham</td>\n",
              "      <td>1.174538</td>\n",
              "      <td>1.127846</td>\n",
              "      <td>1.216366</td>\n",
              "      <td>0.836301</td>\n",
              "      <td>0.836162</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>West Ham</td>\n",
              "      <td>0.864372</td>\n",
              "      <td>1.217338</td>\n",
              "      <td>0.709845</td>\n",
              "      <td>0.821988</td>\n",
              "      <td>1.202191</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>0.936494</td>\n",
              "      <td>0.799893</td>\n",
              "      <td>0.654399</td>\n",
              "      <td>1.049749</td>\n",
              "      <td>0.542255</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0638af58-eb6c-40c0-a1e2-2c11f12c6ada')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0638af58-eb6c-40c0-a1e2-2c11f12c6ada button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0638af58-eb6c-40c0-a1e2-2c11f12c6ada');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d07e94d4-81a6-41e6-9cdd-bfd31f506d7d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d07e94d4-81a6-41e6-9cdd-bfd31f506d7d')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d07e94d4-81a6-41e6-9cdd-bfd31f506d7d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x = pd.merge(rawallplayersallgw,\n",
        "                     gwadjustments37,\n",
        "                     on ='team',\n",
        "                     how ='left')\n",
        "rawdfgw228x.rename(columns = {'gw3adjustment_y':'gw3adjustment'}, inplace = True)\n",
        "rawdfgw228x = rawdfgw228x.drop(columns=[\n",
        " 'home_adjustment',\n",
        "  ])\n",
        "\n",
        "rawdfgw228x = rawdfgw228x.round(1)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 493
        },
        "id": "-b-0jux2PKIX",
        "outputId": "f5bc3068-3aeb-4123-898a-eefd28948453"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.5                  0.7   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  1.2   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  6.1   \n",
              "3     33              Aston Villa   F   Archer   4.5                  5.4   \n",
              "4     39              Aston Villa   F    Davis   5.0                  0.3   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "667  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "668  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "669  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "670  569  Wolverhampton Wanderers   G  Jos√© S√°   5.0                  1.1   \n",
              "671  571  Wolverhampton Wanderers   G   ≈†arkiƒá   4.0                  0.5   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  points  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0       0              0.0        0   \n",
              "1               0        0    0        0.0       0              0.0        0   \n",
              "2               1        1   32       12.1      13              6.5      150   \n",
              "3               0        0   -1        0.3       0              0.0        5   \n",
              "4               0        0    0        0.0       0              0.0        0   \n",
              "..            ...      ...  ...        ...     ...              ...      ...   \n",
              "667             0        0    0        0.0       0              0.0        0   \n",
              "668             0        0    0        0.0       0              0.0        0   \n",
              "669             0        0    0        0.0       0              0.0        0   \n",
              "670             0        0   31        4.6       3              1.5      180   \n",
              "671             0        0    0        0.0       0              0.0        0   \n",
              "\n",
              "     xPallgw  gw3adjustment  gw4adjustment  gw5adjustment  gw6adjustment  \\\n",
              "0        2.0            1.2            1.1            1.3            1.2   \n",
              "1        2.0            1.2            1.1            1.3            1.2   \n",
              "2        4.1            1.2            1.1            1.3            1.2   \n",
              "3        2.0            1.2            0.9            1.1            1.0   \n",
              "4        2.0            1.2            0.9            1.1            1.0   \n",
              "..       ...            ...            ...            ...            ...   \n",
              "667      2.0            0.9            1.2            0.7            0.8   \n",
              "668      2.0            0.9            0.8            0.7            1.0   \n",
              "669      2.0            0.9            0.8            0.7            1.0   \n",
              "670      2.0            0.9            0.8            0.7            1.0   \n",
              "671      2.0            0.9            0.8            0.7            1.0   \n",
              "\n",
              "     gw7adjustment  \n",
              "0              1.3  \n",
              "1              1.3  \n",
              "2              1.3  \n",
              "3              1.0  \n",
              "4              1.0  \n",
              "..             ...  \n",
              "667            1.2  \n",
              "668            0.5  \n",
              "669            0.5  \n",
              "670            0.5  \n",
              "671            0.5  \n",
              "\n",
              "[672 rows x 19 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5a292686-cdc7-4696-b590-95a43c32a475\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>gw3adjustment</th>\n",
              "      <th>gw4adjustment</th>\n",
              "      <th>gw5adjustment</th>\n",
              "      <th>gw6adjustment</th>\n",
              "      <th>gw7adjustment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>32</td>\n",
              "      <td>12.1</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>150</td>\n",
              "      <td>4.1</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>1.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>33</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Archer</td>\n",
              "      <td>4.5</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>667</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.8</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>668</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>669</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>670</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>4.6</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>180</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>671</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>672 rows √ó 19 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a292686-cdc7-4696-b590-95a43c32a475')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5a292686-cdc7-4696-b590-95a43c32a475 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5a292686-cdc7-4696-b590-95a43c32a475');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-051ce62a-33e4-468f-afae-4f044107b0d2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-051ce62a-33e4-468f-afae-4f044107b0d2')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-051ce62a-33e4-468f-afae-4f044107b0d2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x['gw3'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw3adjustment)+2)\n",
        "rawdfgw228x['gw4'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw4adjustment)+2)\n",
        "rawdfgw228x['gw5'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw5adjustment)+2)\n",
        "rawdfgw228x['gw6'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw6adjustment)+2)\n",
        "rawdfgw228x['gw7'] = (((rawdfgw228x.xPallgw - 2)*rawdfgw228x.gw7adjustment)+2)\n",
        "rawdfgw228x['5GW Total'] = rawdfgw228x.gw7 + rawdfgw228x.gw5 + rawdfgw228x.gw6 + rawdfgw228x.gw4 + rawdfgw228x.gw3\n",
        "rawdfgw228x = rawdfgw228x.drop(columns=[\n",
        "  'gw5adjustment',\n",
        "  'gw6adjustment',\n",
        "  'gw7adjustment',\n",
        "  'gw3adjustment',\n",
        "  'gw4adjustment'])\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Dgw1xB0YUN9D",
        "outputId": "b8238aaf-f301-407a-d289-ae694da408e3"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.5                  0.7   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  1.2   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  6.1   \n",
              "3     33              Aston Villa   F   Archer   4.5                  5.4   \n",
              "4     39              Aston Villa   F    Davis   5.0                  0.3   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "667  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "668  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "669  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "670  569  Wolverhampton Wanderers   G  Jos√© S√°   5.0                  1.1   \n",
              "671  571  Wolverhampton Wanderers   G   ≈†arkiƒá   4.0                  0.5   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  points  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0       0              0.0        0   \n",
              "1               0        0    0        0.0       0              0.0        0   \n",
              "2               1        1   32       12.1      13              6.5      150   \n",
              "3               0        0   -1        0.3       0              0.0        5   \n",
              "4               0        0    0        0.0       0              0.0        0   \n",
              "..            ...      ...  ...        ...     ...              ...      ...   \n",
              "667             0        0    0        0.0       0              0.0        0   \n",
              "668             0        0    0        0.0       0              0.0        0   \n",
              "669             0        0    0        0.0       0              0.0        0   \n",
              "670             0        0   31        4.6       3              1.5      180   \n",
              "671             0        0    0        0.0       0              0.0        0   \n",
              "\n",
              "     xPallgw   gw3   gw4   gw5   gw6   gw7  5GW Total  \n",
              "0        2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "2        4.1  4.52  4.31  4.73  4.52  4.73      22.81  \n",
              "3        2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "..       ...   ...   ...   ...   ...   ...        ...  \n",
              "667      2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "668      2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "669      2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "670      2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "671      2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "\n",
              "[672 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-db6c1065-cb5a-4c78-8d8b-a5769572548f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>gw3</th>\n",
              "      <th>gw4</th>\n",
              "      <th>gw5</th>\n",
              "      <th>gw6</th>\n",
              "      <th>gw7</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>32</td>\n",
              "      <td>12.1</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>150</td>\n",
              "      <td>4.1</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.31</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.73</td>\n",
              "      <td>22.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>33</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Archer</td>\n",
              "      <td>4.5</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>667</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>668</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>669</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>670</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>4.6</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>180</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>671</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>672 rows √ó 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-db6c1065-cb5a-4c78-8d8b-a5769572548f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-db6c1065-cb5a-4c78-8d8b-a5769572548f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-db6c1065-cb5a-4c78-8d8b-a5769572548f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9b714d00-be16-40b6-9352-02860e1bfbd1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9b714d00-be16-40b6-9352-02860e1bfbd1')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9b714d00-be16-40b6-9352-02860e1bfbd1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.drop_duplicates(subset='name', keep='last', inplace=True)\n",
        "rawdfgw228x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "Jud88GRHgLWf",
        "outputId": "50fe2711-1582-424d-fe4d-b57c45d57ceb"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.5                  0.7   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  1.2   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  6.1   \n",
              "3     33              Aston Villa   F   Archer   4.5                  5.4   \n",
              "4     39              Aston Villa   F    Davis   5.0                  0.3   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "667  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "668  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "669  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "670  569  Wolverhampton Wanderers   G  Jos√© S√°   5.0                  1.1   \n",
              "671  571  Wolverhampton Wanderers   G   ≈†arkiƒá   4.0                  0.5   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  points  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0       0              0.0        0   \n",
              "1               0        0    0        0.0       0              0.0        0   \n",
              "2               1        1   32       12.1      13              6.5      150   \n",
              "3               0        0   -1        0.3       0              0.0        5   \n",
              "4               0        0    0        0.0       0              0.0        0   \n",
              "..            ...      ...  ...        ...     ...              ...      ...   \n",
              "667             0        0    0        0.0       0              0.0        0   \n",
              "668             0        0    0        0.0       0              0.0        0   \n",
              "669             0        0    0        0.0       0              0.0        0   \n",
              "670             0        0   31        4.6       3              1.5      180   \n",
              "671             0        0    0        0.0       0              0.0        0   \n",
              "\n",
              "     xPallgw   gw3   gw4   gw5   gw6   gw7  5GW Total  \n",
              "0        2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "2        4.1  4.52  4.31  4.73  4.52  4.73      22.81  \n",
              "3        2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "..       ...   ...   ...   ...   ...   ...        ...  \n",
              "667      2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "668      2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "669      2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "670      2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "671      2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "\n",
              "[655 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f38e05c4-6879-47b6-9179-d82ab8868066\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>gw3</th>\n",
              "      <th>gw4</th>\n",
              "      <th>gw5</th>\n",
              "      <th>gw6</th>\n",
              "      <th>gw7</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>32</td>\n",
              "      <td>12.1</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>150</td>\n",
              "      <td>4.1</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.31</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.73</td>\n",
              "      <td>22.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>33</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Archer</td>\n",
              "      <td>4.5</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>667</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>668</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>669</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>670</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>4.6</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>180</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>671</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>655 rows √ó 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f38e05c4-6879-47b6-9179-d82ab8868066')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f38e05c4-6879-47b6-9179-d82ab8868066 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f38e05c4-6879-47b6-9179-d82ab8868066');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d3596b81-debc-49f1-870c-e01578cf85f5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d3596b81-debc-49f1-870c-e01578cf85f5')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d3596b81-debc-49f1-870c-e01578cf85f5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pandas import ExcelWriter\n",
        "writer = ExcelWriter('API model.xlsx')\n",
        "rawdfgw228x.to_excel(writer, sheet_name='Sheet1')\n",
        "gwadjustments37.to_excel(writer, sheet_name='Sheet2')\n",
        "#fplwithunderstat.to_excel(writer, sheet_name='Sheet3')\n",
        "\n",
        "# Close the Pandas Excel writer and output the Excel file.\n",
        "writer.save()"
      ],
      "metadata": {
        "id": "tdXsMsuwaWa4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d74d1530-e1ea-48d7-a30a-06532c78cb43"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-45-140b2df402ae>:8: FutureWarning: save is not part of the public API, usage can give unexpected results and will be removed in a future version\n",
            "  writer.save()\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#from google.colab import drive\n",
        "#drive.mount('/content/drive')"
      ],
      "metadata": {
        "id": "GzSzE5_Ckuq3"
      },
      "execution_count": 46,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import shutil"
      ],
      "metadata": {
        "id": "xSIwXnyAk2op"
      },
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#shutil.copy(\"/content/API model.xlsx\",\"/content/drive/MyDrive/FPL\")"
      ],
      "metadata": {
        "id": "O724A90vk3b4"
      },
      "execution_count": 48,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x.nlargest(50, '5GW Total')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "4ULMO_eqJXIT",
        "outputId": "f906a092-5656-4f9f-b7f3-b25fbb6ce087"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos             name  cost  \\\n",
              "144  108                Brentford   M           Mbeumo   6.6   \n",
              "245  308                Liverpool   M            Salah  12.5   \n",
              "161  140                 Brighton   M            March   6.6   \n",
              "283  373        Manchester United   M      B.Fernandes   8.5   \n",
              "243  303                Liverpool   M        Luis D√≠az   7.6   \n",
              "13   119                Brentford   F            Wissa   6.1   \n",
              "163  143                 Brighton   M           Mitoma   6.6   \n",
              "271  353          Manchester City   M            Foden   7.5   \n",
              "32   225           Crystal Palace   F          Edouard   5.5   \n",
              "186  199                  Chelsea   M             Enzo   5.0   \n",
              "16   135                 Brighton   F       Jo√£o Pedro   5.6   \n",
              "29   211                  Chelsea   F        N.Jackson   7.0   \n",
              "93    14                  Arsenal   M         √òdegaard   8.5   \n",
              "58   355          Manchester City   F          Haaland  14.0   \n",
              "202  226           Crystal Palace   M              Eze   6.5   \n",
              "107   43              Aston Villa   M     Douglas Luiz   5.5   \n",
              "227  270                   Fulham   M  De Cordova-Reid   5.5   \n",
              "37   258                  Everton   F           Maupay   5.0   \n",
              "357  539                 West Ham   M        L.Paquet√°   6.0   \n",
              "311  603         Newcastle United   M           Barnes   6.5   \n",
              "387   36              Aston Villa   D             Cash   4.5   \n",
              "416  131                 Brighton   D        Estupi√±an   5.2   \n",
              "2     13                  Arsenal   F          Nketiah   5.5   \n",
              "238  294                Liverpool   M         Diogo J.   8.0   \n",
              "110   50              Aston Villa   M           McGinn   5.5   \n",
              "158  134                 Brighton   M            Gross   6.4   \n",
              "439  195                  Chelsea   D         Chilwell   5.7   \n",
              "116  599              Aston Villa   M            Diaby   6.6   \n",
              "57   343          Manchester City   F        J.Alvarez   6.5   \n",
              "279  365          Manchester City   M          Rodrigo   5.6   \n",
              "344  504                Tottenham   M         Maddison   7.6   \n",
              "15   132                 Brighton   F         Ferguson   6.0   \n",
              "347  513                Tottenham   M             Sarr   4.5   \n",
              "352  526                 West Ham   M            Bowen   7.0   \n",
              "292  396        Manchester United   M         Rashford   9.0   \n",
              "515  395        Manchester United   D         R.Varane   5.0   \n",
              "10    85              Bournemouth   F          Solanke   6.5   \n",
              "86   590  Wolverhampton Wanderers   F            Cunha   5.5   \n",
              "103   34              Aston Villa   M           Bailey   5.5   \n",
              "62   415         Newcastle United   F             Isak   7.7   \n",
              "309  429         Newcastle United   M           Tonali   5.5   \n",
              "50   326               Luton Town   F           Morris   5.5   \n",
              "568  511                Tottenham   D           Romero   4.5   \n",
              "447  611                  Chelsea   D           Disasi   5.0   \n",
              "212  249                  Everton   M       A.Doucoure   5.5   \n",
              "366  557  Wolverhampton Wanderers   M         Hee Chan   5.5   \n",
              "96    19                  Arsenal   M             Saka   8.6   \n",
              "369  565  Wolverhampton Wanderers   M           Lemina   5.0   \n",
              "156  130                 Brighton   M           Enciso   5.4   \n",
              "405   90                Brentford   D             Ajer   4.5   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  points  \\\n",
              "144                 18.1             3        0   57       24.6      23   \n",
              "245                 29.3             1        1   30       20.2      10   \n",
              "161                  8.4             3        0   73       27.8      24   \n",
              "283                 23.5             0        0   26       17.1       4   \n",
              "243                 12.5             2        0   48       17.5      15   \n",
              "13                  12.1             2        1   69       22.1      20   \n",
              "163                 42.5             1        2   66       26.2      17   \n",
              "271                 11.0             0        1   41       23.1      12   \n",
              "32                   2.1             1        0   27       22.9       9   \n",
              "186                  4.7             0        0   27       18.2       1   \n",
              "16                  24.5             1        0   25       13.8       7   \n",
              "29                  16.8             0        0    0       10.3       2   \n",
              "93                  22.8             1        0   43       14.0      13   \n",
              "58                  91.1             2        0   57       20.2      15   \n",
              "202                 13.4             0        0   35       20.0       5   \n",
              "107                  2.5             1        0   40       12.8       8   \n",
              "227                  0.2             1        0   25        9.3       8   \n",
              "37                   1.2             0        0   -5       12.0       3   \n",
              "357                  1.5             1        0   34       15.4       7   \n",
              "311                  4.4             1        1   35       10.5      11   \n",
              "387                  7.7             0        0   28        5.8       5   \n",
              "416                 60.9             1        2   67       26.8      18   \n",
              "2                    6.1             1        1   32       12.1      13   \n",
              "238                  3.3             1        1   36       18.7      13   \n",
              "110                  0.6             1        0   37       10.0      12   \n",
              "158                  3.1             0        0   30       16.8       3   \n",
              "439                 25.0             0        1   37       12.2       8   \n",
              "116                  9.0             1        0   34       17.7      10   \n",
              "57                   7.6             1        1   58       23.0      12   \n",
              "279                 10.0             1        1   61       18.4      16   \n",
              "344                 14.1             0        2   43       24.3      12   \n",
              "15                   5.9             1        0   24        8.8       6   \n",
              "347                  1.6             1        0   40       15.4      11   \n",
              "352                  4.8             1        0   33       17.2      11   \n",
              "292                 44.7             0        0    1       12.2       5   \n",
              "515                  6.0             1        0   55       12.3      15   \n",
              "10                   2.9             1        1   33       19.2      12   \n",
              "86                   0.6             0        0   16       14.0       4   \n",
              "103                  1.3             1        1   40        9.8      15   \n",
              "62                  27.4             2        0   58       13.6      15   \n",
              "309                  3.5             1        0   31        9.9       7   \n",
              "50                   1.4             1        0   28        9.1       8   \n",
              "568                  2.8             1        0   41       10.5      13   \n",
              "447                  5.5             1        0   33       10.3      11   \n",
              "212                  0.2             0        0    9        9.2       4   \n",
              "366                  0.1             1        0   21        9.8       6   \n",
              "96                  66.4             1        0   52       21.0      13   \n",
              "369                  0.0             0        0   20        4.7       3   \n",
              "156                  3.6             0        2   30        9.4       8   \n",
              "405                  0.3             0        1   22        5.2       5   \n",
              "\n",
              "     points_per_game  minutes  xPallgw    gw3    gw4   gw5    gw6    gw7  \\\n",
              "144             11.5      180     10.3  11.13  11.96  9.47  11.96  12.79   \n",
              "245              5.0      161      6.4   6.40   6.84  7.72   7.28   7.28   \n",
              "161             12.0      163      5.8   6.18   5.80  5.80   6.94   5.80   \n",
              "283              2.0      180      5.7   6.81   5.33  5.70   6.44   6.07   \n",
              "243              7.5      161      5.5   5.50   5.85  6.55   6.20   6.20   \n",
              "13              10.0      149      5.4   5.74   6.08  5.06   6.08   6.42   \n",
              "163              8.5      170      5.3   5.63   5.30  5.30   6.29   5.30   \n",
              "271              6.0      180      4.5   5.75   5.25  5.25   5.75   5.75   \n",
              "32               4.5      180      5.5   5.15   6.20  5.15   5.85   5.15   \n",
              "186              0.5      180      4.9   5.77   5.77  5.48   4.90   5.19   \n",
              "16               3.5      120      5.0   5.30   5.00  5.00   5.90   5.00   \n",
              "29               1.0      180      4.7   5.51   5.51  5.24   4.70   4.97   \n",
              "93               6.5      179      4.6   5.12   4.86  5.38   5.12   5.38   \n",
              "58               7.5      169      4.2   5.30   4.86  4.86   5.30   5.30   \n",
              "202              2.5      180      5.0   4.70   5.60  4.70   5.30   4.70   \n",
              "107              4.0      153      4.8   5.36   4.52  5.08   4.80   4.80   \n",
              "227              4.0      112      5.2   4.56   4.24  5.84   4.88   4.88   \n",
              "37               1.5      110      5.0   5.30   5.30  4.10   4.40   5.30   \n",
              "357              3.5      180      5.0   4.70   5.60  4.10   4.40   5.60   \n",
              "311              5.5       56      4.4   4.40   4.40  4.64   5.36   5.12   \n",
              "387              2.5      176      4.6   5.12   4.34  4.86   4.60   4.60   \n",
              "416              9.0      180      4.4   4.64   4.40  4.40   5.12   4.40   \n",
              "2                6.5      150      4.1   4.52   4.31  4.73   4.52   4.73   \n",
              "238              6.5      140      4.1   4.10   4.31  4.73   4.52   4.52   \n",
              "110              6.0      153      4.3   4.76   4.07  4.53   4.30   4.30   \n",
              "158              1.5      170      4.2   4.42   4.20  4.20   4.86   4.20   \n",
              "439              4.0      149      4.0   4.60   4.60  4.40   4.00   4.20   \n",
              "116              5.0      149      4.2   4.64   3.98  4.42   4.20   4.20   \n",
              "57               6.0      180      3.6   4.40   4.08  4.08   4.40   4.40   \n",
              "279              8.0      180      3.6   4.40   4.08  4.08   4.40   4.40   \n",
              "344              6.0      180      4.2   4.64   4.42  4.64   3.76   3.76   \n",
              "15               3.0       35      4.0   4.20   4.00  4.00   4.60   4.00   \n",
              "347              5.5       90      4.0   4.40   4.20  4.40   3.60   3.60   \n",
              "352              5.5      180      4.1   3.89   4.52  3.47   3.68   4.52   \n",
              "292              2.5      171      3.8   4.34   3.62  3.80   4.16   3.98   \n",
              "515              7.5      180      3.8   4.34   3.62  3.80   4.16   3.98   \n",
              "10               6.0      180      4.5   4.00   4.00  4.00   3.75   3.75   \n",
              "86               2.0      166      4.4   4.16   3.92  3.68   4.40   3.20   \n",
              "103              7.5      107      3.8   4.16   3.62  3.98   3.80   3.80   \n",
              "62               7.5      132      3.6   3.60   3.60  3.76   4.24   4.08   \n",
              "309              3.5      156      3.6   3.60   3.60  3.76   4.24   4.08   \n",
              "50               8.0       90      4.2   3.54   3.76  3.76   4.20   3.98   \n",
              "568              6.5      103      3.8   4.16   3.98  4.16   3.44   3.44   \n",
              "447              5.5      180      3.5   3.95   3.95  3.80   3.50   3.65   \n",
              "212              2.0      180      3.8   3.98   3.98  3.26   3.44   3.98   \n",
              "366              3.0       62      4.2   3.98   3.76  3.54   4.20   3.10   \n",
              "96               6.5      178      3.3   3.56   3.43  3.69   3.56   3.69   \n",
              "369              1.5      180      4.0   3.80   3.60  3.40   4.00   3.00   \n",
              "156              4.0       68      3.4   3.54   3.40  3.40   3.82   3.40   \n",
              "405              2.5       84      3.3   3.43   3.56  3.17   3.56   3.69   \n",
              "\n",
              "     5GW Total  \n",
              "144      57.31  \n",
              "245      35.52  \n",
              "161      30.52  \n",
              "283      30.35  \n",
              "243      30.30  \n",
              "13       29.38  \n",
              "163      27.82  \n",
              "271      27.75  \n",
              "32       27.50  \n",
              "186      27.11  \n",
              "16       26.20  \n",
              "29       25.93  \n",
              "93       25.86  \n",
              "58       25.62  \n",
              "202      25.00  \n",
              "107      24.56  \n",
              "227      24.40  \n",
              "37       24.40  \n",
              "357      24.40  \n",
              "311      23.92  \n",
              "387      23.52  \n",
              "416      22.96  \n",
              "2        22.81  \n",
              "238      22.18  \n",
              "110      21.96  \n",
              "158      21.88  \n",
              "439      21.80  \n",
              "116      21.44  \n",
              "57       21.36  \n",
              "279      21.36  \n",
              "344      21.22  \n",
              "15       20.80  \n",
              "347      20.20  \n",
              "352      20.08  \n",
              "292      19.90  \n",
              "515      19.90  \n",
              "10       19.50  \n",
              "86       19.36  \n",
              "103      19.36  \n",
              "62       19.28  \n",
              "309      19.28  \n",
              "50       19.24  \n",
              "568      19.18  \n",
              "447      18.85  \n",
              "212      18.64  \n",
              "366      18.58  \n",
              "96       17.93  \n",
              "369      17.80  \n",
              "156      17.56  \n",
              "405      17.41  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-72f76b2c-db9d-428a-adf4-1744be4e4495\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>gw3</th>\n",
              "      <th>gw4</th>\n",
              "      <th>gw5</th>\n",
              "      <th>gw6</th>\n",
              "      <th>gw7</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>144</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.6</td>\n",
              "      <td>18.1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>57</td>\n",
              "      <td>24.6</td>\n",
              "      <td>23</td>\n",
              "      <td>11.5</td>\n",
              "      <td>180</td>\n",
              "      <td>10.3</td>\n",
              "      <td>11.13</td>\n",
              "      <td>11.96</td>\n",
              "      <td>9.47</td>\n",
              "      <td>11.96</td>\n",
              "      <td>12.79</td>\n",
              "      <td>57.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>245</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.5</td>\n",
              "      <td>29.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>30</td>\n",
              "      <td>20.2</td>\n",
              "      <td>10</td>\n",
              "      <td>5.0</td>\n",
              "      <td>161</td>\n",
              "      <td>6.4</td>\n",
              "      <td>6.40</td>\n",
              "      <td>6.84</td>\n",
              "      <td>7.72</td>\n",
              "      <td>7.28</td>\n",
              "      <td>7.28</td>\n",
              "      <td>35.52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>161</th>\n",
              "      <td>140</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>March</td>\n",
              "      <td>6.6</td>\n",
              "      <td>8.4</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>73</td>\n",
              "      <td>27.8</td>\n",
              "      <td>24</td>\n",
              "      <td>12.0</td>\n",
              "      <td>163</td>\n",
              "      <td>5.8</td>\n",
              "      <td>6.18</td>\n",
              "      <td>5.80</td>\n",
              "      <td>5.80</td>\n",
              "      <td>6.94</td>\n",
              "      <td>5.80</td>\n",
              "      <td>30.52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>283</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.5</td>\n",
              "      <td>23.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>17.1</td>\n",
              "      <td>4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>180</td>\n",
              "      <td>5.7</td>\n",
              "      <td>6.81</td>\n",
              "      <td>5.33</td>\n",
              "      <td>5.70</td>\n",
              "      <td>6.44</td>\n",
              "      <td>6.07</td>\n",
              "      <td>30.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>243</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis D√≠az</td>\n",
              "      <td>7.6</td>\n",
              "      <td>12.5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>48</td>\n",
              "      <td>17.5</td>\n",
              "      <td>15</td>\n",
              "      <td>7.5</td>\n",
              "      <td>161</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.50</td>\n",
              "      <td>5.85</td>\n",
              "      <td>6.55</td>\n",
              "      <td>6.20</td>\n",
              "      <td>6.20</td>\n",
              "      <td>30.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>6.1</td>\n",
              "      <td>12.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>69</td>\n",
              "      <td>22.1</td>\n",
              "      <td>20</td>\n",
              "      <td>10.0</td>\n",
              "      <td>149</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.74</td>\n",
              "      <td>6.08</td>\n",
              "      <td>5.06</td>\n",
              "      <td>6.08</td>\n",
              "      <td>6.42</td>\n",
              "      <td>29.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>163</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.6</td>\n",
              "      <td>42.5</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>66</td>\n",
              "      <td>26.2</td>\n",
              "      <td>17</td>\n",
              "      <td>8.5</td>\n",
              "      <td>170</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.63</td>\n",
              "      <td>5.30</td>\n",
              "      <td>5.30</td>\n",
              "      <td>6.29</td>\n",
              "      <td>5.30</td>\n",
              "      <td>27.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>271</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.5</td>\n",
              "      <td>11.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>41</td>\n",
              "      <td>23.1</td>\n",
              "      <td>12</td>\n",
              "      <td>6.0</td>\n",
              "      <td>180</td>\n",
              "      <td>4.5</td>\n",
              "      <td>5.75</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.75</td>\n",
              "      <td>5.75</td>\n",
              "      <td>27.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>225</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>F</td>\n",
              "      <td>Edouard</td>\n",
              "      <td>5.5</td>\n",
              "      <td>2.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>27</td>\n",
              "      <td>22.9</td>\n",
              "      <td>9</td>\n",
              "      <td>4.5</td>\n",
              "      <td>180</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.15</td>\n",
              "      <td>6.20</td>\n",
              "      <td>5.15</td>\n",
              "      <td>5.85</td>\n",
              "      <td>5.15</td>\n",
              "      <td>27.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>186</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>27</td>\n",
              "      <td>18.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5</td>\n",
              "      <td>180</td>\n",
              "      <td>4.9</td>\n",
              "      <td>5.77</td>\n",
              "      <td>5.77</td>\n",
              "      <td>5.48</td>\n",
              "      <td>4.90</td>\n",
              "      <td>5.19</td>\n",
              "      <td>27.11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Jo√£o Pedro</td>\n",
              "      <td>5.6</td>\n",
              "      <td>24.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>13.8</td>\n",
              "      <td>7</td>\n",
              "      <td>3.5</td>\n",
              "      <td>120</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.30</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.90</td>\n",
              "      <td>5.00</td>\n",
              "      <td>26.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>7.0</td>\n",
              "      <td>16.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>10.3</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>180</td>\n",
              "      <td>4.7</td>\n",
              "      <td>5.51</td>\n",
              "      <td>5.51</td>\n",
              "      <td>5.24</td>\n",
              "      <td>4.70</td>\n",
              "      <td>4.97</td>\n",
              "      <td>25.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>√òdegaard</td>\n",
              "      <td>8.5</td>\n",
              "      <td>22.8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>43</td>\n",
              "      <td>14.0</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>179</td>\n",
              "      <td>4.6</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.86</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.38</td>\n",
              "      <td>25.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>58</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.0</td>\n",
              "      <td>91.1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>57</td>\n",
              "      <td>20.2</td>\n",
              "      <td>15</td>\n",
              "      <td>7.5</td>\n",
              "      <td>169</td>\n",
              "      <td>4.2</td>\n",
              "      <td>5.30</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.86</td>\n",
              "      <td>5.30</td>\n",
              "      <td>5.30</td>\n",
              "      <td>25.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>202</th>\n",
              "      <td>226</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>M</td>\n",
              "      <td>Eze</td>\n",
              "      <td>6.5</td>\n",
              "      <td>13.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>35</td>\n",
              "      <td>20.0</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5</td>\n",
              "      <td>180</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.60</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.30</td>\n",
              "      <td>4.70</td>\n",
              "      <td>25.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>107</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.5</td>\n",
              "      <td>2.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>12.8</td>\n",
              "      <td>8</td>\n",
              "      <td>4.0</td>\n",
              "      <td>153</td>\n",
              "      <td>4.8</td>\n",
              "      <td>5.36</td>\n",
              "      <td>4.52</td>\n",
              "      <td>5.08</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.80</td>\n",
              "      <td>24.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>227</th>\n",
              "      <td>270</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>M</td>\n",
              "      <td>De Cordova-Reid</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>9.3</td>\n",
              "      <td>8</td>\n",
              "      <td>4.0</td>\n",
              "      <td>112</td>\n",
              "      <td>5.2</td>\n",
              "      <td>4.56</td>\n",
              "      <td>4.24</td>\n",
              "      <td>5.84</td>\n",
              "      <td>4.88</td>\n",
              "      <td>4.88</td>\n",
              "      <td>24.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>258</td>\n",
              "      <td>Everton</td>\n",
              "      <td>F</td>\n",
              "      <td>Maupay</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-5</td>\n",
              "      <td>12.0</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>110</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.30</td>\n",
              "      <td>5.30</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.30</td>\n",
              "      <td>24.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>357</th>\n",
              "      <td>539</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>L.Paquet√°</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>15.4</td>\n",
              "      <td>7</td>\n",
              "      <td>3.5</td>\n",
              "      <td>180</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.60</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.60</td>\n",
              "      <td>24.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>311</th>\n",
              "      <td>603</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Barnes</td>\n",
              "      <td>6.5</td>\n",
              "      <td>4.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>35</td>\n",
              "      <td>10.5</td>\n",
              "      <td>11</td>\n",
              "      <td>5.5</td>\n",
              "      <td>56</td>\n",
              "      <td>4.4</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.64</td>\n",
              "      <td>5.36</td>\n",
              "      <td>5.12</td>\n",
              "      <td>23.92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>387</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>4.5</td>\n",
              "      <td>7.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>28</td>\n",
              "      <td>5.8</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5</td>\n",
              "      <td>176</td>\n",
              "      <td>4.6</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.60</td>\n",
              "      <td>23.52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>416</th>\n",
              "      <td>131</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Estupi√±an</td>\n",
              "      <td>5.2</td>\n",
              "      <td>60.9</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>67</td>\n",
              "      <td>26.8</td>\n",
              "      <td>18</td>\n",
              "      <td>9.0</td>\n",
              "      <td>180</td>\n",
              "      <td>4.4</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.40</td>\n",
              "      <td>22.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>32</td>\n",
              "      <td>12.1</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>150</td>\n",
              "      <td>4.1</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.31</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.73</td>\n",
              "      <td>22.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>238</th>\n",
              "      <td>294</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Diogo J.</td>\n",
              "      <td>8.0</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>36</td>\n",
              "      <td>18.7</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>140</td>\n",
              "      <td>4.1</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.31</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>22.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>110</th>\n",
              "      <td>50</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>McGinn</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>37</td>\n",
              "      <td>10.0</td>\n",
              "      <td>12</td>\n",
              "      <td>6.0</td>\n",
              "      <td>153</td>\n",
              "      <td>4.3</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.07</td>\n",
              "      <td>4.53</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.30</td>\n",
              "      <td>21.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>158</th>\n",
              "      <td>134</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Gross</td>\n",
              "      <td>6.4</td>\n",
              "      <td>3.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>30</td>\n",
              "      <td>16.8</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>170</td>\n",
              "      <td>4.2</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>439</th>\n",
              "      <td>195</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>D</td>\n",
              "      <td>Chilwell</td>\n",
              "      <td>5.7</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>37</td>\n",
              "      <td>12.2</td>\n",
              "      <td>8</td>\n",
              "      <td>4.0</td>\n",
              "      <td>149</td>\n",
              "      <td>4.0</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.6</td>\n",
              "      <td>9.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>17.7</td>\n",
              "      <td>10</td>\n",
              "      <td>5.0</td>\n",
              "      <td>149</td>\n",
              "      <td>4.2</td>\n",
              "      <td>4.64</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>6.5</td>\n",
              "      <td>7.6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>58</td>\n",
              "      <td>23.0</td>\n",
              "      <td>12</td>\n",
              "      <td>6.0</td>\n",
              "      <td>180</td>\n",
              "      <td>3.6</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.40</td>\n",
              "      <td>21.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>279</th>\n",
              "      <td>365</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Rodrigo</td>\n",
              "      <td>5.6</td>\n",
              "      <td>10.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>61</td>\n",
              "      <td>18.4</td>\n",
              "      <td>16</td>\n",
              "      <td>8.0</td>\n",
              "      <td>180</td>\n",
              "      <td>3.6</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.40</td>\n",
              "      <td>21.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>344</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.6</td>\n",
              "      <td>14.1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>43</td>\n",
              "      <td>24.3</td>\n",
              "      <td>12</td>\n",
              "      <td>6.0</td>\n",
              "      <td>180</td>\n",
              "      <td>4.2</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.64</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.76</td>\n",
              "      <td>21.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>132</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Ferguson</td>\n",
              "      <td>6.0</td>\n",
              "      <td>5.9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>24</td>\n",
              "      <td>8.8</td>\n",
              "      <td>6</td>\n",
              "      <td>3.0</td>\n",
              "      <td>35</td>\n",
              "      <td>4.0</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.00</td>\n",
              "      <td>20.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>347</th>\n",
              "      <td>513</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Sarr</td>\n",
              "      <td>4.5</td>\n",
              "      <td>1.6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>15.4</td>\n",
              "      <td>11</td>\n",
              "      <td>5.5</td>\n",
              "      <td>90</td>\n",
              "      <td>4.0</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.60</td>\n",
              "      <td>20.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>352</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.0</td>\n",
              "      <td>4.8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>33</td>\n",
              "      <td>17.2</td>\n",
              "      <td>11</td>\n",
              "      <td>5.5</td>\n",
              "      <td>180</td>\n",
              "      <td>4.1</td>\n",
              "      <td>3.89</td>\n",
              "      <td>4.52</td>\n",
              "      <td>3.47</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.52</td>\n",
              "      <td>20.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>292</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>9.0</td>\n",
              "      <td>44.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>12.2</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5</td>\n",
              "      <td>171</td>\n",
              "      <td>3.8</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>19.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>515</th>\n",
              "      <td>395</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>D</td>\n",
              "      <td>R.Varane</td>\n",
              "      <td>5.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>12.3</td>\n",
              "      <td>15</td>\n",
              "      <td>7.5</td>\n",
              "      <td>180</td>\n",
              "      <td>3.8</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>19.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>6.5</td>\n",
              "      <td>2.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>33</td>\n",
              "      <td>19.2</td>\n",
              "      <td>12</td>\n",
              "      <td>6.0</td>\n",
              "      <td>180</td>\n",
              "      <td>4.5</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.00</td>\n",
              "      <td>3.75</td>\n",
              "      <td>3.75</td>\n",
              "      <td>19.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>86</th>\n",
              "      <td>590</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>F</td>\n",
              "      <td>Cunha</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>14.0</td>\n",
              "      <td>4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>166</td>\n",
              "      <td>4.4</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.20</td>\n",
              "      <td>19.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>103</th>\n",
              "      <td>34</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Bailey</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>40</td>\n",
              "      <td>9.8</td>\n",
              "      <td>15</td>\n",
              "      <td>7.5</td>\n",
              "      <td>107</td>\n",
              "      <td>3.8</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>19.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.7</td>\n",
              "      <td>27.4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>58</td>\n",
              "      <td>13.6</td>\n",
              "      <td>15</td>\n",
              "      <td>7.5</td>\n",
              "      <td>132</td>\n",
              "      <td>3.6</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.24</td>\n",
              "      <td>4.08</td>\n",
              "      <td>19.28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>309</th>\n",
              "      <td>429</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Tonali</td>\n",
              "      <td>5.5</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>9.9</td>\n",
              "      <td>7</td>\n",
              "      <td>3.5</td>\n",
              "      <td>156</td>\n",
              "      <td>3.6</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.24</td>\n",
              "      <td>4.08</td>\n",
              "      <td>19.28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>326</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>F</td>\n",
              "      <td>Morris</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>28</td>\n",
              "      <td>9.1</td>\n",
              "      <td>8</td>\n",
              "      <td>8.0</td>\n",
              "      <td>90</td>\n",
              "      <td>4.2</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.98</td>\n",
              "      <td>19.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>568</th>\n",
              "      <td>511</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>D</td>\n",
              "      <td>Romero</td>\n",
              "      <td>4.5</td>\n",
              "      <td>2.8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>41</td>\n",
              "      <td>10.5</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>103</td>\n",
              "      <td>3.8</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>19.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>447</th>\n",
              "      <td>611</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>D</td>\n",
              "      <td>Disasi</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>33</td>\n",
              "      <td>10.3</td>\n",
              "      <td>11</td>\n",
              "      <td>5.5</td>\n",
              "      <td>180</td>\n",
              "      <td>3.5</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.85</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>212</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>9.2</td>\n",
              "      <td>4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>180</td>\n",
              "      <td>3.8</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.98</td>\n",
              "      <td>18.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>557</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Hee Chan</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>21</td>\n",
              "      <td>9.8</td>\n",
              "      <td>6</td>\n",
              "      <td>3.0</td>\n",
              "      <td>62</td>\n",
              "      <td>4.2</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.54</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.10</td>\n",
              "      <td>18.58</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.6</td>\n",
              "      <td>66.4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>52</td>\n",
              "      <td>21.0</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>178</td>\n",
              "      <td>3.3</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.69</td>\n",
              "      <td>17.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>369</th>\n",
              "      <td>565</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Lemina</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>20</td>\n",
              "      <td>4.7</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>180</td>\n",
              "      <td>4.0</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>3.00</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>156</th>\n",
              "      <td>130</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Enciso</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3.6</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>30</td>\n",
              "      <td>9.4</td>\n",
              "      <td>8</td>\n",
              "      <td>4.0</td>\n",
              "      <td>68</td>\n",
              "      <td>3.4</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.40</td>\n",
              "      <td>17.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>405</th>\n",
              "      <td>90</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>D</td>\n",
              "      <td>Ajer</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>22</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5</td>\n",
              "      <td>84</td>\n",
              "      <td>3.3</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.69</td>\n",
              "      <td>17.41</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-72f76b2c-db9d-428a-adf4-1744be4e4495')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-72f76b2c-db9d-428a-adf4-1744be4e4495 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-72f76b2c-db9d-428a-adf4-1744be4e4495');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d31fd7ec-d1a3-4c59-97d1-fd99a7a8a719\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d31fd7ec-d1a3-4c59-97d1-fd99a7a8a719')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d31fd7ec-d1a3-4c59-97d1-fd99a7a8a719 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Top50 = rawdfgw228x.nlargest(50, '5GW Total')\n",
        "Top50"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Vuuihhw-Jx7s",
        "outputId": "4bac93b5-2de5-46ad-87e4-1b6f37aa9529"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos             name  cost  \\\n",
              "144  108                Brentford   M           Mbeumo   6.6   \n",
              "245  308                Liverpool   M            Salah  12.5   \n",
              "161  140                 Brighton   M            March   6.6   \n",
              "283  373        Manchester United   M      B.Fernandes   8.5   \n",
              "243  303                Liverpool   M        Luis D√≠az   7.6   \n",
              "13   119                Brentford   F            Wissa   6.1   \n",
              "163  143                 Brighton   M           Mitoma   6.6   \n",
              "271  353          Manchester City   M            Foden   7.5   \n",
              "32   225           Crystal Palace   F          Edouard   5.5   \n",
              "186  199                  Chelsea   M             Enzo   5.0   \n",
              "16   135                 Brighton   F       Jo√£o Pedro   5.6   \n",
              "29   211                  Chelsea   F        N.Jackson   7.0   \n",
              "93    14                  Arsenal   M         √òdegaard   8.5   \n",
              "58   355          Manchester City   F          Haaland  14.0   \n",
              "202  226           Crystal Palace   M              Eze   6.5   \n",
              "107   43              Aston Villa   M     Douglas Luiz   5.5   \n",
              "227  270                   Fulham   M  De Cordova-Reid   5.5   \n",
              "37   258                  Everton   F           Maupay   5.0   \n",
              "357  539                 West Ham   M        L.Paquet√°   6.0   \n",
              "311  603         Newcastle United   M           Barnes   6.5   \n",
              "387   36              Aston Villa   D             Cash   4.5   \n",
              "416  131                 Brighton   D        Estupi√±an   5.2   \n",
              "2     13                  Arsenal   F          Nketiah   5.5   \n",
              "238  294                Liverpool   M         Diogo J.   8.0   \n",
              "110   50              Aston Villa   M           McGinn   5.5   \n",
              "158  134                 Brighton   M            Gross   6.4   \n",
              "439  195                  Chelsea   D         Chilwell   5.7   \n",
              "116  599              Aston Villa   M            Diaby   6.6   \n",
              "57   343          Manchester City   F        J.Alvarez   6.5   \n",
              "279  365          Manchester City   M          Rodrigo   5.6   \n",
              "344  504                Tottenham   M         Maddison   7.6   \n",
              "15   132                 Brighton   F         Ferguson   6.0   \n",
              "347  513                Tottenham   M             Sarr   4.5   \n",
              "352  526                 West Ham   M            Bowen   7.0   \n",
              "292  396        Manchester United   M         Rashford   9.0   \n",
              "515  395        Manchester United   D         R.Varane   5.0   \n",
              "10    85              Bournemouth   F          Solanke   6.5   \n",
              "86   590  Wolverhampton Wanderers   F            Cunha   5.5   \n",
              "103   34              Aston Villa   M           Bailey   5.5   \n",
              "62   415         Newcastle United   F             Isak   7.7   \n",
              "309  429         Newcastle United   M           Tonali   5.5   \n",
              "50   326               Luton Town   F           Morris   5.5   \n",
              "568  511                Tottenham   D           Romero   4.5   \n",
              "447  611                  Chelsea   D           Disasi   5.0   \n",
              "212  249                  Everton   M       A.Doucoure   5.5   \n",
              "366  557  Wolverhampton Wanderers   M         Hee Chan   5.5   \n",
              "96    19                  Arsenal   M             Saka   8.6   \n",
              "369  565  Wolverhampton Wanderers   M           Lemina   5.0   \n",
              "156  130                 Brighton   M           Enciso   5.4   \n",
              "405   90                Brentford   D             Ajer   4.5   \n",
              "\n",
              "     selected_by_percent  goals_scored  assists  bps  ict_index  points  \\\n",
              "144                 18.1             3        0   57       24.6      23   \n",
              "245                 29.3             1        1   30       20.2      10   \n",
              "161                  8.4             3        0   73       27.8      24   \n",
              "283                 23.5             0        0   26       17.1       4   \n",
              "243                 12.5             2        0   48       17.5      15   \n",
              "13                  12.1             2        1   69       22.1      20   \n",
              "163                 42.5             1        2   66       26.2      17   \n",
              "271                 11.0             0        1   41       23.1      12   \n",
              "32                   2.1             1        0   27       22.9       9   \n",
              "186                  4.7             0        0   27       18.2       1   \n",
              "16                  24.5             1        0   25       13.8       7   \n",
              "29                  16.8             0        0    0       10.3       2   \n",
              "93                  22.8             1        0   43       14.0      13   \n",
              "58                  91.1             2        0   57       20.2      15   \n",
              "202                 13.4             0        0   35       20.0       5   \n",
              "107                  2.5             1        0   40       12.8       8   \n",
              "227                  0.2             1        0   25        9.3       8   \n",
              "37                   1.2             0        0   -5       12.0       3   \n",
              "357                  1.5             1        0   34       15.4       7   \n",
              "311                  4.4             1        1   35       10.5      11   \n",
              "387                  7.7             0        0   28        5.8       5   \n",
              "416                 60.9             1        2   67       26.8      18   \n",
              "2                    6.1             1        1   32       12.1      13   \n",
              "238                  3.3             1        1   36       18.7      13   \n",
              "110                  0.6             1        0   37       10.0      12   \n",
              "158                  3.1             0        0   30       16.8       3   \n",
              "439                 25.0             0        1   37       12.2       8   \n",
              "116                  9.0             1        0   34       17.7      10   \n",
              "57                   7.6             1        1   58       23.0      12   \n",
              "279                 10.0             1        1   61       18.4      16   \n",
              "344                 14.1             0        2   43       24.3      12   \n",
              "15                   5.9             1        0   24        8.8       6   \n",
              "347                  1.6             1        0   40       15.4      11   \n",
              "352                  4.8             1        0   33       17.2      11   \n",
              "292                 44.7             0        0    1       12.2       5   \n",
              "515                  6.0             1        0   55       12.3      15   \n",
              "10                   2.9             1        1   33       19.2      12   \n",
              "86                   0.6             0        0   16       14.0       4   \n",
              "103                  1.3             1        1   40        9.8      15   \n",
              "62                  27.4             2        0   58       13.6      15   \n",
              "309                  3.5             1        0   31        9.9       7   \n",
              "50                   1.4             1        0   28        9.1       8   \n",
              "568                  2.8             1        0   41       10.5      13   \n",
              "447                  5.5             1        0   33       10.3      11   \n",
              "212                  0.2             0        0    9        9.2       4   \n",
              "366                  0.1             1        0   21        9.8       6   \n",
              "96                  66.4             1        0   52       21.0      13   \n",
              "369                  0.0             0        0   20        4.7       3   \n",
              "156                  3.6             0        2   30        9.4       8   \n",
              "405                  0.3             0        1   22        5.2       5   \n",
              "\n",
              "     points_per_game  minutes  xPallgw    gw3    gw4   gw5    gw6    gw7  \\\n",
              "144             11.5      180     10.3  11.13  11.96  9.47  11.96  12.79   \n",
              "245              5.0      161      6.4   6.40   6.84  7.72   7.28   7.28   \n",
              "161             12.0      163      5.8   6.18   5.80  5.80   6.94   5.80   \n",
              "283              2.0      180      5.7   6.81   5.33  5.70   6.44   6.07   \n",
              "243              7.5      161      5.5   5.50   5.85  6.55   6.20   6.20   \n",
              "13              10.0      149      5.4   5.74   6.08  5.06   6.08   6.42   \n",
              "163              8.5      170      5.3   5.63   5.30  5.30   6.29   5.30   \n",
              "271              6.0      180      4.5   5.75   5.25  5.25   5.75   5.75   \n",
              "32               4.5      180      5.5   5.15   6.20  5.15   5.85   5.15   \n",
              "186              0.5      180      4.9   5.77   5.77  5.48   4.90   5.19   \n",
              "16               3.5      120      5.0   5.30   5.00  5.00   5.90   5.00   \n",
              "29               1.0      180      4.7   5.51   5.51  5.24   4.70   4.97   \n",
              "93               6.5      179      4.6   5.12   4.86  5.38   5.12   5.38   \n",
              "58               7.5      169      4.2   5.30   4.86  4.86   5.30   5.30   \n",
              "202              2.5      180      5.0   4.70   5.60  4.70   5.30   4.70   \n",
              "107              4.0      153      4.8   5.36   4.52  5.08   4.80   4.80   \n",
              "227              4.0      112      5.2   4.56   4.24  5.84   4.88   4.88   \n",
              "37               1.5      110      5.0   5.30   5.30  4.10   4.40   5.30   \n",
              "357              3.5      180      5.0   4.70   5.60  4.10   4.40   5.60   \n",
              "311              5.5       56      4.4   4.40   4.40  4.64   5.36   5.12   \n",
              "387              2.5      176      4.6   5.12   4.34  4.86   4.60   4.60   \n",
              "416              9.0      180      4.4   4.64   4.40  4.40   5.12   4.40   \n",
              "2                6.5      150      4.1   4.52   4.31  4.73   4.52   4.73   \n",
              "238              6.5      140      4.1   4.10   4.31  4.73   4.52   4.52   \n",
              "110              6.0      153      4.3   4.76   4.07  4.53   4.30   4.30   \n",
              "158              1.5      170      4.2   4.42   4.20  4.20   4.86   4.20   \n",
              "439              4.0      149      4.0   4.60   4.60  4.40   4.00   4.20   \n",
              "116              5.0      149      4.2   4.64   3.98  4.42   4.20   4.20   \n",
              "57               6.0      180      3.6   4.40   4.08  4.08   4.40   4.40   \n",
              "279              8.0      180      3.6   4.40   4.08  4.08   4.40   4.40   \n",
              "344              6.0      180      4.2   4.64   4.42  4.64   3.76   3.76   \n",
              "15               3.0       35      4.0   4.20   4.00  4.00   4.60   4.00   \n",
              "347              5.5       90      4.0   4.40   4.20  4.40   3.60   3.60   \n",
              "352              5.5      180      4.1   3.89   4.52  3.47   3.68   4.52   \n",
              "292              2.5      171      3.8   4.34   3.62  3.80   4.16   3.98   \n",
              "515              7.5      180      3.8   4.34   3.62  3.80   4.16   3.98   \n",
              "10               6.0      180      4.5   4.00   4.00  4.00   3.75   3.75   \n",
              "86               2.0      166      4.4   4.16   3.92  3.68   4.40   3.20   \n",
              "103              7.5      107      3.8   4.16   3.62  3.98   3.80   3.80   \n",
              "62               7.5      132      3.6   3.60   3.60  3.76   4.24   4.08   \n",
              "309              3.5      156      3.6   3.60   3.60  3.76   4.24   4.08   \n",
              "50               8.0       90      4.2   3.54   3.76  3.76   4.20   3.98   \n",
              "568              6.5      103      3.8   4.16   3.98  4.16   3.44   3.44   \n",
              "447              5.5      180      3.5   3.95   3.95  3.80   3.50   3.65   \n",
              "212              2.0      180      3.8   3.98   3.98  3.26   3.44   3.98   \n",
              "366              3.0       62      4.2   3.98   3.76  3.54   4.20   3.10   \n",
              "96               6.5      178      3.3   3.56   3.43  3.69   3.56   3.69   \n",
              "369              1.5      180      4.0   3.80   3.60  3.40   4.00   3.00   \n",
              "156              4.0       68      3.4   3.54   3.40  3.40   3.82   3.40   \n",
              "405              2.5       84      3.3   3.43   3.56  3.17   3.56   3.69   \n",
              "\n",
              "     5GW Total  \n",
              "144      57.31  \n",
              "245      35.52  \n",
              "161      30.52  \n",
              "283      30.35  \n",
              "243      30.30  \n",
              "13       29.38  \n",
              "163      27.82  \n",
              "271      27.75  \n",
              "32       27.50  \n",
              "186      27.11  \n",
              "16       26.20  \n",
              "29       25.93  \n",
              "93       25.86  \n",
              "58       25.62  \n",
              "202      25.00  \n",
              "107      24.56  \n",
              "227      24.40  \n",
              "37       24.40  \n",
              "357      24.40  \n",
              "311      23.92  \n",
              "387      23.52  \n",
              "416      22.96  \n",
              "2        22.81  \n",
              "238      22.18  \n",
              "110      21.96  \n",
              "158      21.88  \n",
              "439      21.80  \n",
              "116      21.44  \n",
              "57       21.36  \n",
              "279      21.36  \n",
              "344      21.22  \n",
              "15       20.80  \n",
              "347      20.20  \n",
              "352      20.08  \n",
              "292      19.90  \n",
              "515      19.90  \n",
              "10       19.50  \n",
              "86       19.36  \n",
              "103      19.36  \n",
              "62       19.28  \n",
              "309      19.28  \n",
              "50       19.24  \n",
              "568      19.18  \n",
              "447      18.85  \n",
              "212      18.64  \n",
              "366      18.58  \n",
              "96       17.93  \n",
              "369      17.80  \n",
              "156      17.56  \n",
              "405      17.41  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5ae34daf-9dad-41de-8c56-3e2b51841cf0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>gw3</th>\n",
              "      <th>gw4</th>\n",
              "      <th>gw5</th>\n",
              "      <th>gw6</th>\n",
              "      <th>gw7</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>144</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.6</td>\n",
              "      <td>18.1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>57</td>\n",
              "      <td>24.6</td>\n",
              "      <td>23</td>\n",
              "      <td>11.5</td>\n",
              "      <td>180</td>\n",
              "      <td>10.3</td>\n",
              "      <td>11.13</td>\n",
              "      <td>11.96</td>\n",
              "      <td>9.47</td>\n",
              "      <td>11.96</td>\n",
              "      <td>12.79</td>\n",
              "      <td>57.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>245</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.5</td>\n",
              "      <td>29.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>30</td>\n",
              "      <td>20.2</td>\n",
              "      <td>10</td>\n",
              "      <td>5.0</td>\n",
              "      <td>161</td>\n",
              "      <td>6.4</td>\n",
              "      <td>6.40</td>\n",
              "      <td>6.84</td>\n",
              "      <td>7.72</td>\n",
              "      <td>7.28</td>\n",
              "      <td>7.28</td>\n",
              "      <td>35.52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>161</th>\n",
              "      <td>140</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>March</td>\n",
              "      <td>6.6</td>\n",
              "      <td>8.4</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>73</td>\n",
              "      <td>27.8</td>\n",
              "      <td>24</td>\n",
              "      <td>12.0</td>\n",
              "      <td>163</td>\n",
              "      <td>5.8</td>\n",
              "      <td>6.18</td>\n",
              "      <td>5.80</td>\n",
              "      <td>5.80</td>\n",
              "      <td>6.94</td>\n",
              "      <td>5.80</td>\n",
              "      <td>30.52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>283</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.5</td>\n",
              "      <td>23.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>17.1</td>\n",
              "      <td>4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>180</td>\n",
              "      <td>5.7</td>\n",
              "      <td>6.81</td>\n",
              "      <td>5.33</td>\n",
              "      <td>5.70</td>\n",
              "      <td>6.44</td>\n",
              "      <td>6.07</td>\n",
              "      <td>30.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>243</th>\n",
              "      <td>303</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Luis D√≠az</td>\n",
              "      <td>7.6</td>\n",
              "      <td>12.5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>48</td>\n",
              "      <td>17.5</td>\n",
              "      <td>15</td>\n",
              "      <td>7.5</td>\n",
              "      <td>161</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.50</td>\n",
              "      <td>5.85</td>\n",
              "      <td>6.55</td>\n",
              "      <td>6.20</td>\n",
              "      <td>6.20</td>\n",
              "      <td>30.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>119</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>F</td>\n",
              "      <td>Wissa</td>\n",
              "      <td>6.1</td>\n",
              "      <td>12.1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>69</td>\n",
              "      <td>22.1</td>\n",
              "      <td>20</td>\n",
              "      <td>10.0</td>\n",
              "      <td>149</td>\n",
              "      <td>5.4</td>\n",
              "      <td>5.74</td>\n",
              "      <td>6.08</td>\n",
              "      <td>5.06</td>\n",
              "      <td>6.08</td>\n",
              "      <td>6.42</td>\n",
              "      <td>29.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>163</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.6</td>\n",
              "      <td>42.5</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>66</td>\n",
              "      <td>26.2</td>\n",
              "      <td>17</td>\n",
              "      <td>8.5</td>\n",
              "      <td>170</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.63</td>\n",
              "      <td>5.30</td>\n",
              "      <td>5.30</td>\n",
              "      <td>6.29</td>\n",
              "      <td>5.30</td>\n",
              "      <td>27.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>271</th>\n",
              "      <td>353</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Foden</td>\n",
              "      <td>7.5</td>\n",
              "      <td>11.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>41</td>\n",
              "      <td>23.1</td>\n",
              "      <td>12</td>\n",
              "      <td>6.0</td>\n",
              "      <td>180</td>\n",
              "      <td>4.5</td>\n",
              "      <td>5.75</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.25</td>\n",
              "      <td>5.75</td>\n",
              "      <td>5.75</td>\n",
              "      <td>27.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>225</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>F</td>\n",
              "      <td>Edouard</td>\n",
              "      <td>5.5</td>\n",
              "      <td>2.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>27</td>\n",
              "      <td>22.9</td>\n",
              "      <td>9</td>\n",
              "      <td>4.5</td>\n",
              "      <td>180</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.15</td>\n",
              "      <td>6.20</td>\n",
              "      <td>5.15</td>\n",
              "      <td>5.85</td>\n",
              "      <td>5.15</td>\n",
              "      <td>27.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>186</th>\n",
              "      <td>199</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>M</td>\n",
              "      <td>Enzo</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>27</td>\n",
              "      <td>18.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5</td>\n",
              "      <td>180</td>\n",
              "      <td>4.9</td>\n",
              "      <td>5.77</td>\n",
              "      <td>5.77</td>\n",
              "      <td>5.48</td>\n",
              "      <td>4.90</td>\n",
              "      <td>5.19</td>\n",
              "      <td>27.11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Jo√£o Pedro</td>\n",
              "      <td>5.6</td>\n",
              "      <td>24.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>13.8</td>\n",
              "      <td>7</td>\n",
              "      <td>3.5</td>\n",
              "      <td>120</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.30</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.00</td>\n",
              "      <td>5.90</td>\n",
              "      <td>5.00</td>\n",
              "      <td>26.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>211</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>F</td>\n",
              "      <td>N.Jackson</td>\n",
              "      <td>7.0</td>\n",
              "      <td>16.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>10.3</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>180</td>\n",
              "      <td>4.7</td>\n",
              "      <td>5.51</td>\n",
              "      <td>5.51</td>\n",
              "      <td>5.24</td>\n",
              "      <td>4.70</td>\n",
              "      <td>4.97</td>\n",
              "      <td>25.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>√òdegaard</td>\n",
              "      <td>8.5</td>\n",
              "      <td>22.8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>43</td>\n",
              "      <td>14.0</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>179</td>\n",
              "      <td>4.6</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.86</td>\n",
              "      <td>5.38</td>\n",
              "      <td>5.12</td>\n",
              "      <td>5.38</td>\n",
              "      <td>25.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>58</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.0</td>\n",
              "      <td>91.1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>57</td>\n",
              "      <td>20.2</td>\n",
              "      <td>15</td>\n",
              "      <td>7.5</td>\n",
              "      <td>169</td>\n",
              "      <td>4.2</td>\n",
              "      <td>5.30</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.86</td>\n",
              "      <td>5.30</td>\n",
              "      <td>5.30</td>\n",
              "      <td>25.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>202</th>\n",
              "      <td>226</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>M</td>\n",
              "      <td>Eze</td>\n",
              "      <td>6.5</td>\n",
              "      <td>13.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>35</td>\n",
              "      <td>20.0</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5</td>\n",
              "      <td>180</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.60</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.30</td>\n",
              "      <td>4.70</td>\n",
              "      <td>25.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>107</th>\n",
              "      <td>43</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>5.5</td>\n",
              "      <td>2.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>12.8</td>\n",
              "      <td>8</td>\n",
              "      <td>4.0</td>\n",
              "      <td>153</td>\n",
              "      <td>4.8</td>\n",
              "      <td>5.36</td>\n",
              "      <td>4.52</td>\n",
              "      <td>5.08</td>\n",
              "      <td>4.80</td>\n",
              "      <td>4.80</td>\n",
              "      <td>24.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>227</th>\n",
              "      <td>270</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>M</td>\n",
              "      <td>De Cordova-Reid</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>9.3</td>\n",
              "      <td>8</td>\n",
              "      <td>4.0</td>\n",
              "      <td>112</td>\n",
              "      <td>5.2</td>\n",
              "      <td>4.56</td>\n",
              "      <td>4.24</td>\n",
              "      <td>5.84</td>\n",
              "      <td>4.88</td>\n",
              "      <td>4.88</td>\n",
              "      <td>24.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>258</td>\n",
              "      <td>Everton</td>\n",
              "      <td>F</td>\n",
              "      <td>Maupay</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-5</td>\n",
              "      <td>12.0</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>110</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.30</td>\n",
              "      <td>5.30</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.30</td>\n",
              "      <td>24.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>357</th>\n",
              "      <td>539</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>L.Paquet√°</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>15.4</td>\n",
              "      <td>7</td>\n",
              "      <td>3.5</td>\n",
              "      <td>180</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4.70</td>\n",
              "      <td>5.60</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.60</td>\n",
              "      <td>24.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>311</th>\n",
              "      <td>603</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Barnes</td>\n",
              "      <td>6.5</td>\n",
              "      <td>4.4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>35</td>\n",
              "      <td>10.5</td>\n",
              "      <td>11</td>\n",
              "      <td>5.5</td>\n",
              "      <td>56</td>\n",
              "      <td>4.4</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.64</td>\n",
              "      <td>5.36</td>\n",
              "      <td>5.12</td>\n",
              "      <td>23.92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>387</th>\n",
              "      <td>36</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>D</td>\n",
              "      <td>Cash</td>\n",
              "      <td>4.5</td>\n",
              "      <td>7.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>28</td>\n",
              "      <td>5.8</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5</td>\n",
              "      <td>176</td>\n",
              "      <td>4.6</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.60</td>\n",
              "      <td>23.52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>416</th>\n",
              "      <td>131</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Estupi√±an</td>\n",
              "      <td>5.2</td>\n",
              "      <td>60.9</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>67</td>\n",
              "      <td>26.8</td>\n",
              "      <td>18</td>\n",
              "      <td>9.0</td>\n",
              "      <td>180</td>\n",
              "      <td>4.4</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.40</td>\n",
              "      <td>5.12</td>\n",
              "      <td>4.40</td>\n",
              "      <td>22.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>32</td>\n",
              "      <td>12.1</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>150</td>\n",
              "      <td>4.1</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.31</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.73</td>\n",
              "      <td>22.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>238</th>\n",
              "      <td>294</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Diogo J.</td>\n",
              "      <td>8.0</td>\n",
              "      <td>3.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>36</td>\n",
              "      <td>18.7</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>140</td>\n",
              "      <td>4.1</td>\n",
              "      <td>4.10</td>\n",
              "      <td>4.31</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.52</td>\n",
              "      <td>22.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>110</th>\n",
              "      <td>50</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>McGinn</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>37</td>\n",
              "      <td>10.0</td>\n",
              "      <td>12</td>\n",
              "      <td>6.0</td>\n",
              "      <td>153</td>\n",
              "      <td>4.3</td>\n",
              "      <td>4.76</td>\n",
              "      <td>4.07</td>\n",
              "      <td>4.53</td>\n",
              "      <td>4.30</td>\n",
              "      <td>4.30</td>\n",
              "      <td>21.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>158</th>\n",
              "      <td>134</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Gross</td>\n",
              "      <td>6.4</td>\n",
              "      <td>3.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>30</td>\n",
              "      <td>16.8</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>170</td>\n",
              "      <td>4.2</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.86</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>439</th>\n",
              "      <td>195</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>D</td>\n",
              "      <td>Chilwell</td>\n",
              "      <td>5.7</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>37</td>\n",
              "      <td>12.2</td>\n",
              "      <td>8</td>\n",
              "      <td>4.0</td>\n",
              "      <td>149</td>\n",
              "      <td>4.0</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>599</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Diaby</td>\n",
              "      <td>6.6</td>\n",
              "      <td>9.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>34</td>\n",
              "      <td>17.7</td>\n",
              "      <td>10</td>\n",
              "      <td>5.0</td>\n",
              "      <td>149</td>\n",
              "      <td>4.2</td>\n",
              "      <td>4.64</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.20</td>\n",
              "      <td>21.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>343</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>J.Alvarez</td>\n",
              "      <td>6.5</td>\n",
              "      <td>7.6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>58</td>\n",
              "      <td>23.0</td>\n",
              "      <td>12</td>\n",
              "      <td>6.0</td>\n",
              "      <td>180</td>\n",
              "      <td>3.6</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.40</td>\n",
              "      <td>21.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>279</th>\n",
              "      <td>365</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>M</td>\n",
              "      <td>Rodrigo</td>\n",
              "      <td>5.6</td>\n",
              "      <td>10.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>61</td>\n",
              "      <td>18.4</td>\n",
              "      <td>16</td>\n",
              "      <td>8.0</td>\n",
              "      <td>180</td>\n",
              "      <td>3.6</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.08</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.40</td>\n",
              "      <td>21.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>344</th>\n",
              "      <td>504</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Maddison</td>\n",
              "      <td>7.6</td>\n",
              "      <td>14.1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>43</td>\n",
              "      <td>24.3</td>\n",
              "      <td>12</td>\n",
              "      <td>6.0</td>\n",
              "      <td>180</td>\n",
              "      <td>4.2</td>\n",
              "      <td>4.64</td>\n",
              "      <td>4.42</td>\n",
              "      <td>4.64</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.76</td>\n",
              "      <td>21.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>132</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Ferguson</td>\n",
              "      <td>6.0</td>\n",
              "      <td>5.9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>24</td>\n",
              "      <td>8.8</td>\n",
              "      <td>6</td>\n",
              "      <td>3.0</td>\n",
              "      <td>35</td>\n",
              "      <td>4.0</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.60</td>\n",
              "      <td>4.00</td>\n",
              "      <td>20.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>347</th>\n",
              "      <td>513</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>M</td>\n",
              "      <td>Sarr</td>\n",
              "      <td>4.5</td>\n",
              "      <td>1.6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>40</td>\n",
              "      <td>15.4</td>\n",
              "      <td>11</td>\n",
              "      <td>5.5</td>\n",
              "      <td>90</td>\n",
              "      <td>4.0</td>\n",
              "      <td>4.40</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.60</td>\n",
              "      <td>20.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>352</th>\n",
              "      <td>526</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>M</td>\n",
              "      <td>Bowen</td>\n",
              "      <td>7.0</td>\n",
              "      <td>4.8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>33</td>\n",
              "      <td>17.2</td>\n",
              "      <td>11</td>\n",
              "      <td>5.5</td>\n",
              "      <td>180</td>\n",
              "      <td>4.1</td>\n",
              "      <td>3.89</td>\n",
              "      <td>4.52</td>\n",
              "      <td>3.47</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.52</td>\n",
              "      <td>20.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>292</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>9.0</td>\n",
              "      <td>44.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>12.2</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5</td>\n",
              "      <td>171</td>\n",
              "      <td>3.8</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>19.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>515</th>\n",
              "      <td>395</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>D</td>\n",
              "      <td>R.Varane</td>\n",
              "      <td>5.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>55</td>\n",
              "      <td>12.3</td>\n",
              "      <td>15</td>\n",
              "      <td>7.5</td>\n",
              "      <td>180</td>\n",
              "      <td>3.8</td>\n",
              "      <td>4.34</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.80</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>19.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>85</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>F</td>\n",
              "      <td>Solanke</td>\n",
              "      <td>6.5</td>\n",
              "      <td>2.9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>33</td>\n",
              "      <td>19.2</td>\n",
              "      <td>12</td>\n",
              "      <td>6.0</td>\n",
              "      <td>180</td>\n",
              "      <td>4.5</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.00</td>\n",
              "      <td>4.00</td>\n",
              "      <td>3.75</td>\n",
              "      <td>3.75</td>\n",
              "      <td>19.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>86</th>\n",
              "      <td>590</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>F</td>\n",
              "      <td>Cunha</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>14.0</td>\n",
              "      <td>4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>166</td>\n",
              "      <td>4.4</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.92</td>\n",
              "      <td>3.68</td>\n",
              "      <td>4.40</td>\n",
              "      <td>3.20</td>\n",
              "      <td>19.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>103</th>\n",
              "      <td>34</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>M</td>\n",
              "      <td>Bailey</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>40</td>\n",
              "      <td>9.8</td>\n",
              "      <td>15</td>\n",
              "      <td>7.5</td>\n",
              "      <td>107</td>\n",
              "      <td>3.8</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.62</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.80</td>\n",
              "      <td>19.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.7</td>\n",
              "      <td>27.4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>58</td>\n",
              "      <td>13.6</td>\n",
              "      <td>15</td>\n",
              "      <td>7.5</td>\n",
              "      <td>132</td>\n",
              "      <td>3.6</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.24</td>\n",
              "      <td>4.08</td>\n",
              "      <td>19.28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>309</th>\n",
              "      <td>429</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>M</td>\n",
              "      <td>Tonali</td>\n",
              "      <td>5.5</td>\n",
              "      <td>3.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>9.9</td>\n",
              "      <td>7</td>\n",
              "      <td>3.5</td>\n",
              "      <td>156</td>\n",
              "      <td>3.6</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.24</td>\n",
              "      <td>4.08</td>\n",
              "      <td>19.28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>326</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>F</td>\n",
              "      <td>Morris</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1.4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>28</td>\n",
              "      <td>9.1</td>\n",
              "      <td>8</td>\n",
              "      <td>8.0</td>\n",
              "      <td>90</td>\n",
              "      <td>4.2</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.76</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.98</td>\n",
              "      <td>19.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>568</th>\n",
              "      <td>511</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>D</td>\n",
              "      <td>Romero</td>\n",
              "      <td>4.5</td>\n",
              "      <td>2.8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>41</td>\n",
              "      <td>10.5</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>103</td>\n",
              "      <td>3.8</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.98</td>\n",
              "      <td>4.16</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.44</td>\n",
              "      <td>19.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>447</th>\n",
              "      <td>611</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>D</td>\n",
              "      <td>Disasi</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>33</td>\n",
              "      <td>10.3</td>\n",
              "      <td>11</td>\n",
              "      <td>5.5</td>\n",
              "      <td>180</td>\n",
              "      <td>3.5</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.50</td>\n",
              "      <td>3.65</td>\n",
              "      <td>18.85</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>212</th>\n",
              "      <td>249</td>\n",
              "      <td>Everton</td>\n",
              "      <td>M</td>\n",
              "      <td>A.Doucoure</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>9.2</td>\n",
              "      <td>4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>180</td>\n",
              "      <td>3.8</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.26</td>\n",
              "      <td>3.44</td>\n",
              "      <td>3.98</td>\n",
              "      <td>18.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>557</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Hee Chan</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0.1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>21</td>\n",
              "      <td>9.8</td>\n",
              "      <td>6</td>\n",
              "      <td>3.0</td>\n",
              "      <td>62</td>\n",
              "      <td>4.2</td>\n",
              "      <td>3.98</td>\n",
              "      <td>3.76</td>\n",
              "      <td>3.54</td>\n",
              "      <td>4.20</td>\n",
              "      <td>3.10</td>\n",
              "      <td>18.58</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.6</td>\n",
              "      <td>66.4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>52</td>\n",
              "      <td>21.0</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>178</td>\n",
              "      <td>3.3</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.69</td>\n",
              "      <td>17.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>369</th>\n",
              "      <td>565</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>M</td>\n",
              "      <td>Lemina</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>20</td>\n",
              "      <td>4.7</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>180</td>\n",
              "      <td>4.0</td>\n",
              "      <td>3.80</td>\n",
              "      <td>3.60</td>\n",
              "      <td>3.40</td>\n",
              "      <td>4.00</td>\n",
              "      <td>3.00</td>\n",
              "      <td>17.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>156</th>\n",
              "      <td>130</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Enciso</td>\n",
              "      <td>5.4</td>\n",
              "      <td>3.6</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>30</td>\n",
              "      <td>9.4</td>\n",
              "      <td>8</td>\n",
              "      <td>4.0</td>\n",
              "      <td>68</td>\n",
              "      <td>3.4</td>\n",
              "      <td>3.54</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.40</td>\n",
              "      <td>3.82</td>\n",
              "      <td>3.40</td>\n",
              "      <td>17.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>405</th>\n",
              "      <td>90</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>D</td>\n",
              "      <td>Ajer</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>22</td>\n",
              "      <td>5.2</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5</td>\n",
              "      <td>84</td>\n",
              "      <td>3.3</td>\n",
              "      <td>3.43</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.17</td>\n",
              "      <td>3.56</td>\n",
              "      <td>3.69</td>\n",
              "      <td>17.41</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5ae34daf-9dad-41de-8c56-3e2b51841cf0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5ae34daf-9dad-41de-8c56-3e2b51841cf0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5ae34daf-9dad-41de-8c56-3e2b51841cf0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-682d0921-f427-47dd-82d8-d962daea9481\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-682d0921-f427-47dd-82d8-d962daea9481')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-682d0921-f427-47dd-82d8-d962daea9481 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import string"
      ],
      "metadata": {
        "id": "JSw3vk9PJvps"
      },
      "execution_count": 51,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=Top50['cost'],y=Top50['5GW Total'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('cost')\n",
        "ax.set_ylabel('5GW Total')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in Top50.iterrows():\n",
        "    ax.annotate(row['name'], (row['cost'], row['5GW Total']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 696
        },
        "id": "435FV-_ocWOi",
        "outputId": "ae6cd826-2902-4372-ba7f-a1fb5102f259"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rawdfgw228x"
      ],
      "metadata": {
        "id": "mQ58vdHpUd8O",
        "outputId": "ee122abe-7ccb-4de6-bde8-3558d19f5c5e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        }
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id                     team pos     name  cost  selected_by_percent  \\\n",
              "0      1                  Arsenal   F  Balogun   4.5                  0.7   \n",
              "1      8                  Arsenal   F  G.Jesus   7.9                  1.2   \n",
              "2     13                  Arsenal   F  Nketiah   5.5                  6.1   \n",
              "3     33              Aston Villa   F   Archer   4.5                  5.4   \n",
              "4     39              Aston Villa   F    Davis   5.0                  0.3   \n",
              "..   ...                      ...  ..      ...   ...                  ...   \n",
              "667  647                 West Ham   G    Anang   4.0                  0.0   \n",
              "668  546  Wolverhampton Wanderers   G  Bentley   4.0                  0.4   \n",
              "669  564  Wolverhampton Wanderers   G     King   4.0                  0.8   \n",
              "670  569  Wolverhampton Wanderers   G  Jos√© S√°   5.0                  1.1   \n",
              "671  571  Wolverhampton Wanderers   G   ≈†arkiƒá   4.0                  0.5   \n",
              "\n",
              "     goals_scored  assists  bps  ict_index  points  points_per_game  minutes  \\\n",
              "0               0        0    0        0.0       0              0.0        0   \n",
              "1               0        0    0        0.0       0              0.0        0   \n",
              "2               1        1   32       12.1      13              6.5      150   \n",
              "3               0        0   -1        0.3       0              0.0        5   \n",
              "4               0        0    0        0.0       0              0.0        0   \n",
              "..            ...      ...  ...        ...     ...              ...      ...   \n",
              "667             0        0    0        0.0       0              0.0        0   \n",
              "668             0        0    0        0.0       0              0.0        0   \n",
              "669             0        0    0        0.0       0              0.0        0   \n",
              "670             0        0   31        4.6       3              1.5      180   \n",
              "671             0        0    0        0.0       0              0.0        0   \n",
              "\n",
              "     xPallgw   gw3   gw4   gw5   gw6   gw7  5GW Total  \n",
              "0        2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "1        2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "2        4.1  4.52  4.31  4.73  4.52  4.73      22.81  \n",
              "3        2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "4        2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "..       ...   ...   ...   ...   ...   ...        ...  \n",
              "667      2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "668      2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "669      2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "670      2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "671      2.0  2.00  2.00  2.00  2.00  2.00      10.00  \n",
              "\n",
              "[655 rows x 20 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8069307c-9d5a-4c1c-bd42-78877400fa53\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>xPallgw</th>\n",
              "      <th>gw3</th>\n",
              "      <th>gw4</th>\n",
              "      <th>gw5</th>\n",
              "      <th>gw6</th>\n",
              "      <th>gw7</th>\n",
              "      <th>5GW Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Balogun</td>\n",
              "      <td>4.5</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>G.Jesus</td>\n",
              "      <td>7.9</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>F</td>\n",
              "      <td>Nketiah</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>32</td>\n",
              "      <td>12.1</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>150</td>\n",
              "      <td>4.1</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.31</td>\n",
              "      <td>4.73</td>\n",
              "      <td>4.52</td>\n",
              "      <td>4.73</td>\n",
              "      <td>22.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>33</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Archer</td>\n",
              "      <td>4.5</td>\n",
              "      <td>5.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-1</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>39</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Davis</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>667</th>\n",
              "      <td>647</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Anang</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>668</th>\n",
              "      <td>546</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Bentley</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>669</th>\n",
              "      <td>564</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>King</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>670</th>\n",
              "      <td>569</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>Jos√© S√°</td>\n",
              "      <td>5.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>4.6</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>180</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>671</th>\n",
              "      <td>571</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>G</td>\n",
              "      <td>≈†arkiƒá</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>2.00</td>\n",
              "      <td>10.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>655 rows √ó 20 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8069307c-9d5a-4c1c-bd42-78877400fa53')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8069307c-9d5a-4c1c-bd42-78877400fa53 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8069307c-9d5a-4c1c-bd42-78877400fa53');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c1fd9980-ce9e-466f-a76b-c1624f34a9d5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c1fd9980-ce9e-466f-a76b-c1624f34a9d5')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c1fd9980-ce9e-466f-a76b-c1624f34a9d5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#apiplayers = fplwithunderstat.drop(columns=[\n",
        "'goals_scored',\n",
        "'points_per_game',\n",
        "'player_name',\n",
        "'understat',\n",
        " 'goals_1wks',\n",
        " 'assists_1wks',\n",
        " 'shots_1wks',\n",
        " 'key_passes_1wks',\n",
        " 'yellow_cards',\n",
        " 'red_cards',\n",
        " 'npg_1wks',\n",
        " 'npxG_1wks',\n",
        " 'xGChain',\n",
        " 'xGBuildup',\n",
        " 'xgdifference',\n",
        " 'xAdifference'\n",
        " ])\n",
        "apiplayers"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 140
        },
        "id": "ubtMyjiir82G",
        "outputId": "1182d961-eef7-46d6-d88b-acb6d995e714"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "error",
          "ename": "IndentationError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-56-3f842b00c4af>\"\u001b[0;36m, line \u001b[0;32m6\u001b[0m\n\u001b[0;31m    'goals_1wks',\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unexpected indent\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "apiplayers = master"
      ],
      "metadata": {
        "id": "3bvpGcxtVMyS"
      },
      "execution_count": 57,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Mostselected = apiplayers.nlargest(20, 'selected_by_percent')\n",
        "Mostselected"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "O-wNiNtosYZU",
        "outputId": "9e99d2e5-1c31-4845-e7f9-54a3978c4457"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      id               team pos         name  cost  selected_by_percent  \\\n",
              "417  355    Manchester City   F      Haaland  14.0                 91.1   \n",
              "18    19            Arsenal   M         Saka   8.6                 66.4   \n",
              "142  131           Brighton   D    Estupi√±an   5.2                 60.9   \n",
              "459  396  Manchester United   M     Rashford   9.0                 44.7   \n",
              "154  143           Brighton   M       Mitoma   6.6                 42.5   \n",
              "498  430   Newcastle United   D     Trippier   6.5                 32.1   \n",
              "465  597  Manchester United   G        Onana   5.0                 29.5   \n",
              "354  308          Liverpool   M        Salah  12.5                 29.3   \n",
              "483  415   Newcastle United   F         Isak   7.7                 27.4   \n",
              "4      5            Arsenal   D      Gabriel   5.0                 25.8   \n",
              "217  195            Chelsea   D     Chilwell   5.7                 25.0   \n",
              "461  398  Manchester United   D         Shaw   5.5                 24.9   \n",
              "19    20            Arsenal   D       Saliba   5.1                 24.8   \n",
              "61    60        Aston Villa   F      Watkins   8.0                 24.8   \n",
              "146  135           Brighton   F   Jo√£o Pedro   5.6                 24.5   \n",
              "618  524           West Ham   G       Areola   4.0                 23.9   \n",
              "437  373  Manchester United   M  B.Fernandes   8.5                 23.5   \n",
              "13    14            Arsenal   M     √òdegaard   8.5                 22.8   \n",
              "473  405   Newcastle United   D       Botman   4.5                 19.3   \n",
              "120  108          Brentford   M       Mbeumo   6.6                 18.1   \n",
              "\n",
              "     expected_goals  expected_assists  goals_scored  assists  bps  ict_index  \\\n",
              "417            1.03              0.07             2        0   57       20.2   \n",
              "18             0.35              0.28             1        0   52       21.0   \n",
              "142            0.36              0.91             1        2   67       26.8   \n",
              "459            0.66              0.07             0        0    1       12.2   \n",
              "154            0.55              1.29             1        2   66       26.2   \n",
              "498            0.00              0.33             0        0   41       12.4   \n",
              "465            0.00              0.00             0        0   51        8.8   \n",
              "354            1.51              0.42             1        1   30       20.2   \n",
              "483            0.76              0.04             2        0   58       13.6   \n",
              "4              0.00              0.00             0        0    7        1.3   \n",
              "217            0.32              0.72             0        1   37       12.2   \n",
              "461            0.00              0.51             0        0   48       15.5   \n",
              "19             0.00              0.04             0        1   51        7.8   \n",
              "61             0.38              0.15             0        2   29       13.7   \n",
              "146            1.46              0.04             1        0   25       13.8   \n",
              "618            0.00              0.00             0        0   47        5.9   \n",
              "437            0.79              1.15             0        0   26       17.1   \n",
              "13             0.94              0.18             1        0   43       14.0   \n",
              "473            0.07              0.25             0        1   42        6.6   \n",
              "120            3.14              0.27             3        0   57       24.6   \n",
              "\n",
              "     points  points_per_game  minutes  apppoint  assistvalue  \n",
              "417      15              7.5      169         2            3  \n",
              "18       13              6.5      178         2            3  \n",
              "142      18              9.0      180         2            3  \n",
              "459       5              2.5      171         2            3  \n",
              "154      17              8.5      170         2            3  \n",
              "498       4              2.0      180         2            3  \n",
              "465      11              5.5      180         2            3  \n",
              "354      10              5.0      161         2            3  \n",
              "483      15              7.5      132         2            3  \n",
              "4         2              1.0       24         2            3  \n",
              "217       8              4.0      149         2            3  \n",
              "461       6              3.0      180         2            3  \n",
              "19       13              6.5      180         2            3  \n",
              "61       10              5.0      163         2            3  \n",
              "146       7              3.5      120         2            3  \n",
              "618      13              6.5      180         2            3  \n",
              "437       4              2.0      180         2            3  \n",
              "13       13              6.5      179         2            3  \n",
              "473       7              3.5      180         2            3  \n",
              "120      23             11.5      180         2            3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3a13e677-abfd-4e4f-b714-9e47d5897e5f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>team</th>\n",
              "      <th>pos</th>\n",
              "      <th>name</th>\n",
              "      <th>cost</th>\n",
              "      <th>selected_by_percent</th>\n",
              "      <th>expected_goals</th>\n",
              "      <th>expected_assists</th>\n",
              "      <th>goals_scored</th>\n",
              "      <th>assists</th>\n",
              "      <th>bps</th>\n",
              "      <th>ict_index</th>\n",
              "      <th>points</th>\n",
              "      <th>points_per_game</th>\n",
              "      <th>minutes</th>\n",
              "      <th>apppoint</th>\n",
              "      <th>assistvalue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>417</th>\n",
              "      <td>355</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>F</td>\n",
              "      <td>Haaland</td>\n",
              "      <td>14.0</td>\n",
              "      <td>91.1</td>\n",
              "      <td>1.03</td>\n",
              "      <td>0.07</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>57</td>\n",
              "      <td>20.2</td>\n",
              "      <td>15</td>\n",
              "      <td>7.5</td>\n",
              "      <td>169</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>Saka</td>\n",
              "      <td>8.6</td>\n",
              "      <td>66.4</td>\n",
              "      <td>0.35</td>\n",
              "      <td>0.28</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>52</td>\n",
              "      <td>21.0</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>178</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>142</th>\n",
              "      <td>131</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>D</td>\n",
              "      <td>Estupi√±an</td>\n",
              "      <td>5.2</td>\n",
              "      <td>60.9</td>\n",
              "      <td>0.36</td>\n",
              "      <td>0.91</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>67</td>\n",
              "      <td>26.8</td>\n",
              "      <td>18</td>\n",
              "      <td>9.0</td>\n",
              "      <td>180</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>459</th>\n",
              "      <td>396</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>Rashford</td>\n",
              "      <td>9.0</td>\n",
              "      <td>44.7</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.07</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>12.2</td>\n",
              "      <td>5</td>\n",
              "      <td>2.5</td>\n",
              "      <td>171</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>154</th>\n",
              "      <td>143</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>M</td>\n",
              "      <td>Mitoma</td>\n",
              "      <td>6.6</td>\n",
              "      <td>42.5</td>\n",
              "      <td>0.55</td>\n",
              "      <td>1.29</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>66</td>\n",
              "      <td>26.2</td>\n",
              "      <td>17</td>\n",
              "      <td>8.5</td>\n",
              "      <td>170</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>498</th>\n",
              "      <td>430</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Trippier</td>\n",
              "      <td>6.5</td>\n",
              "      <td>32.1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.33</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>41</td>\n",
              "      <td>12.4</td>\n",
              "      <td>4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>180</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>465</th>\n",
              "      <td>597</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>G</td>\n",
              "      <td>Onana</td>\n",
              "      <td>5.0</td>\n",
              "      <td>29.5</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>51</td>\n",
              "      <td>8.8</td>\n",
              "      <td>11</td>\n",
              "      <td>5.5</td>\n",
              "      <td>180</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>354</th>\n",
              "      <td>308</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>M</td>\n",
              "      <td>Salah</td>\n",
              "      <td>12.5</td>\n",
              "      <td>29.3</td>\n",
              "      <td>1.51</td>\n",
              "      <td>0.42</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>30</td>\n",
              "      <td>20.2</td>\n",
              "      <td>10</td>\n",
              "      <td>5.0</td>\n",
              "      <td>161</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>483</th>\n",
              "      <td>415</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>F</td>\n",
              "      <td>Isak</td>\n",
              "      <td>7.7</td>\n",
              "      <td>27.4</td>\n",
              "      <td>0.76</td>\n",
              "      <td>0.04</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>58</td>\n",
              "      <td>13.6</td>\n",
              "      <td>15</td>\n",
              "      <td>7.5</td>\n",
              "      <td>132</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Gabriel</td>\n",
              "      <td>5.0</td>\n",
              "      <td>25.8</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>1.3</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>217</th>\n",
              "      <td>195</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>D</td>\n",
              "      <td>Chilwell</td>\n",
              "      <td>5.7</td>\n",
              "      <td>25.0</td>\n",
              "      <td>0.32</td>\n",
              "      <td>0.72</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>37</td>\n",
              "      <td>12.2</td>\n",
              "      <td>8</td>\n",
              "      <td>4.0</td>\n",
              "      <td>149</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>461</th>\n",
              "      <td>398</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>D</td>\n",
              "      <td>Shaw</td>\n",
              "      <td>5.5</td>\n",
              "      <td>24.9</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.51</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>48</td>\n",
              "      <td>15.5</td>\n",
              "      <td>6</td>\n",
              "      <td>3.0</td>\n",
              "      <td>180</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>D</td>\n",
              "      <td>Saliba</td>\n",
              "      <td>5.1</td>\n",
              "      <td>24.8</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>51</td>\n",
              "      <td>7.8</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>180</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>60</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>F</td>\n",
              "      <td>Watkins</td>\n",
              "      <td>8.0</td>\n",
              "      <td>24.8</td>\n",
              "      <td>0.38</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>29</td>\n",
              "      <td>13.7</td>\n",
              "      <td>10</td>\n",
              "      <td>5.0</td>\n",
              "      <td>163</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>146</th>\n",
              "      <td>135</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>F</td>\n",
              "      <td>Jo√£o Pedro</td>\n",
              "      <td>5.6</td>\n",
              "      <td>24.5</td>\n",
              "      <td>1.46</td>\n",
              "      <td>0.04</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>25</td>\n",
              "      <td>13.8</td>\n",
              "      <td>7</td>\n",
              "      <td>3.5</td>\n",
              "      <td>120</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>618</th>\n",
              "      <td>524</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>G</td>\n",
              "      <td>Areola</td>\n",
              "      <td>4.0</td>\n",
              "      <td>23.9</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>47</td>\n",
              "      <td>5.9</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>180</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>437</th>\n",
              "      <td>373</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>M</td>\n",
              "      <td>B.Fernandes</td>\n",
              "      <td>8.5</td>\n",
              "      <td>23.5</td>\n",
              "      <td>0.79</td>\n",
              "      <td>1.15</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>26</td>\n",
              "      <td>17.1</td>\n",
              "      <td>4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>180</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>M</td>\n",
              "      <td>√òdegaard</td>\n",
              "      <td>8.5</td>\n",
              "      <td>22.8</td>\n",
              "      <td>0.94</td>\n",
              "      <td>0.18</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>43</td>\n",
              "      <td>14.0</td>\n",
              "      <td>13</td>\n",
              "      <td>6.5</td>\n",
              "      <td>179</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>473</th>\n",
              "      <td>405</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>D</td>\n",
              "      <td>Botman</td>\n",
              "      <td>4.5</td>\n",
              "      <td>19.3</td>\n",
              "      <td>0.07</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>42</td>\n",
              "      <td>6.6</td>\n",
              "      <td>7</td>\n",
              "      <td>3.5</td>\n",
              "      <td>180</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>120</th>\n",
              "      <td>108</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>M</td>\n",
              "      <td>Mbeumo</td>\n",
              "      <td>6.6</td>\n",
              "      <td>18.1</td>\n",
              "      <td>3.14</td>\n",
              "      <td>0.27</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>57</td>\n",
              "      <td>24.6</td>\n",
              "      <td>23</td>\n",
              "      <td>11.5</td>\n",
              "      <td>180</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3a13e677-abfd-4e4f-b714-9e47d5897e5f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3a13e677-abfd-4e4f-b714-9e47d5897e5f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3a13e677-abfd-4e4f-b714-9e47d5897e5f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b091be4c-74ee-4e9e-abcf-1c33eec87f31\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b091be4c-74ee-4e9e-abcf-1c33eec87f31')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b091be4c-74ee-4e9e-abcf-1c33eec87f31 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ax = sns.barplot(x='selected_by_percent', y='name', data=Mostselected, hue='pos', dodge=False)\n",
        "sns.set(rc={'figure.figsize':(11.7,8.27)})\n",
        "plt.title(\"Most Selected\")\n",
        "plt.xticks(rotation=90)\n",
        "plt.ylabel(\"selected_by_percent\")\n",
        "plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0)\n",
        "plt.gcf().set_size_inches(30,10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 601
        },
        "id": "8PBz92opthgG",
        "outputId": "b2ee22de-b24e-4f91-b685-1f0939834266"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 3000x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fbref = pd.read_html('https://fbref.com/en/comps/9/Premier-League-Stats')\n",
        "epltable = fbref[0]\n",
        "epltablexGxGc = epltable.drop(columns=[\n",
        " 'Last 5',\n",
        " 'Attendance',\n",
        " 'Top Team Scorer',\n",
        " 'Goalkeeper',\n",
        " 'Notes'])\n",
        "epltablexGxGc= epltablexGxGc.replace('Newcastle Utd', 'Newcastle United')\n",
        "epltablexGxGc= epltablexGxGc.replace('Wolves','Wolverhampton Wanderers')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leeds United','Leeds')\n",
        "epltablexGxGc= epltablexGxGc.replace('Leicester City','Leicester')\n",
        "epltablexGxGc= epltablexGxGc.replace('Manchester Utd','Manchester United')\n",
        "epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n",
        "epltablexGxGc= epltablexGxGc.replace('Nottham Forest','Nottingham Forest')\n",
        "epltablexGxGc['xCSP'] = (4 - (epltablexGxGc.xGA * 4/23))\n",
        "epltablexGxGc.rename(columns={'Squad': 'team'}, inplace=True)\n",
        "epltablexGxGc['xG/90'] = (epltablexGxGc.xG / epltablexGxGc.MP)\n",
        "epltablexGxGc['xGA/90'] = (epltablexGxGc.xGA / epltablexGxGc.MP)\n",
        "epltablexGxGc"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 604
        },
        "id": "D8nuKObbLt5s",
        "outputId": "e83a700a-8e88-41fa-f4cc-d4cb96a33e59"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-60-f34def3770e4>:14: FutureWarning: The default value of regex will change from True to False in a future version.\n",
            "  epltablexGxGc['Squad'] = epltablexGxGc['Squad'].str.replace(r\"[\\\"\\',]\", '')\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Rk                     team  MP  W  D  L  GF  GA  GD  Pts  Pts/MP   xG  \\\n",
              "0    1                 Brighton   2  2  0  0   8   2   6    6     3.0  6.2   \n",
              "1    2          Manchester City   2  2  0  0   4   0   4    6     3.0  2.9   \n",
              "2    3                  Arsenal   2  2  0  0   3   1   2    6     3.0  2.8   \n",
              "3    4                Brentford   2  1  1  0   5   2   3    4     2.0  5.9   \n",
              "4    5                Liverpool   2  1  1  0   4   2   2    4     2.0  4.3   \n",
              "5    6                Tottenham   2  1  1  0   4   2   2    4     2.0  3.0   \n",
              "6    7                 West Ham   2  1  1  0   4   2   2    4     2.0  2.9   \n",
              "7    8         Newcastle United   2  1  0  1   5   2   3    3     1.5  3.6   \n",
              "8    9              Aston Villa   2  1  0  1   5   5   0    3     1.5  4.7   \n",
              "9   10        Nottingham Forest   2  1  0  1   3   3   0    3     1.5  2.6   \n",
              "10  11           Crystal Palace   2  1  0  1   1   1   0    3     1.5  2.9   \n",
              "11  12        Manchester United   2  1  0  1   1   2  -1    3     1.5  4.3   \n",
              "12  13                   Fulham   2  1  0  1   1   3  -2    3     1.5  2.0   \n",
              "13  14              Bournemouth   2  0  1  1   2   4  -2    1     0.5  2.6   \n",
              "14  15                  Chelsea   2  0  1  1   2   4  -2    1     0.5  3.8   \n",
              "15  16            Sheffield Utd   2  0  0  2   1   3  -2    0     0.0  1.0   \n",
              "16  17               Luton Town   1  0  0  1   1   4  -3    0     0.0  1.5   \n",
              "17  18                  Burnley   1  0  0  1   0   3  -3    0     0.0  0.3   \n",
              "18  19  Wolverhampton Wanderers   2  0  0  2   1   5  -4    0     0.0  4.3   \n",
              "19  20                  Everton   2  0  0  2   0   5  -5    0     0.0  3.3   \n",
              "\n",
              "    xGA  xGD  xGD/90      xCSP  xG/90  xGA/90  \n",
              "0   3.5  2.7    1.34  3.391304   3.10    1.75  \n",
              "1   0.6  2.3    1.17  3.895652   1.45    0.30  \n",
              "2   2.2  0.6    0.30  3.617391   1.40    1.10  \n",
              "3   1.7  4.1    2.06  3.704348   2.95    0.85  \n",
              "4   2.6  1.7    0.84  3.547826   2.15    1.30  \n",
              "5   4.3 -1.3   -0.63  3.252174   1.50    2.15  \n",
              "6   3.8 -0.9   -0.47  3.339130   1.45    1.90  \n",
              "7   2.8  0.9    0.44  3.513043   1.80    1.40  \n",
              "8   4.0  0.7    0.35  3.304348   2.35    2.00  \n",
              "9   1.3  1.2    0.62  3.773913   1.30    0.65  \n",
              "10  2.5  0.4    0.21  3.565217   1.45    1.25  \n",
              "11  4.0  0.3    0.15  3.304348   2.15    2.00  \n",
              "12  6.4 -4.4   -2.21  2.886957   1.00    3.20  \n",
              "13  4.1 -1.5   -0.76  3.286957   1.30    2.05  \n",
              "14  3.1  0.8    0.39  3.460870   1.90    1.55  \n",
              "15  3.3 -2.3   -1.13  3.426087   0.50    1.65  \n",
              "16  4.0 -2.5   -2.54  3.304348   1.50    4.00  \n",
              "17  1.9 -1.6   -1.62  3.669565   0.30    1.90  \n",
              "18  4.4 -0.1   -0.06  3.234783   2.15    2.20  \n",
              "19  4.4 -1.1   -0.54  3.234783   1.65    2.20  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-37ed10ba-13ef-4b1d-af35-c237e573b939\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rk</th>\n",
              "      <th>team</th>\n",
              "      <th>MP</th>\n",
              "      <th>W</th>\n",
              "      <th>D</th>\n",
              "      <th>L</th>\n",
              "      <th>GF</th>\n",
              "      <th>GA</th>\n",
              "      <th>GD</th>\n",
              "      <th>Pts</th>\n",
              "      <th>Pts/MP</th>\n",
              "      <th>xG</th>\n",
              "      <th>xGA</th>\n",
              "      <th>xGD</th>\n",
              "      <th>xGD/90</th>\n",
              "      <th>xCSP</th>\n",
              "      <th>xG/90</th>\n",
              "      <th>xGA/90</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Brighton</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>3.0</td>\n",
              "      <td>6.2</td>\n",
              "      <td>3.5</td>\n",
              "      <td>2.7</td>\n",
              "      <td>1.34</td>\n",
              "      <td>3.391304</td>\n",
              "      <td>3.10</td>\n",
              "      <td>1.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Manchester City</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2.9</td>\n",
              "      <td>0.6</td>\n",
              "      <td>2.3</td>\n",
              "      <td>1.17</td>\n",
              "      <td>3.895652</td>\n",
              "      <td>1.45</td>\n",
              "      <td>0.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Arsenal</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>3.0</td>\n",
              "      <td>2.8</td>\n",
              "      <td>2.2</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.30</td>\n",
              "      <td>3.617391</td>\n",
              "      <td>1.40</td>\n",
              "      <td>1.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Brentford</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>5.9</td>\n",
              "      <td>1.7</td>\n",
              "      <td>4.1</td>\n",
              "      <td>2.06</td>\n",
              "      <td>3.704348</td>\n",
              "      <td>2.95</td>\n",
              "      <td>0.85</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Liverpool</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>4.3</td>\n",
              "      <td>2.6</td>\n",
              "      <td>1.7</td>\n",
              "      <td>0.84</td>\n",
              "      <td>3.547826</td>\n",
              "      <td>2.15</td>\n",
              "      <td>1.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Tottenham</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>4.3</td>\n",
              "      <td>-1.3</td>\n",
              "      <td>-0.63</td>\n",
              "      <td>3.252174</td>\n",
              "      <td>1.50</td>\n",
              "      <td>2.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>West Ham</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.9</td>\n",
              "      <td>3.8</td>\n",
              "      <td>-0.9</td>\n",
              "      <td>-0.47</td>\n",
              "      <td>3.339130</td>\n",
              "      <td>1.45</td>\n",
              "      <td>1.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>Newcastle United</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>3.6</td>\n",
              "      <td>2.8</td>\n",
              "      <td>0.9</td>\n",
              "      <td>0.44</td>\n",
              "      <td>3.513043</td>\n",
              "      <td>1.80</td>\n",
              "      <td>1.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Aston Villa</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>4.7</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.35</td>\n",
              "      <td>3.304348</td>\n",
              "      <td>2.35</td>\n",
              "      <td>2.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>2.6</td>\n",
              "      <td>1.3</td>\n",
              "      <td>1.2</td>\n",
              "      <td>0.62</td>\n",
              "      <td>3.773913</td>\n",
              "      <td>1.30</td>\n",
              "      <td>0.65</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>Crystal Palace</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>2.9</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.21</td>\n",
              "      <td>3.565217</td>\n",
              "      <td>1.45</td>\n",
              "      <td>1.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>Manchester United</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>-1</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>4.3</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.15</td>\n",
              "      <td>3.304348</td>\n",
              "      <td>2.15</td>\n",
              "      <td>2.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13</td>\n",
              "      <td>Fulham</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>-2</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>2.0</td>\n",
              "      <td>6.4</td>\n",
              "      <td>-4.4</td>\n",
              "      <td>-2.21</td>\n",
              "      <td>2.886957</td>\n",
              "      <td>1.00</td>\n",
              "      <td>3.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>Bournemouth</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>-2</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5</td>\n",
              "      <td>2.6</td>\n",
              "      <td>4.1</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>-0.76</td>\n",
              "      <td>3.286957</td>\n",
              "      <td>1.30</td>\n",
              "      <td>2.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>Chelsea</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>-2</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5</td>\n",
              "      <td>3.8</td>\n",
              "      <td>3.1</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.39</td>\n",
              "      <td>3.460870</td>\n",
              "      <td>1.90</td>\n",
              "      <td>1.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>16</td>\n",
              "      <td>Sheffield Utd</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>-2</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>3.3</td>\n",
              "      <td>-2.3</td>\n",
              "      <td>-1.13</td>\n",
              "      <td>3.426087</td>\n",
              "      <td>0.50</td>\n",
              "      <td>1.65</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>Luton Town</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>-3</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.5</td>\n",
              "      <td>4.0</td>\n",
              "      <td>-2.5</td>\n",
              "      <td>-2.54</td>\n",
              "      <td>3.304348</td>\n",
              "      <td>1.50</td>\n",
              "      <td>4.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>Burnley</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>-3</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>1.9</td>\n",
              "      <td>-1.6</td>\n",
              "      <td>-1.62</td>\n",
              "      <td>3.669565</td>\n",
              "      <td>0.30</td>\n",
              "      <td>1.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>Wolverhampton Wanderers</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>-4</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.3</td>\n",
              "      <td>4.4</td>\n",
              "      <td>-0.1</td>\n",
              "      <td>-0.06</td>\n",
              "      <td>3.234783</td>\n",
              "      <td>2.15</td>\n",
              "      <td>2.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>Everton</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>-5</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.3</td>\n",
              "      <td>4.4</td>\n",
              "      <td>-1.1</td>\n",
              "      <td>-0.54</td>\n",
              "      <td>3.234783</td>\n",
              "      <td>1.65</td>\n",
              "      <td>2.20</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-37ed10ba-13ef-4b1d-af35-c237e573b939')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-37ed10ba-13ef-4b1d-af35-c237e573b939 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-37ed10ba-13ef-4b1d-af35-c237e573b939');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cc0d8557-919b-4c64-93c4-e86e70c13d7b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cc0d8557-919b-4c64-93c4-e86e70c13d7b')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cc0d8557-919b-4c64-93c4-e86e70c13d7b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(1, figsize=(10,8))\n",
        "ax.scatter(x=epltablexGxGc['xG/90'],y=epltablexGxGc['xGA/90'],c='DarkBlue')\n",
        "# set labels\n",
        "ax.set_xlabel('xG/90')\n",
        "ax.set_ylabel('xGA/90')\n",
        "\n",
        "# annotate points in axis\n",
        "for idx, row in epltablexGxGc.iterrows():\n",
        "    ax.annotate(row['team'], (row['xG/90'], row['xGA/90']) )\n",
        "# force matplotlib to draw the graph\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "id": "TYn5yVsCNlLv",
        "outputId": "74dbc8b9-35f6-4231-ea0c-f8d027ee4715"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 565
        },
        "id": "wrjHrDmJ8OlM",
        "outputId": "990385d7-d79f-45f7-fd3d-df985b33ea1c"
      },
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id       player_name games_x time_x goals_1wks_x           xG_1wks_x  \\\n",
              "0     6049       Solly March       2    165            3  2.0221502780914307   \n",
              "1     6552      Bryan Mbeumo       2    180            3  2.9682201147079468   \n",
              "2     5232    Alexander Isak       2    148            2  1.1635656356811523   \n",
              "3     5786       Yoane Wissa       2    164            2  1.2056616991758347   \n",
              "4     7814     Taiwo Awoniyi       2     99            2  1.0606651902198792   \n",
              "..     ...               ...     ...    ...          ...                 ...   \n",
              "337  11730  Anis Ben Slimane       1      9            0                   0   \n",
              "338  11731      Andre Brooks       2     16            0                   0   \n",
              "339  11807       Ian Maatsen       1      2            0                   0   \n",
              "340  11810     Mason Burstow       1      1            0                   0   \n",
              "341  11926     Edson √Ålvarez       1      1            0                   0   \n",
              "\n",
              "    assists_1wks_x            xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0                0  0.10514960438013077            8                 3  ...   \n",
              "1                0  0.09496916830539703            6                 1  ...   \n",
              "2                0                    0            3                 0  ...   \n",
              "3                0  0.07477104663848877           10                 2  ...   \n",
              "4                0  0.07604995369911194            2                 2  ...   \n",
              "..             ...                  ...          ...               ...  ...   \n",
              "337              0                    0            0                 0  ...   \n",
              "338              0                    0            0                 0  ...   \n",
              "339              0                    0            0                 0  ...   \n",
              "340              0                    0            0                 0  ...   \n",
              "341              0                    0            0                 0  ...   \n",
              "\n",
              "    assists_1wks_y            xA_1wks_y shots_1wks_y key_passes_1wks_y  \\\n",
              "0                0  0.10514960438013077            8                 3   \n",
              "1                0  0.09496916830539703            6                 1   \n",
              "2                0                    0            3                 0   \n",
              "3                0  0.07477104663848877           10                 2   \n",
              "4                0  0.07604995369911194            2                 2   \n",
              "..             ...                  ...          ...               ...   \n",
              "337              0                    0            0                 0   \n",
              "338              0                    0            0                 0   \n",
              "339              0                    0            0                 0   \n",
              "340              0                    0            0                 0   \n",
              "341              0                    0            0                 0   \n",
              "\n",
              "    yellow_cards red_cards npg_1wks_y         npxG_1wks_y             xGChain  \\\n",
              "0              0         0          3  2.0221502780914307   2.436366558074951   \n",
              "1              0         0          1  1.4458823800086975  1.4458823800086975   \n",
              "2              0         0          2  1.1635656356811523  1.1712167114019394   \n",
              "3              0         0          2  1.2056616991758347  0.7587571889162064   \n",
              "4              0         0          2  1.0606651902198792  1.1367151141166687   \n",
              "..           ...       ...        ...                 ...                 ...   \n",
              "337            1         0          0                   0                   0   \n",
              "338            0         0          0                   0                   0   \n",
              "339            0         0          0                   0                   0   \n",
              "340            0         0          0                   0                   0   \n",
              "341            0         0          0                   0                   0   \n",
              "\n",
              "              xGBuildup  \n",
              "0     0.386583149433136  \n",
              "1                     0  \n",
              "2    0.5321443229913712  \n",
              "3                     0  \n",
              "4                     0  \n",
              "..                  ...  \n",
              "337                   0  \n",
              "338                   0  \n",
              "339                   0  \n",
              "340                   0  \n",
              "341                   0  \n",
              "\n",
              "[342 rows x 44 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c114c242-365d-4dd4-82e4-576fb30fa20c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>assists_1wks_y</th>\n",
              "      <th>xA_1wks_y</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6049</td>\n",
              "      <td>Solly March</td>\n",
              "      <td>2</td>\n",
              "      <td>165</td>\n",
              "      <td>3</td>\n",
              "      <td>2.0221502780914307</td>\n",
              "      <td>0</td>\n",
              "      <td>0.10514960438013077</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.10514960438013077</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2.0221502780914307</td>\n",
              "      <td>2.436366558074951</td>\n",
              "      <td>0.386583149433136</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>3</td>\n",
              "      <td>2.9682201147079468</td>\n",
              "      <td>0</td>\n",
              "      <td>0.09496916830539703</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.09496916830539703</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.4458823800086975</td>\n",
              "      <td>1.4458823800086975</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>2</td>\n",
              "      <td>148</td>\n",
              "      <td>2</td>\n",
              "      <td>1.1635656356811523</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.1635656356811523</td>\n",
              "      <td>1.1712167114019394</td>\n",
              "      <td>0.5321443229913712</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5786</td>\n",
              "      <td>Yoane Wissa</td>\n",
              "      <td>2</td>\n",
              "      <td>164</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2056616991758347</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07477104663848877</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07477104663848877</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2056616991758347</td>\n",
              "      <td>0.7587571889162064</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>2</td>\n",
              "      <td>99</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0606651902198792</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07604995369911194</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07604995369911194</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0606651902198792</td>\n",
              "      <td>1.1367151141166687</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>337</th>\n",
              "      <td>11730</td>\n",
              "      <td>Anis Ben Slimane</td>\n",
              "      <td>1</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>338</th>\n",
              "      <td>11731</td>\n",
              "      <td>Andre Brooks</td>\n",
              "      <td>2</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>339</th>\n",
              "      <td>11807</td>\n",
              "      <td>Ian Maatsen</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>340</th>\n",
              "      <td>11810</td>\n",
              "      <td>Mason Burstow</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>341</th>\n",
              "      <td>11926</td>\n",
              "      <td>Edson √Ålvarez</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>342 rows √ó 44 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c114c242-365d-4dd4-82e4-576fb30fa20c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c114c242-365d-4dd4-82e4-576fb30fa20c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c114c242-365d-4dd4-82e4-576fb30fa20c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e00e2d85-b0ab-40fc-90eb-ba6e2973747b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e00e2d85-b0ab-40fc-90eb-ba6e2973747b')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e00e2d85-b0ab-40fc-90eb-ba6e2973747b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 62
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['goals'] = EPL_player_df['goals_1wks_x'].astype(int)\n",
        "top25goals = EPL_player_df.nlargest(20, 'goals')\n",
        "top25goals"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 934
        },
        "id": "3H-vTRXF8VDs",
        "outputId": "995f6cd8-22a5-4dd2-a372-4a17a965c0e2"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id      player_name games_x time_x goals_1wks_x            xG_1wks_x  \\\n",
              "0    6049      Solly March       2    165            3   2.0221502780914307   \n",
              "1    6552     Bryan Mbeumo       2    180            3   2.9682201147079468   \n",
              "2    5232   Alexander Isak       2    148            2   1.1635656356811523   \n",
              "3    5786      Yoane Wissa       2    164            2   1.2056616991758347   \n",
              "4    7814    Taiwo Awoniyi       2     99            2   1.0606651902198792   \n",
              "5    8260   Erling Haaland       2    175            2    1.290044128894806   \n",
              "6   10408        Luis D√≠az       2    174            2   1.1087555587291718   \n",
              "7     468    Callum Wilson       2     32            1    1.220109462738037   \n",
              "8     531  Michail Antonio       2    164            1   0.1654975563287735   \n",
              "9    1250    Mohamed Salah       2    174            1   2.1068914383649826   \n",
              "10   1679  Dominic Solanke       2    180            1   1.3614608347415924   \n",
              "11   1776     Jarrod Bowen       2    180            1   0.5545249581336975   \n",
              "12   2245   Raphael Varane       2    180            1   0.9178637377917767   \n",
              "13   2496            Rodri       2    180            1   0.7942110300064087   \n",
              "14   2517  Martin Odegaard       2    180            1   0.9319707900285721   \n",
              "15   3697  Odsonne Edouard       2    180            1   1.8570213317871094   \n",
              "16   4456       Chris Wood       2      5            1  0.11083554476499557   \n",
              "17   5136        Estupi√±√°n       2    180            1   0.6160032898187637   \n",
              "18   5221      Leon Bailey       2    129            1   0.5992322564125061   \n",
              "19   6122     Douglas Luiz       2    163            1   0.9703840911388397   \n",
              "\n",
              "   assists_1wks_x             xA_1wks_x shots_1wks_x key_passes_1wks_x  ...  \\\n",
              "0               0   0.10514960438013077            8                 3  ...   \n",
              "1               0   0.09496916830539703            6                 1  ...   \n",
              "2               0                     0            3                 0  ...   \n",
              "3               0   0.07477104663848877           10                 2  ...   \n",
              "4               0   0.07604995369911194            2                 2  ...   \n",
              "5               0    0.3404667377471924            8                 3  ...   \n",
              "6               0    0.3413136154413223            7                 3  ...   \n",
              "7               0  0.015900330618023872            4                 1  ...   \n",
              "8               0                     0            2                 0  ...   \n",
              "9               1     0.446853905916214            8                 3  ...   \n",
              "10              1   0.17366815358400345            6                 4  ...   \n",
              "11              0    0.6426277756690979            8                 3  ...   \n",
              "12              0                     0            4                 0  ...   \n",
              "13              1    0.5058456659317017            4                 1  ...   \n",
              "14              0   0.13946469873189926            6                 2  ...   \n",
              "15              0    0.2072524130344391           10                 3  ...   \n",
              "16              0                     0            1                 0  ...   \n",
              "17              2     1.843966782093048            5                 8  ...   \n",
              "18              1    0.6844462156295776            2                 1  ...   \n",
              "19              0    0.2114340364933014            5                 2  ...   \n",
              "\n",
              "               xA_1wks_y shots_1wks_y key_passes_1wks_y yellow_cards  \\\n",
              "0    0.10514960438013077            8                 3            0   \n",
              "1    0.09496916830539703            6                 1            0   \n",
              "2                      0            3                 0            0   \n",
              "3    0.07477104663848877           10                 2            0   \n",
              "4    0.07604995369911194            2                 2            0   \n",
              "5     0.3404667377471924            8                 3            0   \n",
              "6     0.3413136154413223            7                 3            0   \n",
              "7   0.015900330618023872            4                 1            0   \n",
              "8                      0            2                 0            1   \n",
              "9      0.446853905916214            8                 3            0   \n",
              "10   0.17366815358400345            6                 4            0   \n",
              "11    0.6426277756690979            8                 3            1   \n",
              "12                     0            4                 0            0   \n",
              "13    0.5058456659317017            4                 1            0   \n",
              "14   0.13946469873189926            6                 2            0   \n",
              "15    0.2072524130344391           10                 3            0   \n",
              "16                     0            1                 0            0   \n",
              "17     1.843966782093048            5                 8            2   \n",
              "18    0.6844462156295776            2                 1            0   \n",
              "19    0.2114340364933014            5                 2            2   \n",
              "\n",
              "   red_cards npg_1wks_y          npxG_1wks_y              xGChain  \\\n",
              "0          0          3   2.0221502780914307    2.436366558074951   \n",
              "1          0          1   1.4458823800086975   1.4458823800086975   \n",
              "2          0          2   1.1635656356811523   1.1712167114019394   \n",
              "3          0          2   1.2056616991758347   0.7587571889162064   \n",
              "4          0          2   1.0606651902198792   1.1367151141166687   \n",
              "5          0          2    1.290044128894806    1.253859281539917   \n",
              "6          0          2   1.1087555587291718   1.3128036856651306   \n",
              "7          0          1    1.220109462738037    1.236009793356061   \n",
              "8          0          1   0.1654975563287735  0.22945697605609894   \n",
              "9          0          1   1.3457226008176804   1.1990825533866882   \n",
              "10         0          1   1.3614608347415924   1.4644110351800919   \n",
              "11         0          1   0.5545249581336975   0.6693522334098816   \n",
              "12         0          1   0.9178637377917767   1.5462533831596375   \n",
              "13         0          1   0.7942110300064087   1.9895339608192444   \n",
              "14         0          0  0.17083873972296715    1.152104675769806   \n",
              "15         0          1   1.8570213317871094   1.6147404313087463   \n",
              "16         0          1  0.11083554476499557  0.11083554476499557   \n",
              "17         0          1   0.6160032898187637    3.734929919242859   \n",
              "18         0          1   0.5992322564125061    1.595856636762619   \n",
              "19         0          0  0.20921525359153748    1.678970217704773   \n",
              "\n",
              "              xGBuildup goals  \n",
              "0     0.386583149433136     3  \n",
              "1                     0     3  \n",
              "2    0.5321443229913712     2  \n",
              "3                     0     2  \n",
              "4                     0     2  \n",
              "5   0.12919408828020096     2  \n",
              "6    0.4201557785272598     2  \n",
              "7                     0     1  \n",
              "8   0.06395941972732544     1  \n",
              "9   0.09460654854774475     1  \n",
              "10                    0     1  \n",
              "11   0.2632986605167389     1  \n",
              "12   0.7571720480918884     1  \n",
              "13   1.9751812815666199     1  \n",
              "14   0.9327370226383209     1  \n",
              "15  0.15282482281327248     1  \n",
              "16                    0     1  \n",
              "17     2.90431547164917     1  \n",
              "18   0.4103304147720337     1  \n",
              "19   1.5359014570713043     1  \n",
              "\n",
              "[20 rows x 45 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e49a59cc-41cb-4081-a7c1-c0a1a54175f2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>xA_1wks_y</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6049</td>\n",
              "      <td>Solly March</td>\n",
              "      <td>2</td>\n",
              "      <td>165</td>\n",
              "      <td>3</td>\n",
              "      <td>2.0221502780914307</td>\n",
              "      <td>0</td>\n",
              "      <td>0.10514960438013077</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>0.10514960438013077</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2.0221502780914307</td>\n",
              "      <td>2.436366558074951</td>\n",
              "      <td>0.386583149433136</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6552</td>\n",
              "      <td>Bryan Mbeumo</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>3</td>\n",
              "      <td>2.9682201147079468</td>\n",
              "      <td>0</td>\n",
              "      <td>0.09496916830539703</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.09496916830539703</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.4458823800086975</td>\n",
              "      <td>1.4458823800086975</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>5232</td>\n",
              "      <td>Alexander Isak</td>\n",
              "      <td>2</td>\n",
              "      <td>148</td>\n",
              "      <td>2</td>\n",
              "      <td>1.1635656356811523</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.1635656356811523</td>\n",
              "      <td>1.1712167114019394</td>\n",
              "      <td>0.5321443229913712</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5786</td>\n",
              "      <td>Yoane Wissa</td>\n",
              "      <td>2</td>\n",
              "      <td>164</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2056616991758347</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07477104663848877</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0.07477104663848877</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.2056616991758347</td>\n",
              "      <td>0.7587571889162064</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7814</td>\n",
              "      <td>Taiwo Awoniyi</td>\n",
              "      <td>2</td>\n",
              "      <td>99</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0606651902198792</td>\n",
              "      <td>0</td>\n",
              "      <td>0.07604995369911194</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0.07604995369911194</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0606651902198792</td>\n",
              "      <td>1.1367151141166687</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>8260</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>2</td>\n",
              "      <td>175</td>\n",
              "      <td>2</td>\n",
              "      <td>1.290044128894806</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3404667377471924</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>0.3404667377471924</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.290044128894806</td>\n",
              "      <td>1.253859281539917</td>\n",
              "      <td>0.12919408828020096</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>10408</td>\n",
              "      <td>Luis D√≠az</td>\n",
              "      <td>2</td>\n",
              "      <td>174</td>\n",
              "      <td>2</td>\n",
              "      <td>1.1087555587291718</td>\n",
              "      <td>0</td>\n",
              "      <td>0.3413136154413223</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>0.3413136154413223</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1.1087555587291718</td>\n",
              "      <td>1.3128036856651306</td>\n",
              "      <td>0.4201557785272598</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>468</td>\n",
              "      <td>Callum Wilson</td>\n",
              "      <td>2</td>\n",
              "      <td>32</td>\n",
              "      <td>1</td>\n",
              "      <td>1.220109462738037</td>\n",
              "      <td>0</td>\n",
              "      <td>0.015900330618023872</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.015900330618023872</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.220109462738037</td>\n",
              "      <td>1.236009793356061</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>531</td>\n",
              "      <td>Michail Antonio</td>\n",
              "      <td>2</td>\n",
              "      <td>164</td>\n",
              "      <td>1</td>\n",
              "      <td>0.1654975563287735</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.1654975563287735</td>\n",
              "      <td>0.22945697605609894</td>\n",
              "      <td>0.06395941972732544</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>2</td>\n",
              "      <td>174</td>\n",
              "      <td>1</td>\n",
              "      <td>2.1068914383649826</td>\n",
              "      <td>1</td>\n",
              "      <td>0.446853905916214</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>0.446853905916214</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.3457226008176804</td>\n",
              "      <td>1.1990825533866882</td>\n",
              "      <td>0.09460654854774475</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>1</td>\n",
              "      <td>1.3614608347415924</td>\n",
              "      <td>1</td>\n",
              "      <td>0.17366815358400345</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0.17366815358400345</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.3614608347415924</td>\n",
              "      <td>1.4644110351800919</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>1776</td>\n",
              "      <td>Jarrod Bowen</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5545249581336975</td>\n",
              "      <td>0</td>\n",
              "      <td>0.6426277756690979</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>0.6426277756690979</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5545249581336975</td>\n",
              "      <td>0.6693522334098816</td>\n",
              "      <td>0.2632986605167389</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>2245</td>\n",
              "      <td>Raphael Varane</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>1</td>\n",
              "      <td>0.9178637377917767</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.9178637377917767</td>\n",
              "      <td>1.5462533831596375</td>\n",
              "      <td>0.7571720480918884</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>2496</td>\n",
              "      <td>Rodri</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>1</td>\n",
              "      <td>0.7942110300064087</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5058456659317017</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.5058456659317017</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.7942110300064087</td>\n",
              "      <td>1.9895339608192444</td>\n",
              "      <td>1.9751812815666199</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>2517</td>\n",
              "      <td>Martin Odegaard</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>1</td>\n",
              "      <td>0.9319707900285721</td>\n",
              "      <td>0</td>\n",
              "      <td>0.13946469873189926</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0.13946469873189926</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.17083873972296715</td>\n",
              "      <td>1.152104675769806</td>\n",
              "      <td>0.9327370226383209</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>3697</td>\n",
              "      <td>Odsonne Edouard</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>1</td>\n",
              "      <td>1.8570213317871094</td>\n",
              "      <td>0</td>\n",
              "      <td>0.2072524130344391</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>0.2072524130344391</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.8570213317871094</td>\n",
              "      <td>1.6147404313087463</td>\n",
              "      <td>0.15282482281327248</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>4456</td>\n",
              "      <td>Chris Wood</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0.11083554476499557</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.11083554476499557</td>\n",
              "      <td>0.11083554476499557</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>5136</td>\n",
              "      <td>Estupi√±√°n</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6160032898187637</td>\n",
              "      <td>2</td>\n",
              "      <td>1.843966782093048</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>...</td>\n",
              "      <td>1.843966782093048</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6160032898187637</td>\n",
              "      <td>3.734929919242859</td>\n",
              "      <td>2.90431547164917</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>5221</td>\n",
              "      <td>Leon Bailey</td>\n",
              "      <td>2</td>\n",
              "      <td>129</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5992322564125061</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6844462156295776</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0.6844462156295776</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5992322564125061</td>\n",
              "      <td>1.595856636762619</td>\n",
              "      <td>0.4103304147720337</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>6122</td>\n",
              "      <td>Douglas Luiz</td>\n",
              "      <td>2</td>\n",
              "      <td>163</td>\n",
              "      <td>1</td>\n",
              "      <td>0.9703840911388397</td>\n",
              "      <td>0</td>\n",
              "      <td>0.2114340364933014</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0.2114340364933014</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.20921525359153748</td>\n",
              "      <td>1.678970217704773</td>\n",
              "      <td>1.5359014570713043</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows √ó 45 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e49a59cc-41cb-4081-a7c1-c0a1a54175f2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e49a59cc-41cb-4081-a7c1-c0a1a54175f2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e49a59cc-41cb-4081-a7c1-c0a1a54175f2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9e76340b-2b10-4f23-a508-93b4fa605b84\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9e76340b-2b10-4f23-a508-93b4fa605b84')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9e76340b-2b10-4f23-a508-93b4fa605b84 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EPL_player_df['assists'] = EPL_player_df['assists_1wks_x'].astype(int)\n",
        "top25assists = EPL_player_df.nlargest(20, 'assists')\n",
        "top25assists"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 934
        },
        "id": "QhNKarUM-fT7",
        "outputId": "d60d46f5-5fc8-4f2f-e7a8-fd5242352ce6"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id         player_name games_x time_x goals_1wks_x  \\\n",
              "17    5136           Estupi√±√°n       2    180            1   \n",
              "38   10806        Kaoru Mitoma       2    173            1   \n",
              "85     843   James Ward-Prowse       1     90            0   \n",
              "123   3600        Serge Aurier       2    180            0   \n",
              "166   6818      James Maddison       2    180            0   \n",
              "307  11058        Julio Enciso       2     70            0   \n",
              "9     1250       Mohamed Salah       2    174            1   \n",
              "10    1679     Dominic Solanke       2    180            1   \n",
              "13    2496               Rodri       2    180            1   \n",
              "18    5221         Leon Bailey       2    129            1   \n",
              "22    6681       Harvey Barnes       2     42            1   \n",
              "39   10846      Juli√°n √Ålvarez       2    180            1   \n",
              "74     672         Jordan Ayew       2    180            0   \n",
              "81     782        Ben Chilwell       2    160            0   \n",
              "110   2199       Pablo Sarabia       2     98            0   \n",
              "135   5584   Aaron Wan-Bissaka       2    159            0   \n",
              "150   6055          Phil Foden       2    180            0   \n",
              "151   6063        Jacob Murphy       1      1            0   \n",
              "171   6888      William Saliba       2    180            0   \n",
              "204   7752  Gabriel Martinelli       2    162            0   \n",
              "\n",
              "                xG_1wks_x assists_1wks_x             xA_1wks_x shots_1wks_x  \\\n",
              "17     0.6160032898187637              2     1.843966782093048            5   \n",
              "38     0.4774659089744091              2    1.3675338625907898            2   \n",
              "85   0.020264754071831703              2   0.44829946756362915            1   \n",
              "123  0.022981125861406326              2     0.566937267780304            1   \n",
              "166   0.30644646286964417              2    1.1222328394651413            4   \n",
              "307    0.4382677674293518              2      1.22417414188385            4   \n",
              "9      2.1068914383649826              1     0.446853905916214            8   \n",
              "10     1.3614608347415924              1   0.17366815358400345            6   \n",
              "13     0.7942110300064087              1    0.5058456659317017            4   \n",
              "18     0.5992322564125061              1    0.6844462156295776            2   \n",
              "22     0.5178110171109438              1    1.1135693788528442            2   \n",
              "39     0.5955029129981995              1    0.6596553176641464            4   \n",
              "74    0.31429271399974823              1    0.7697744444012642            5   \n",
              "81    0.38840607553720474              1    0.8134539127349854            3   \n",
              "110   0.09539437294006348              1    0.9607797563076019            2   \n",
              "135                     0              1    1.0327167361974716            0   \n",
              "150    0.5386147797107697              1    0.8676768019795418            6   \n",
              "151                     0              1    0.5514945983886719            0   \n",
              "171                     0              1  0.037814829498529434            0   \n",
              "204    0.1310402899980545              1   0.12227851152420044            2   \n",
              "\n",
              "    key_passes_1wks_x  ... shots_1wks_y key_passes_1wks_y yellow_cards  \\\n",
              "17                  8  ...            5                 8            2   \n",
              "38                  9  ...            2                 9            1   \n",
              "85                  2  ...            1                 2            0   \n",
              "123                 2  ...            1                 2            1   \n",
              "166                 8  ...            4                 8            1   \n",
              "307                 2  ...            4                 2            1   \n",
              "9                   3  ...            8                 3            0   \n",
              "10                  4  ...            6                 4            0   \n",
              "13                  1  ...            4                 1            0   \n",
              "18                  1  ...            2                 1            0   \n",
              "22                  2  ...            2                 2            1   \n",
              "39                  8  ...            4                 8            1   \n",
              "74                  3  ...            5                 3            1   \n",
              "81                  3  ...            3                 3            0   \n",
              "110                 5  ...            2                 5            0   \n",
              "135                 4  ...            0                 4            1   \n",
              "150                 9  ...            6                 9            0   \n",
              "151                 2  ...            0                 2            0   \n",
              "171                 1  ...            0                 1            0   \n",
              "204                 3  ...            2                 3            0   \n",
              "\n",
              "    red_cards npg_1wks_y           npxG_1wks_y              xGChain  \\\n",
              "17          0          1    0.6160032898187637    3.734929919242859   \n",
              "38          0          1    0.4774659089744091   3.3747624158859253   \n",
              "85          0          0  0.020264754071831703  0.10158028453588486   \n",
              "123         0          0  0.022981125861406326   0.5972590148448944   \n",
              "166         0          0   0.30644646286964417   1.7750931978225708   \n",
              "307         0          0    0.4382677674293518    1.779298186302185   \n",
              "9           0          1    1.3457226008176804   1.1990825533866882   \n",
              "10          0          1    1.3614608347415924   1.4644110351800919   \n",
              "13          0          1    0.7942110300064087   1.9895339608192444   \n",
              "18          0          1    0.5992322564125061    1.595856636762619   \n",
              "22          0          1    0.5178110171109438    1.689121499657631   \n",
              "39          0          1    0.5955029129981995   1.4987684488296509   \n",
              "74          0          0   0.31429271399974823   1.1069282591342926   \n",
              "81          0          0   0.38840607553720474    0.638008363544941   \n",
              "110         0          0   0.09539437294006348    0.503137931227684   \n",
              "135         0          0                     0    2.641403913497925   \n",
              "150         0          0    0.5386147797107697   1.5521590113639832   \n",
              "151         0          0                     0   0.5514945983886719   \n",
              "171         0          0                     0   0.7344338297843933   \n",
              "204         0          0    0.1310402899980545   0.9965443909168243   \n",
              "\n",
              "               xGBuildup goals assists  \n",
              "17      2.90431547164917     1       2  \n",
              "38    2.1479651145637035     1       2  \n",
              "85    0.0813155323266983     0       2  \n",
              "123  0.03032173588871956     0       2  \n",
              "166   1.3377489745616913     0       2  \n",
              "307  0.17649975419044495     0       2  \n",
              "9    0.09460654854774475     1       1  \n",
              "10                     0     1       1  \n",
              "13    1.9751812815666199     1       1  \n",
              "18    0.4103304147720337     1       1  \n",
              "22    0.6506789922714233     1       1  \n",
              "39    0.6003369688987732     1       1  \n",
              "74    0.7268648743629456     0       1  \n",
              "81   0.24960225820541382     0       1  \n",
              "110   0.1007671095430851     0       1  \n",
              "135    1.735001266002655     0       1  \n",
              "150   0.8194546699523926     0       1  \n",
              "151                    0     0       1  \n",
              "171   0.7344338297843933     0       1  \n",
              "204   0.8062029778957367     0       1  \n",
              "\n",
              "[20 rows x 46 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0dd7f824-0503-4699-9bb2-57aa43f7ece7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>player_name</th>\n",
              "      <th>games_x</th>\n",
              "      <th>time_x</th>\n",
              "      <th>goals_1wks_x</th>\n",
              "      <th>xG_1wks_x</th>\n",
              "      <th>assists_1wks_x</th>\n",
              "      <th>xA_1wks_x</th>\n",
              "      <th>shots_1wks_x</th>\n",
              "      <th>key_passes_1wks_x</th>\n",
              "      <th>...</th>\n",
              "      <th>shots_1wks_y</th>\n",
              "      <th>key_passes_1wks_y</th>\n",
              "      <th>yellow_cards</th>\n",
              "      <th>red_cards</th>\n",
              "      <th>npg_1wks_y</th>\n",
              "      <th>npxG_1wks_y</th>\n",
              "      <th>xGChain</th>\n",
              "      <th>xGBuildup</th>\n",
              "      <th>goals</th>\n",
              "      <th>assists</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>5136</td>\n",
              "      <td>Estupi√±√°n</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6160032898187637</td>\n",
              "      <td>2</td>\n",
              "      <td>1.843966782093048</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6160032898187637</td>\n",
              "      <td>3.734929919242859</td>\n",
              "      <td>2.90431547164917</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>10806</td>\n",
              "      <td>Kaoru Mitoma</td>\n",
              "      <td>2</td>\n",
              "      <td>173</td>\n",
              "      <td>1</td>\n",
              "      <td>0.4774659089744091</td>\n",
              "      <td>2</td>\n",
              "      <td>1.3675338625907898</td>\n",
              "      <td>2</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.4774659089744091</td>\n",
              "      <td>3.3747624158859253</td>\n",
              "      <td>2.1479651145637035</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>85</th>\n",
              "      <td>843</td>\n",
              "      <td>James Ward-Prowse</td>\n",
              "      <td>1</td>\n",
              "      <td>90</td>\n",
              "      <td>0</td>\n",
              "      <td>0.020264754071831703</td>\n",
              "      <td>2</td>\n",
              "      <td>0.44829946756362915</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.020264754071831703</td>\n",
              "      <td>0.10158028453588486</td>\n",
              "      <td>0.0813155323266983</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>123</th>\n",
              "      <td>3600</td>\n",
              "      <td>Serge Aurier</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>0</td>\n",
              "      <td>0.022981125861406326</td>\n",
              "      <td>2</td>\n",
              "      <td>0.566937267780304</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.022981125861406326</td>\n",
              "      <td>0.5972590148448944</td>\n",
              "      <td>0.03032173588871956</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>166</th>\n",
              "      <td>6818</td>\n",
              "      <td>James Maddison</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>0</td>\n",
              "      <td>0.30644646286964417</td>\n",
              "      <td>2</td>\n",
              "      <td>1.1222328394651413</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.30644646286964417</td>\n",
              "      <td>1.7750931978225708</td>\n",
              "      <td>1.3377489745616913</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>307</th>\n",
              "      <td>11058</td>\n",
              "      <td>Julio Enciso</td>\n",
              "      <td>2</td>\n",
              "      <td>70</td>\n",
              "      <td>0</td>\n",
              "      <td>0.4382677674293518</td>\n",
              "      <td>2</td>\n",
              "      <td>1.22417414188385</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.4382677674293518</td>\n",
              "      <td>1.779298186302185</td>\n",
              "      <td>0.17649975419044495</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>1250</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>2</td>\n",
              "      <td>174</td>\n",
              "      <td>1</td>\n",
              "      <td>2.1068914383649826</td>\n",
              "      <td>1</td>\n",
              "      <td>0.446853905916214</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.3457226008176804</td>\n",
              "      <td>1.1990825533866882</td>\n",
              "      <td>0.09460654854774475</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>1679</td>\n",
              "      <td>Dominic Solanke</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>1</td>\n",
              "      <td>1.3614608347415924</td>\n",
              "      <td>1</td>\n",
              "      <td>0.17366815358400345</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.3614608347415924</td>\n",
              "      <td>1.4644110351800919</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>2496</td>\n",
              "      <td>Rodri</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>1</td>\n",
              "      <td>0.7942110300064087</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5058456659317017</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.7942110300064087</td>\n",
              "      <td>1.9895339608192444</td>\n",
              "      <td>1.9751812815666199</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>5221</td>\n",
              "      <td>Leon Bailey</td>\n",
              "      <td>2</td>\n",
              "      <td>129</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5992322564125061</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6844462156295776</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5992322564125061</td>\n",
              "      <td>1.595856636762619</td>\n",
              "      <td>0.4103304147720337</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>6681</td>\n",
              "      <td>Harvey Barnes</td>\n",
              "      <td>2</td>\n",
              "      <td>42</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5178110171109438</td>\n",
              "      <td>1</td>\n",
              "      <td>1.1135693788528442</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5178110171109438</td>\n",
              "      <td>1.689121499657631</td>\n",
              "      <td>0.6506789922714233</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>10846</td>\n",
              "      <td>Juli√°n √Ålvarez</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5955029129981995</td>\n",
              "      <td>1</td>\n",
              "      <td>0.6596553176641464</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5955029129981995</td>\n",
              "      <td>1.4987684488296509</td>\n",
              "      <td>0.6003369688987732</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>74</th>\n",
              "      <td>672</td>\n",
              "      <td>Jordan Ayew</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>0</td>\n",
              "      <td>0.31429271399974823</td>\n",
              "      <td>1</td>\n",
              "      <td>0.7697744444012642</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.31429271399974823</td>\n",
              "      <td>1.1069282591342926</td>\n",
              "      <td>0.7268648743629456</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>81</th>\n",
              "      <td>782</td>\n",
              "      <td>Ben Chilwell</td>\n",
              "      <td>2</td>\n",
              "      <td>160</td>\n",
              "      <td>0</td>\n",
              "      <td>0.38840607553720474</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8134539127349854</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.38840607553720474</td>\n",
              "      <td>0.638008363544941</td>\n",
              "      <td>0.24960225820541382</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>110</th>\n",
              "      <td>2199</td>\n",
              "      <td>Pablo Sarabia</td>\n",
              "      <td>2</td>\n",
              "      <td>98</td>\n",
              "      <td>0</td>\n",
              "      <td>0.09539437294006348</td>\n",
              "      <td>1</td>\n",
              "      <td>0.9607797563076019</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.09539437294006348</td>\n",
              "      <td>0.503137931227684</td>\n",
              "      <td>0.1007671095430851</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>135</th>\n",
              "      <td>5584</td>\n",
              "      <td>Aaron Wan-Bissaka</td>\n",
              "      <td>2</td>\n",
              "      <td>159</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0327167361974716</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.641403913497925</td>\n",
              "      <td>1.735001266002655</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>150</th>\n",
              "      <td>6055</td>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5386147797107697</td>\n",
              "      <td>1</td>\n",
              "      <td>0.8676768019795418</td>\n",
              "      <td>6</td>\n",
              "      <td>9</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5386147797107697</td>\n",
              "      <td>1.5521590113639832</td>\n",
              "      <td>0.8194546699523926</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>151</th>\n",
              "      <td>6063</td>\n",
              "      <td>Jacob Murphy</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.5514945983886719</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.5514945983886719</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>171</th>\n",
              "      <td>6888</td>\n",
              "      <td>William Saliba</td>\n",
              "      <td>2</td>\n",
              "      <td>180</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.037814829498529434</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.7344338297843933</td>\n",
              "      <td>0.7344338297843933</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>204</th>\n",
              "      <td>7752</td>\n",
              "      <td>Gabriel Martinelli</td>\n",
              "      <td>2</td>\n",
              "      <td>162</td>\n",
              "      <td>0</td>\n",
              "      <td>0.1310402899980545</td>\n",
              "      <td>1</td>\n",
              "      <td>0.12227851152420044</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.1310402899980545</td>\n",
              "      <td>0.9965443909168243</td>\n",
              "      <td>0.8062029778957367</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows √ó 46 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0dd7f824-0503-4699-9bb2-57aa43f7ece7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0dd7f824-0503-4699-9bb2-57aa43f7ece7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0dd7f824-0503-4699-9bb2-57aa43f7ece7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-15b8166a-7088-4e5d-a591-608f0e260391\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-15b8166a-7088-4e5d-a591-608f0e260391')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-15b8166a-7088-4e5d-a591-608f0e260391 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import plotly.graph_objects as go"
      ],
      "metadata": {
        "id": "t81EQEbg_2jQ"
      },
      "execution_count": 65,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig3= go.Figure()\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"goals\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'goals'))\n",
        "fig3.add_trace(go.Scatter(x = top25goals[\"xG_1wks_x\"],\n",
        "                          y = top25goals[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xG'))\n",
        "for i in range(0, len(top25goals)):\n",
        "               fig3.add_shape(type='line',\n",
        "                              x0 = top25goals[\"goals\"][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top25goals[\"xG_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig3.update_layout(title_text =\n",
        "                    \"Goals vs xG\",\n",
        "                    title_font_size = 30)\n",
        "fig3.update_xaxes(range=[0, 30])\n",
        "fig3.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "id": "pCjmRmyw-6sd",
        "outputId": "a694ebca-cdde-407f-86df-f47c8f41fa8c"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"e608c724-bf5e-430b-8ebb-fac07caa5dd4\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"e608c724-bf5e-430b-8ebb-fac07caa5dd4\")) {                    Plotly.newPlot(                        \"e608c724-bf5e-430b-8ebb-fac07caa5dd4\",                        [{\"marker\":{\"color\":\"darkblue\",\"size\":10},\"mode\":\"markers\",\"name\":\"goals\",\"x\":[3,3,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1],\"y\":[\"Solly March\",\"Bryan Mbeumo\",\"Alexander Isak\",\"Yoane Wissa\",\"Taiwo Awoniyi\",\"Erling Haaland\",\"Luis D\\u00edaz\",\"Callum Wilson\",\"Michail Antonio\",\"Mohamed Salah\",\"Dominic Solanke\",\"Jarrod Bowen\",\"Raphael Varane\",\"Rodri\",\"Martin Odegaard\",\"Odsonne Edouard\",\"Chris Wood\",\"Estupi\\u00f1\\u00e1n\",\"Leon Bailey\",\"Douglas Luiz\"],\"type\":\"scatter\"},{\"marker\":{\"color\":\"darkorange\",\"size\":10},\"mode\":\"markers\",\"name\":\"xG\",\"x\":[\"2.0221502780914307\",\"2.9682201147079468\",\"1.1635656356811523\",\"1.2056616991758347\",\"1.0606651902198792\",\"1.290044128894806\",\"1.1087555587291718\",\"1.220109462738037\",\"0.1654975563287735\",\"2.1068914383649826\",\"1.3614608347415924\",\"0.5545249581336975\",\"0.9178637377917767\",\"0.7942110300064087\",\"0.9319707900285721\",\"1.8570213317871094\",\"0.11083554476499557\",\"0.6160032898187637\",\"0.5992322564125061\",\"0.9703840911388397\"],\"y\":[\"Solly March\",\"Bryan Mbeumo\",\"Alexander Isak\",\"Yoane Wissa\",\"Taiwo Awoniyi\",\"Erling Haaland\",\"Luis D\\u00edaz\",\"Callum Wilson\",\"Michail Antonio\",\"Mohamed Salah\",\"Dominic Solanke\",\"Jarrod Bowen\",\"Raphael Varane\",\"Rodri\",\"Martin Odegaard\",\"Odsonne Edouard\",\"Chris Wood\",\"Estupi\\u00f1\\u00e1n\",\"Leon Bailey\",\"Douglas Luiz\"],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"shapes\":[{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.0221502780914307\",\"y0\":0,\"y1\":0},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":3,\"x1\":\"2.9682201147079468\",\"y0\":1,\"y1\":1},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.1635656356811523\",\"y0\":2,\"y1\":2},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.2056616991758347\",\"y0\":3,\"y1\":3},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.0606651902198792\",\"y0\":4,\"y1\":4},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.290044128894806\",\"y0\":5,\"y1\":5},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":2,\"x1\":\"1.1087555587291718\",\"y0\":6,\"y1\":6},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"1.220109462738037\",\"y0\":7,\"y1\":7},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"0.1654975563287735\",\"y0\":8,\"y1\":8},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"2.1068914383649826\",\"y0\":9,\"y1\":9},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"1.3614608347415924\",\"y0\":10,\"y1\":10},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"0.5545249581336975\",\"y0\":11,\"y1\":11},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"0.9178637377917767\",\"y0\":12,\"y1\":12},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"0.7942110300064087\",\"y0\":13,\"y1\":13},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"0.9319707900285721\",\"y0\":14,\"y1\":14},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"1.8570213317871094\",\"y0\":15,\"y1\":15},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"0.11083554476499557\",\"y0\":16,\"y1\":16},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"0.6160032898187637\",\"y0\":17,\"y1\":17},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"0.5992322564125061\",\"y0\":18,\"y1\":18},{\"line\":{\"color\":\"crimson\",\"width\":3},\"type\":\"line\",\"x0\":1,\"x1\":\"0.9703840911388397\",\"y0\":19,\"y1\":19}],\"title\":{\"font\":{\"size\":30},\"text\":\"Goals vs xG\"},\"xaxis\":{\"range\":[0,30]}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('e608c724-bf5e-430b-8ebb-fac07caa5dd4');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "seasonedit = one_game_df.drop(columns=[ 'yellow_cards','red_cards','time'])"
      ],
      "metadata": {
        "id": "zxhwefRPFQDN"
      },
      "execution_count": 67,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "top25assists.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wSmCXk6YFSz5",
        "outputId": "798be261-4a28-4872-ffb0-a2381012874f"
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['id', 'player_name', 'games_x', 'time_x', 'goals_1wks_x', 'xG_1wks_x',\n",
              "       'assists_1wks_x', 'xA_1wks_x', 'shots_1wks_x', 'key_passes_1wks_x',\n",
              "       'yellow_cards_x', 'red_cards_x', 'npg_1wks_x', 'npxG_1wks_x',\n",
              "       'xGChain_x', 'xGBuildup_x', 'games_y', 'time_y', 'goals_season',\n",
              "       'xG_season', 'assists_season', 'xA_season', 'shots_season',\n",
              "       'key_passes_season', 'yellow_cards_y', 'red_cards_y', 'npg_season',\n",
              "       'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games', 'time',\n",
              "       'goals_1wks_y', 'xG_1wks_y', 'assists_1wks_y', 'xA_1wks_y',\n",
              "       'shots_1wks_y', 'key_passes_1wks_y', 'yellow_cards', 'red_cards',\n",
              "       'npg_1wks_y', 'npxG_1wks_y', 'xGChain', 'xGBuildup', 'goals',\n",
              "       'assists'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "top20assists = top25assists.drop(columns=[ 'shots_2wks_x', 'key_passes_2wks_x',\n",
        "       'yellow_cards_x', 'red_cards_x', 'position_x', 'team_title_x',\n",
        "       'npg_2wks_x', 'npxG_2wks_x', 'xGChain_x', 'xGBuildup_x', 'games_y',\n",
        "       'time_y', 'goals_season', 'xG_season', 'assists_season', 'xA_season',\n",
        "       'shots_season', 'key_passes_season', 'yellow_cards_y', 'red_cards_y',\n",
        "       'npg_season', 'npxG_season', 'xGChain_y', 'xGBuildup_y', 'games',\n",
        "       'time', 'goals_2wks_y', 'xG_2wks_y', 'assists_2wks_y', 'xA_2wks_y',\n",
        "       'shots_2wks_y', 'key_passes_2wks_y', 'yellow_cards', 'red_cards',\n",
        "       'position_y', 'team_title_y', 'npg_2wks_y', 'npxG_2wks_y', 'xGChain',\n",
        "       'xGBuildup', 'assists_2wks_x', 'games_x', 'time_x', 'goals_2wks_x', 'id' ])\n",
        "\n",
        "top20assists.reset_index(inplace = True,drop = True)\n",
        "top20assists"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 407
        },
        "id": "_Xn659fiFXvb",
        "outputId": "e8710d52-17bb-406b-e954-140e61952486"
      },
      "execution_count": 72,
      "outputs": [
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-72-50495978d9fe>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m top20assists = top25assists.drop(columns=[ 'shots_2wks_x', 'key_passes_2wks_x',\n\u001b[0m\u001b[1;32m      2\u001b[0m        \u001b[0;34m'yellow_cards_x'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'red_cards_x'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'position_x'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'team_title_x'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m        \u001b[0;34m'npg_2wks_x'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'npxG_2wks_x'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'xGChain_x'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'xGBuildup_x'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'games_y'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m        \u001b[0;34m'time_y'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'goals_season'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'xG_season'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'assists_season'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'xA_season'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m        \u001b[0;34m'shots_season'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'key_passes_season'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'yellow_cards_y'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'red_cards_y'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    329\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfind_stack_level\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    330\u001b[0m                 )\n\u001b[0;32m--> 331\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m         \u001b[0;31m# error: \"Callable[[VarArg(Any), KwArg(Any)], Any]\" has no\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   5397\u001b[0m                 \u001b[0mweight\u001b[0m  \u001b[0;36m1.0\u001b[0m     \u001b[0;36m0.8\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5398\u001b[0m         \"\"\"\n\u001b[0;32m-> 5399\u001b[0;31m         return super().drop(\n\u001b[0m\u001b[1;32m   5400\u001b[0m             \u001b[0mlabels\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5401\u001b[0m             \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    329\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfind_stack_level\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    330\u001b[0m                 )\n\u001b[0;32m--> 331\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m         \u001b[0;31m# error: \"Callable[[VarArg(Any), KwArg(Any)], Any]\" has no\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4503\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32min\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4504\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4505\u001b[0;31m                 \u001b[0mobj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_drop_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4506\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4507\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_drop_axis\u001b[0;34m(self, labels, axis, level, errors, only_slice)\u001b[0m\n\u001b[1;32m   4544\u001b[0m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4545\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4546\u001b[0;31m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4547\u001b[0m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_axis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4548\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, errors)\u001b[0m\n\u001b[1;32m   6932\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mmask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0many\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6933\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0merrors\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m\"ignore\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6934\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"{list(labels[mask])} not found in axis\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6935\u001b[0m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6936\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdelete\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: \"['shots_2wks_x', 'key_passes_2wks_x', 'position_x', 'team_title_x', 'npg_2wks_x', 'npxG_2wks_x', 'goals_2wks_y', 'xG_2wks_y', 'assists_2wks_y', 'xA_2wks_y', 'shots_2wks_y', 'key_passes_2wks_y', 'position_y', 'team_title_y', 'npg_2wks_y', 'npxG_2wks_y', 'assists_2wks_x', 'goals_2wks_x'] not found in axis\""
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig4= go.Figure()\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"assists\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkblue',\n",
        "                          marker_size = 10,\n",
        "                          name = 'assists'))\n",
        "fig4.add_trace(go.Scatter(x = top20assists[\"xA_1wks_x\"],\n",
        "                          y = top20assists[\"player_name\"],\n",
        "                          mode = 'markers',\n",
        "                          marker_color = 'darkorange',\n",
        "                          marker_size = 10,\n",
        "                          name = 'xA'))\n",
        "for i in range(0, len(top20assists)):\n",
        "               fig4.add_shape(type='line',\n",
        "                              x0 = top20assists['assists'][i],\n",
        "                              y0 = i,\n",
        "                              x1 = top20assists[\"xA_1wks_x\"][i],\n",
        "                              y1 = i,\n",
        "                              line=dict(color='crimson', width = 3))\n",
        "fig4.update_layout(title_text =\n",
        "                    \"assists vs xG\",\n",
        "                    title_font_size = 15)\n",
        "fig4.update_xaxes(range=[0, 15])\n",
        "fig4.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        },
        "id": "P6oVjqCSF4Pw",
        "outputId": "e01f99e3-a372-4ea4-d979-987a819dc21d"
      },
      "execution_count": 74,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-74-4eb79fee619c>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mfig4\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0mgo\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mFigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m fig4.add_trace(go.Scatter(x = top20assists[\"assists\"],\n\u001b[0m\u001b[1;32m      3\u001b[0m                           \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtop20assists\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"player_name\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m                           \u001b[0mmode\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'markers'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m                           \u001b[0mmarker_color\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'darkblue'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'top20assists' is not defined"
          ]
        }
      ]
    }
  ]
}